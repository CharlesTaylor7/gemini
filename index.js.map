{
  "version": 3,
  "sources": ["../output/Data.Ord/foreign.js", "../output/Data.Eq/foreign.js", "../output/Type.Proxy/index.js", "../output/Data.Symbol/index.js", "../output/Record.Unsafe/foreign.js", "../output/Data.Eq/index.js", "../output/Data.Ordering/index.js", "../output/Data.Ring/foreign.js", "../output/Data.Semiring/foreign.js", "../output/Data.Semiring/index.js", "../output/Data.Ring/index.js", "../output/Data.Ord/index.js", "../output/FRP.Event/foreign.js", "../output/Data.Functor/foreign.js", "../output/Control.Semigroupoid/index.js", "../output/Control.Category/index.js", "../output/Data.Boolean/index.js", "../output/Data.Function/index.js", "../output/Data.Functor/index.js", "../output/Data.Semigroup/foreign.js", "../output/Data.Semigroup/index.js", "../output/Control.Alt/index.js", "../output/Control.Apply/index.js", "../output/Control.Applicative/index.js", "../output/Unsafe.Coerce/foreign.js", "../output/Control.Monad.ST.Global/index.js", "../output/Control.Monad.ST.Internal/foreign.js", "../output/Control.Bind/index.js", "../output/Control.Monad/index.js", "../output/Data.Bounded/foreign.js", "../output/Data.Bounded/index.js", "../output/Data.Show/foreign.js", "../output/Data.Show/index.js", "../output/Data.Generic.Rep/index.js", "../output/Data.Maybe/index.js", "../output/Data.Either/index.js", "../output/Data.Identity/index.js", "../output/Data.EuclideanRing/foreign.js", "../output/Data.CommutativeRing/index.js", "../output/Data.EuclideanRing/index.js", "../output/Data.Monoid/index.js", "../output/Effect/foreign.js", "../output/Effect/index.js", "../output/Effect.Ref/foreign.js", "../output/Effect.Ref/index.js", "../output/Control.Monad.ST.Internal/index.js", "../output/Control.Monad.ST.Class/index.js", "../output/Data.Array/foreign.js", "../output/Data.Array.ST/foreign.js", "../output/Control.Monad.ST.Uncurried/foreign.js", "../output/Data.Array.ST/index.js", "../output/Data.Foldable/foreign.js", "../output/Control.Plus/index.js", "../output/Data.Tuple/index.js", "../output/Safe.Coerce/index.js", "../output/Data.Newtype/index.js", "../output/Data.Foldable/index.js", "../output/Data.Function.Uncurried/foreign.js", "../output/Data.FunctorWithIndex/foreign.js", "../output/Data.FunctorWithIndex/index.js", "../output/Data.Traversable/foreign.js", "../output/Data.Unfoldable1/foreign.js", "../output/Data.Unfoldable1/index.js", "../output/Data.Array/index.js", "../output/Data.FoldableWithIndex/index.js", "../output/Data.List.Types/index.js", "../output/Data.List/index.js", "../output/Data.Map.Internal/index.js", "../output/Data.Filterable/index.js", "../output/Data.Set/index.js", "../output/Effect.Timer/foreign.js", "../output/Effect.Timer/index.js", "../output/Effect.Uncurried/foreign.js", "../output/Effect.Uncurried/index.js", "../output/FRP.Event.Class/index.js", "../output/Unsafe.Reference/foreign.js", "../output/Unsafe.Reference/index.js", "../output/FRP.Event/index.js", "../output/Record/index.js", "../output/Bolson.Core/index.js", "../output/Data.Array.NonEmpty.Internal/foreign.js", "../output/Data.Reflectable/index.js", "../output/Foreign.Object/foreign.js", "../output/Foreign.Object.ST/foreign.js", "../output/Foreign.Object/index.js", "../output/Bolson.Control/index.js", "../output/Data.CatQueue/index.js", "../output/Data.CatList/index.js", "../output/Control.Monad.Free/index.js", "../output/Data.Profunctor/index.js", "../output/Deku.Attribute/index.js", "../output/Deku.Core/index.js", "../output/Deku.Control/index.js", "../output/Deku.Interpret/foreign.js", "../output/Data.String.Utils/foreign.js", "../output/Data.String.CodePoints/foreign.js", "../output/Control.Alternative/index.js", "../output/Data.Enum/index.js", "../output/Data.Int/foreign.js", "../output/Data.Number/foreign.js", "../output/Data.Number/index.js", "../output/Data.Int/index.js", "../output/Data.String.Common/foreign.js", "../output/Data.String.Utils/index.js", "../output/Random.LCG/index.js", "../output/Control.Monad.State.Class/index.js", "../output/Control.Monad.State.Trans/index.js", "../output/Control.Monad.State/index.js", "../output/Test.QuickCheck.Gen/index.js", "../output/Test.QuickCheck.Arbitrary/index.js", "../output/Deku.Interpret/index.js", "../output/Web.HTML/foreign.js", "../output/Data.Nullable/foreign.js", "../output/Data.Nullable/index.js", "../output/Web.HTML.HTMLDocument/foreign.js", "../output/Web.HTML.HTMLDocument/index.js", "../output/Web.HTML.HTMLElement/index.js", "../output/Web.HTML.Window/foreign.js", "../output/Deku.Toplevel/index.js", "../output/Deku.DOM.Attr.Class/index.js", "../output/Deku.DOM.Attr.Href/index.js", "../output/Deku.DOM.Attr.Style/index.js", "../output/Deku.Attributes/index.js", "../output/Deku.DOM.Attr.Src/index.js", "../output/Deku.DOM.Elt.Button/index.js", "../output/Deku.DOM.Elt.Div/index.js", "../output/Deku.Do/index.js", "../output/Effect.Aff/foreign.js", "../output/Deku.Hooks/index.js", "../output/Deku.Pursx/index.js", "../output/Data.Angle/index.js", "../output/Data.Typelevel.Undefined/index.js", "../output/Data.Typelevel.Num.Sets/index.js", "../output/Data.Nat/index.js", "../output/Data.Cyclic/index.js", "../output/Data.Finitary/index.js", "../output/Data.Show.Generic/foreign.js", "../output/Data.Show.Generic/index.js", "../output/Data.Gemini/index.js", "../output/Deku.DOM.Elt.Span/index.js", "../output/Gemini.Component.Puzzle/index.js", "../output/Gemini.Types/index.js", "../output/Gemini.Component.App/index.js", "../output/Main/index.js", "<stdin>"],
  "sourcesContent": ["var unsafeCompareImpl = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (x) {\n        return function (y) {\n          return x < y ? lt : x === y ? eq : gt;\n        };\n      };\n    };\n  };\n};\n\nexport const ordBooleanImpl = unsafeCompareImpl;\nexport const ordIntImpl = unsafeCompareImpl;\nexport const ordNumberImpl = unsafeCompareImpl;\nexport const ordStringImpl = unsafeCompareImpl;\nexport const ordCharImpl = unsafeCompareImpl;\n\nexport const ordArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      var i = 0;\n      var xlen = xs.length;\n      var ylen = ys.length;\n      while (i < xlen && i < ylen) {\n        var x = xs[i];\n        var y = ys[i];\n        var o = f(x)(y);\n        if (o !== 0) {\n          return o;\n        }\n        i++;\n      }\n      if (xlen === ylen) {\n        return 0;\n      } else if (xlen > ylen) {\n        return -1;\n      } else {\n        return 1;\n      }\n    };\n  };\n};\n", "var refEq = function (r1) {\n  return function (r2) {\n    return r1 === r2;\n  };\n};\n\nexport const eqBooleanImpl = refEq;\nexport const eqIntImpl = refEq;\nexport const eqNumberImpl = refEq;\nexport const eqCharImpl = refEq;\nexport const eqStringImpl = refEq;\n\nexport const eqArrayImpl = function (f) {\n  return function (xs) {\n    return function (ys) {\n      if (xs.length !== ys.length) return false;\n      for (var i = 0; i < xs.length; i++) {\n        if (!f(xs[i])(ys[i])) return false;\n      }\n      return true;\n    };\n  };\n};\n", "// Generated by purs version 0.15.10\nvar $$Proxy = /* #__PURE__ */ (function () {\n    function $$Proxy() {\n\n    };\n    $$Proxy.value = new $$Proxy();\n    return $$Proxy;\n})();\nexport {\n    $$Proxy as Proxy\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar reifySymbol = function (s) {\n    return function (f) {\n        return $foreign.unsafeCoerce(function (dictIsSymbol) {\n            return f(dictIsSymbol);\n        })({\n            reflectSymbol: function (v) {\n                return s;\n            }\n        })(Type_Proxy[\"Proxy\"].value);\n    };\n};\nvar reflectSymbol = function (dict) {\n    return dict.reflectSymbol;\n};\nexport {\n    reflectSymbol,\n    reifySymbol\n};\n", "export const unsafeHas = function (label) {\n  return function (rec) {\n    return {}.hasOwnProperty.call(rec, label);\n  };\n};\n\nexport const unsafeGet = function (label) {\n  return function (rec) {\n    return rec[label];\n  };\n};\n\nexport const unsafeSet = function (label) {\n  return function (value) {\n    return function (rec) {\n      var copy = {};\n      for (var key in rec) {\n        if ({}.hasOwnProperty.call(rec, key)) {\n          copy[key] = rec[key];\n        }\n      }\n      copy[label] = value;\n      return copy;\n    };\n  };\n};\n\nexport const unsafeDelete = function (label) {\n  return function (rec) {\n    var copy = {};\n    for (var key in rec) {\n      if (key !== label && {}.hasOwnProperty.call(rec, key)) {\n        copy[key] = rec[key];\n      }\n    }\n    return copy;\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar eqVoid = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqUnit = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqString = {\n    eq: $foreign.eqStringImpl\n};\nvar eqRowNil = {\n    eqRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return true;\n            };\n        };\n    }\n};\nvar eqRecord = function (dict) {\n    return dict.eqRecord;\n};\nvar eqRec = function () {\n    return function (dictEqRecord) {\n        return {\n            eq: eqRecord(dictEqRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar eqProxy = {\n    eq: function (v) {\n        return function (v1) {\n            return true;\n        };\n    }\n};\nvar eqNumber = {\n    eq: $foreign.eqNumberImpl\n};\nvar eqInt = {\n    eq: $foreign.eqIntImpl\n};\nvar eqChar = {\n    eq: $foreign.eqCharImpl\n};\nvar eqBoolean = {\n    eq: $foreign.eqBooleanImpl\n};\nvar eq1 = function (dict) {\n    return dict.eq1;\n};\nvar eq = function (dict) {\n    return dict.eq;\n};\nvar eq2 = /* #__PURE__ */ eq(eqBoolean);\nvar eqArray = function (dictEq) {\n    return {\n        eq: $foreign.eqArrayImpl(eq(dictEq))\n    };\n};\nvar eq1Array = {\n    eq1: function (dictEq) {\n        return eq(eqArray(dictEq));\n    }\n};\nvar eqRowCons = function (dictEqRecord) {\n    var eqRecord1 = eqRecord(dictEqRecord);\n    return function () {\n        return function (dictIsSymbol) {\n            var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n            return function (dictEq) {\n                var eq3 = eq(dictEq);\n                return {\n                    eqRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = eqRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return eq3(get(ra))(get(rb)) && tail;\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nvar notEq = function (dictEq) {\n    var eq3 = eq(dictEq);\n    return function (x) {\n        return function (y) {\n            return eq2(eq3(x)(y))(false);\n        };\n    };\n};\nvar notEq1 = function (dictEq1) {\n    var eq11 = eq1(dictEq1);\n    return function (dictEq) {\n        var eq12 = eq11(dictEq);\n        return function (x) {\n            return function (y) {\n                return eq2(eq12(x)(y))(false);\n            };\n        };\n    };\n};\nexport {\n    eq,\n    notEq,\n    eq1,\n    notEq1,\n    eqRecord,\n    eqBoolean,\n    eqInt,\n    eqNumber,\n    eqChar,\n    eqString,\n    eqUnit,\n    eqVoid,\n    eqArray,\n    eqRec,\n    eqProxy,\n    eq1Array,\n    eqRowNil,\n    eqRowCons\n};\n", "// Generated by purs version 0.15.10\nvar LT = /* #__PURE__ */ (function () {\n    function LT() {\n\n    };\n    LT.value = new LT();\n    return LT;\n})();\nvar GT = /* #__PURE__ */ (function () {\n    function GT() {\n\n    };\n    GT.value = new GT();\n    return GT;\n})();\nvar EQ = /* #__PURE__ */ (function () {\n    function EQ() {\n\n    };\n    EQ.value = new EQ();\n    return EQ;\n})();\nvar showOrdering = {\n    show: function (v) {\n        if (v instanceof LT) {\n            return \"LT\";\n        };\n        if (v instanceof GT) {\n            return \"GT\";\n        };\n        if (v instanceof EQ) {\n            return \"EQ\";\n        };\n        throw new Error(\"Failed pattern match at Data.Ordering (line 26, column 1 - line 29, column 17): \" + [ v.constructor.name ]);\n    }\n};\nvar semigroupOrdering = {\n    append: function (v) {\n        return function (v1) {\n            if (v instanceof LT) {\n                return LT.value;\n            };\n            if (v instanceof GT) {\n                return GT.value;\n            };\n            if (v instanceof EQ) {\n                return v1;\n            };\n            throw new Error(\"Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar invert = function (v) {\n    if (v instanceof GT) {\n        return LT.value;\n    };\n    if (v instanceof EQ) {\n        return EQ.value;\n    };\n    if (v instanceof LT) {\n        return GT.value;\n    };\n    throw new Error(\"Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): \" + [ v.constructor.name ]);\n};\nvar eqOrdering = {\n    eq: function (v) {\n        return function (v1) {\n            if (v instanceof LT && v1 instanceof LT) {\n                return true;\n            };\n            if (v instanceof GT && v1 instanceof GT) {\n                return true;\n            };\n            if (v instanceof EQ && v1 instanceof EQ) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nexport {\n    LT,\n    GT,\n    EQ,\n    invert,\n    eqOrdering,\n    semigroupOrdering,\n    showOrdering\n};\n", "export const intSub = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x - y | 0;\n  };\n};\n\nexport const numSub = function (n1) {\n  return function (n2) {\n    return n1 - n2;\n  };\n};\n", "export const intAdd = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x + y | 0;\n  };\n};\n\nexport const intMul = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x * y | 0;\n  };\n};\n\nexport const numAdd = function (n1) {\n  return function (n2) {\n    return n1 + n2;\n  };\n};\n\nexport const numMul = function (n1) {\n  return function (n2) {\n    return n1 * n2;\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar zeroRecord = function (dict) {\n    return dict.zeroRecord;\n};\nvar zero = function (dict) {\n    return dict.zero;\n};\nvar semiringUnit = {\n    add: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    zero: Data_Unit.unit,\n    mul: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    one: Data_Unit.unit\n};\nvar semiringRecordNil = {\n    addRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    mulRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    oneRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    zeroRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    }\n};\nvar semiringProxy = /* #__PURE__ */ (function () {\n    return {\n        add: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        mul: function (v) {\n            return function (v1) {\n                return Type_Proxy[\"Proxy\"].value;\n            };\n        },\n        one: Type_Proxy[\"Proxy\"].value,\n        zero: Type_Proxy[\"Proxy\"].value\n    };\n})();\nvar semiringNumber = {\n    add: $foreign.numAdd,\n    zero: 0.0,\n    mul: $foreign.numMul,\n    one: 1.0\n};\nvar semiringInt = {\n    add: $foreign.intAdd,\n    zero: 0,\n    mul: $foreign.intMul,\n    one: 1\n};\nvar oneRecord = function (dict) {\n    return dict.oneRecord;\n};\nvar one = function (dict) {\n    return dict.one;\n};\nvar mulRecord = function (dict) {\n    return dict.mulRecord;\n};\nvar mul = function (dict) {\n    return dict.mul;\n};\nvar addRecord = function (dict) {\n    return dict.addRecord;\n};\nvar semiringRecord = function () {\n    return function (dictSemiringRecord) {\n        return {\n            add: addRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value),\n            mul: mulRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value),\n            one: oneRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            zero: zeroRecord(dictSemiringRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar add = function (dict) {\n    return dict.add;\n};\nvar semiringFn = function (dictSemiring) {\n    var add1 = add(dictSemiring);\n    var zero1 = zero(dictSemiring);\n    var mul1 = mul(dictSemiring);\n    var one1 = one(dictSemiring);\n    return {\n        add: function (f) {\n            return function (g) {\n                return function (x) {\n                    return add1(f(x))(g(x));\n                };\n            };\n        },\n        zero: function (v) {\n            return zero1;\n        },\n        mul: function (f) {\n            return function (g) {\n                return function (x) {\n                    return mul1(f(x))(g(x));\n                };\n            };\n        },\n        one: function (v) {\n            return one1;\n        }\n    };\n};\nvar semiringRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictSemiringRecord) {\n            var addRecord1 = addRecord(dictSemiringRecord);\n            var mulRecord1 = mulRecord(dictSemiringRecord);\n            var oneRecord1 = oneRecord(dictSemiringRecord);\n            var zeroRecord1 = zeroRecord(dictSemiringRecord);\n            return function (dictSemiring) {\n                var add1 = add(dictSemiring);\n                var mul1 = mul(dictSemiring);\n                var one1 = one(dictSemiring);\n                var zero1 = zero(dictSemiring);\n                return {\n                    addRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = addRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(add1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    mulRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = mulRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(mul1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    oneRecord: function (v) {\n                        return function (v1) {\n                            var tail = oneRecord1(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(one1)(tail);\n                        };\n                    },\n                    zeroRecord: function (v) {\n                        return function (v1) {\n                            var tail = zeroRecord1(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value);\n                            var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                            var insert = Record_Unsafe.unsafeSet(key);\n                            return insert(zero1)(tail);\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    add,\n    zero,\n    mul,\n    one,\n    addRecord,\n    mulRecord,\n    oneRecord,\n    zeroRecord,\n    semiringInt,\n    semiringNumber,\n    semiringFn,\n    semiringUnit,\n    semiringProxy,\n    semiringRecord,\n    semiringRecordNil,\n    semiringRecordCons\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semiringRecord = /* #__PURE__ */ Data_Semiring.semiringRecord();\nvar subRecord = function (dict) {\n    return dict.subRecord;\n};\nvar sub = function (dict) {\n    return dict.sub;\n};\nvar ringUnit = {\n    sub: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    },\n    Semiring0: function () {\n        return Data_Semiring.semiringUnit;\n    }\n};\nvar ringRecordNil = {\n    subRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    },\n    SemiringRecord0: function () {\n        return Data_Semiring.semiringRecordNil;\n    }\n};\nvar ringRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    var semiringRecordCons = Data_Semiring.semiringRecordCons(dictIsSymbol)();\n    return function () {\n        return function (dictRingRecord) {\n            var subRecord1 = subRecord(dictRingRecord);\n            var semiringRecordCons1 = semiringRecordCons(dictRingRecord.SemiringRecord0());\n            return function (dictRing) {\n                var sub1 = sub(dictRing);\n                var semiringRecordCons2 = semiringRecordCons1(dictRing.Semiring0());\n                return {\n                    subRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = subRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(sub1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    },\n                    SemiringRecord0: function () {\n                        return semiringRecordCons2;\n                    }\n                };\n            };\n        };\n    };\n};\nvar ringRecord = function () {\n    return function (dictRingRecord) {\n        var semiringRecord1 = semiringRecord(dictRingRecord.SemiringRecord0());\n        return {\n            sub: subRecord(dictRingRecord)(Type_Proxy[\"Proxy\"].value),\n            Semiring0: function () {\n                return semiringRecord1;\n            }\n        };\n    };\n};\nvar ringProxy = {\n    sub: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Semiring0: function () {\n        return Data_Semiring.semiringProxy;\n    }\n};\nvar ringNumber = {\n    sub: $foreign.numSub,\n    Semiring0: function () {\n        return Data_Semiring.semiringNumber;\n    }\n};\nvar ringInt = {\n    sub: $foreign.intSub,\n    Semiring0: function () {\n        return Data_Semiring.semiringInt;\n    }\n};\nvar ringFn = function (dictRing) {\n    var sub1 = sub(dictRing);\n    var semiringFn = Data_Semiring.semiringFn(dictRing.Semiring0());\n    return {\n        sub: function (f) {\n            return function (g) {\n                return function (x) {\n                    return sub1(f(x))(g(x));\n                };\n            };\n        },\n        Semiring0: function () {\n            return semiringFn;\n        }\n    };\n};\nvar negate = function (dictRing) {\n    var sub1 = sub(dictRing);\n    var zero = Data_Semiring.zero(dictRing.Semiring0());\n    return function (a) {\n        return sub1(zero)(a);\n    };\n};\nexport {\n    sub,\n    negate,\n    subRecord,\n    ringInt,\n    ringNumber,\n    ringUnit,\n    ringFn,\n    ringProxy,\n    ringRecord,\n    ringRecordNil,\n    ringRecordCons\n};\nexport {\n    add,\n    mul,\n    one,\n    zero\n} from \"../Data.Semiring/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar eqRec = /* #__PURE__ */ Data_Eq.eqRec();\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar ordVoid = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqVoid;\n    }\n};\nvar ordUnit = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqUnit;\n    }\n};\nvar ordString = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqString;\n        }\n    };\n})();\nvar ordRecordNil = {\n    compareRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return Data_Ordering.EQ.value;\n            };\n        };\n    },\n    EqRecord0: function () {\n        return Data_Eq.eqRowNil;\n    }\n};\nvar ordProxy = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.EQ.value;\n        };\n    },\n    Eq0: function () {\n        return Data_Eq.eqProxy;\n    }\n};\nvar ordOrdering = {\n    compare: function (v) {\n        return function (v1) {\n            if (v instanceof Data_Ordering.LT && v1 instanceof Data_Ordering.LT) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.EQ) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.GT && v1 instanceof Data_Ordering.GT) {\n                return Data_Ordering.EQ.value;\n            };\n            if (v instanceof Data_Ordering.LT) {\n                return Data_Ordering.LT.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.LT) {\n                return Data_Ordering.GT.value;\n            };\n            if (v instanceof Data_Ordering.EQ && v1 instanceof Data_Ordering.GT) {\n                return Data_Ordering.LT.value;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return Data_Ordering.GT.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 126, column 1 - line 133, column 20): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return Data_Ordering.eqOrdering;\n    }\n};\nvar ordNumber = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqNumber;\n        }\n    };\n})();\nvar ordInt = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqInt;\n        }\n    };\n})();\nvar ordChar = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqChar;\n        }\n    };\n})();\nvar ordBoolean = /* #__PURE__ */ (function () {\n    return {\n        compare: $foreign.ordBooleanImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),\n        Eq0: function () {\n            return Data_Eq.eqBoolean;\n        }\n    };\n})();\nvar compareRecord = function (dict) {\n    return dict.compareRecord;\n};\nvar ordRecord = function () {\n    return function (dictOrdRecord) {\n        var eqRec1 = eqRec(dictOrdRecord.EqRecord0());\n        return {\n            compare: compareRecord(dictOrdRecord)(Type_Proxy[\"Proxy\"].value),\n            Eq0: function () {\n                return eqRec1;\n            }\n        };\n    };\n};\nvar compare1 = function (dict) {\n    return dict.compare1;\n};\nvar compare = function (dict) {\n    return dict.compare;\n};\nvar compare2 = /* #__PURE__ */ compare(ordInt);\nvar comparing = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (f) {\n        return function (x) {\n            return function (y) {\n                return compare3(f(x))(f(y));\n            };\n        };\n    };\n};\nvar greaterThan = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar greaterThanOrEq = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar lessThan = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.LT) {\n                return true;\n            };\n            return false;\n        };\n    };\n};\nvar signum = function (dictOrd) {\n    var lessThan1 = lessThan(dictOrd);\n    var greaterThan1 = greaterThan(dictOrd);\n    return function (dictRing) {\n        var Semiring0 = dictRing.Semiring0();\n        var zero = Data_Semiring.zero(Semiring0);\n        var negate1 = Data_Ring.negate(dictRing);\n        var one = Data_Semiring.one(Semiring0);\n        return function (x) {\n            var $89 = lessThan1(x)(zero);\n            if ($89) {\n                return negate1(one);\n            };\n            var $90 = greaterThan1(x)(zero);\n            if ($90) {\n                return one;\n            };\n            return x;\n        };\n    };\n};\nvar lessThanOrEq = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (a1) {\n        return function (a2) {\n            var v = compare3(a1)(a2);\n            if (v instanceof Data_Ordering.GT) {\n                return false;\n            };\n            return true;\n        };\n    };\n};\nvar max = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (x) {\n        return function (y) {\n            var v = compare3(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return y;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return x;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar min = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    return function (x) {\n        return function (y) {\n            var v = compare3(x)(y);\n            if (v instanceof Data_Ordering.LT) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return x;\n            };\n            if (v instanceof Data_Ordering.GT) {\n                return y;\n            };\n            throw new Error(\"Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar ordArray = function (dictOrd) {\n    var compare3 = compare(dictOrd);\n    var eqArray = Data_Eq.eqArray(dictOrd.Eq0());\n    return {\n        compare: (function () {\n            var toDelta = function (x) {\n                return function (y) {\n                    var v = compare3(x)(y);\n                    if (v instanceof Data_Ordering.EQ) {\n                        return 0;\n                    };\n                    if (v instanceof Data_Ordering.LT) {\n                        return 1;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return -1 | 0;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): \" + [ v.constructor.name ]);\n                };\n            };\n            return function (xs) {\n                return function (ys) {\n                    return compare2(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));\n                };\n            };\n        })(),\n        Eq0: function () {\n            return eqArray;\n        }\n    };\n};\nvar ord1Array = {\n    compare1: function (dictOrd) {\n        return compare(ordArray(dictOrd));\n    },\n    Eq10: function () {\n        return Data_Eq.eq1Array;\n    }\n};\nvar ordRecordCons = function (dictOrdRecord) {\n    var compareRecord1 = compareRecord(dictOrdRecord);\n    var eqRowCons = Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())();\n    return function () {\n        return function (dictIsSymbol) {\n            var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n            var eqRowCons1 = eqRowCons(dictIsSymbol);\n            return function (dictOrd) {\n                var compare3 = compare(dictOrd);\n                var eqRowCons2 = eqRowCons1(dictOrd.Eq0());\n                return {\n                    compareRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var left = compare3(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));\n                                var $95 = notEq(left)(Data_Ordering.EQ.value);\n                                if ($95) {\n                                    return left;\n                                };\n                                return compareRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                            };\n                        };\n                    },\n                    EqRecord0: function () {\n                        return eqRowCons2;\n                    }\n                };\n            };\n        };\n    };\n};\nvar clamp = function (dictOrd) {\n    var min1 = min(dictOrd);\n    var max1 = max(dictOrd);\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                return min1(hi)(max1(low)(x));\n            };\n        };\n    };\n};\nvar between = function (dictOrd) {\n    var lessThan1 = lessThan(dictOrd);\n    var greaterThan1 = greaterThan(dictOrd);\n    return function (low) {\n        return function (hi) {\n            return function (x) {\n                if (lessThan1(x)(low)) {\n                    return false;\n                };\n                if (greaterThan1(x)(hi)) {\n                    return false;\n                };\n                return true;\n            };\n        };\n    };\n};\nvar abs = function (dictOrd) {\n    var greaterThanOrEq1 = greaterThanOrEq(dictOrd);\n    return function (dictRing) {\n        var zero = Data_Semiring.zero(dictRing.Semiring0());\n        var negate1 = Data_Ring.negate(dictRing);\n        return function (x) {\n            var $99 = greaterThanOrEq1(x)(zero);\n            if ($99) {\n                return x;\n            };\n            return negate1(x);\n        };\n    };\n};\nexport {\n    compare,\n    compare1,\n    lessThan,\n    lessThanOrEq,\n    greaterThan,\n    greaterThanOrEq,\n    comparing,\n    min,\n    max,\n    clamp,\n    between,\n    abs,\n    signum,\n    compareRecord,\n    ordBoolean,\n    ordInt,\n    ordNumber,\n    ordString,\n    ordChar,\n    ordUnit,\n    ordVoid,\n    ordProxy,\n    ordArray,\n    ordOrdering,\n    ord1Array,\n    ordRecordNil,\n    ordRecordCons,\n    ordRecord\n};\nexport {\n    EQ,\n    GT,\n    LT\n} from \"../Data.Ordering/index.js\";\n", "export const fastForeachThunk = (as) => {\n    for (var i = 0, l = as.length; i < l; i++) {\n        as[i]();\n    }\n}\n\nexport const fastForeachE = (as, f) => {\n    for (var i = 0, l = as.length; i < l; i++) {\n        f(as[i]);\n    }\n}\n\nexport const fastForeachOhE = (o, f) => {\n  for (const a in o) {\n      f(o[a]);\n  }\n}\n\nexport const objHack = () => ({});\n\nexport const insertObjHack = (k,v,o) => { o[k] = v; }\n\nexport const deleteObjHack = (k,o) => { delete o[k]; }\n", "export const arrayMap = function (f) {\n  return function (arr) {\n    var l = arr.length;\n    var result = new Array(l);\n    for (var i = 0; i < l; i++) {\n      result[i] = f(arr[i]);\n    }\n    return result;\n  };\n};\n", "// Generated by purs version 0.15.10\nvar semigroupoidFn = {\n    compose: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(g(x));\n            };\n        };\n    }\n};\nvar compose = function (dict) {\n    return dict.compose;\n};\nvar composeFlipped = function (dictSemigroupoid) {\n    var compose1 = compose(dictSemigroupoid);\n    return function (f) {\n        return function (g) {\n            return compose1(g)(f);\n        };\n    };\n};\nexport {\n    compose,\n    composeFlipped,\n    semigroupoidFn\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nvar identity = function (dict) {\n    return dict.identity;\n};\nvar categoryFn = {\n    identity: function (x) {\n        return x;\n    },\n    Semigroupoid0: function () {\n        return Control_Semigroupoid.semigroupoidFn;\n    }\n};\nexport {\n    identity,\n    categoryFn\n};\nexport {\n    compose\n} from \"../Control.Semigroupoid/index.js\";\n", "// Generated by purs version 0.15.10\nvar otherwise = true;\nexport {\n    otherwise\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nvar on = function (f) {\n    return function (g) {\n        return function (x) {\n            return function (y) {\n                return f(g(x))(g(y));\n            };\n        };\n    };\n};\nvar flip = function (f) {\n    return function (b) {\n        return function (a) {\n            return f(a)(b);\n        };\n    };\n};\nvar $$const = function (a) {\n    return function (v) {\n        return a;\n    };\n};\nvar applyN = function (f) {\n    var go = function ($copy_n) {\n        return function ($copy_acc) {\n            var $tco_var_n = $copy_n;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(n, acc) {\n                if (n <= 0) {\n                    $tco_done = true;\n                    return acc;\n                };\n                if (Data_Boolean.otherwise) {\n                    $tco_var_n = n - 1 | 0;\n                    $copy_acc = f(acc);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Function (line 107, column 3 - line 109, column 37): \" + [ n.constructor.name, acc.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_n, $copy_acc);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar applyFlipped = function (x) {\n    return function (f) {\n        return f(x);\n    };\n};\nvar apply = function (f) {\n    return function (x) {\n        return f(x);\n    };\n};\nexport {\n    flip,\n    $$const as const,\n    apply,\n    applyFlipped,\n    applyN,\n    on\n};\nexport {\n    compose,\n    identity\n} from \"../Control.Category/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar map = function (dict) {\n    return dict.map;\n};\nvar mapFlipped = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (fa) {\n        return function (f) {\n            return map1(f)(fa);\n        };\n    };\n};\nvar $$void = function (dictFunctor) {\n    return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n};\nvar voidLeft = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (f) {\n        return function (x) {\n            return map1(Data_Function[\"const\"](x))(f);\n        };\n    };\n};\nvar voidRight = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (x) {\n        return map1(Data_Function[\"const\"](x));\n    };\n};\nvar functorProxy = {\n    map: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar functorFn = {\n    map: /* #__PURE__ */ Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)\n};\nvar functorArray = {\n    map: $foreign.arrayMap\n};\nvar flap = function (dictFunctor) {\n    var map1 = map(dictFunctor);\n    return function (ff) {\n        return function (x) {\n            return map1(function (f) {\n                return f(x);\n            })(ff);\n        };\n    };\n};\nexport {\n    map,\n    mapFlipped,\n    $$void as void,\n    voidRight,\n    voidLeft,\n    flap,\n    functorFn,\n    functorArray,\n    functorProxy\n};\n", "export const concatString = function (s1) {\n  return function (s2) {\n    return s1 + s2;\n  };\n};\n\nexport const concatArray = function (xs) {\n  return function (ys) {\n    if (xs.length === 0) return ys;\n    if (ys.length === 0) return xs;\n    return xs.concat(ys);\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Data_Void from \"../Data.Void/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semigroupVoid = {\n    append: function (v) {\n        return Data_Void.absurd;\n    }\n};\nvar semigroupUnit = {\n    append: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    }\n};\nvar semigroupString = {\n    append: $foreign.concatString\n};\nvar semigroupRecordNil = {\n    appendRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    }\n};\nvar semigroupProxy = {\n    append: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar semigroupArray = {\n    append: $foreign.concatArray\n};\nvar appendRecord = function (dict) {\n    return dict.appendRecord;\n};\nvar semigroupRecord = function () {\n    return function (dictSemigroupRecord) {\n        return {\n            append: appendRecord(dictSemigroupRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar append = function (dict) {\n    return dict.append;\n};\nvar semigroupFn = function (dictSemigroup) {\n    var append1 = append(dictSemigroup);\n    return {\n        append: function (f) {\n            return function (g) {\n                return function (x) {\n                    return append1(f(x))(g(x));\n                };\n            };\n        }\n    };\n};\nvar semigroupRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (dictSemigroupRecord) {\n            var appendRecord1 = appendRecord(dictSemigroupRecord);\n            return function (dictSemigroup) {\n                var append1 = append(dictSemigroup);\n                return {\n                    appendRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = appendRecord1(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(append1(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    append,\n    appendRecord,\n    semigroupString,\n    semigroupUnit,\n    semigroupVoid,\n    semigroupFn,\n    semigroupArray,\n    semigroupProxy,\n    semigroupRecord,\n    semigroupRecordNil,\n    semigroupRecordCons\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nvar altArray = {\n    alt: /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray),\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar alt = function (dict) {\n    return dict.alt;\n};\nexport {\n    alt,\n    altArray\n};\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar applyProxy = {\n    apply: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorProxy;\n    }\n};\nvar applyFn = {\n    apply: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(x)(g(x));\n            };\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorFn;\n    }\n};\nvar applyArray = {\n    apply: $foreign.arrayApply,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar apply = function (dict) {\n    return dict.apply;\n};\nvar applyFirst = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (a) {\n        return function (b) {\n            return apply1(map(Data_Function[\"const\"])(a))(b);\n        };\n    };\n};\nvar applySecond = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (a) {\n        return function (b) {\n            return apply1(map(Data_Function[\"const\"](identity))(a))(b);\n        };\n    };\n};\nvar lift2 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return apply1(map(f)(a))(b);\n            };\n        };\n    };\n};\nvar lift3 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return apply1(apply1(map(f)(a))(b))(c);\n                };\n            };\n        };\n    };\n};\nvar lift4 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return apply1(apply1(apply1(map(f)(a))(b))(c))(d);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lift5 = function (dictApply) {\n    var apply1 = apply(dictApply);\n    var map = Data_Functor.map(dictApply.Functor0());\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return function (e) {\n                            return apply1(apply1(apply1(apply1(map(f)(a))(b))(c))(d))(e);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    apply,\n    applyFirst,\n    applySecond,\n    lift2,\n    lift3,\n    lift4,\n    lift5,\n    applyFn,\n    applyArray,\n    applyProxy\n};\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar pure = function (dict) {\n    return dict.pure;\n};\nvar unless = function (dictApplicative) {\n    var pure1 = pure(dictApplicative);\n    return function (v) {\n        return function (v1) {\n            if (!v) {\n                return v1;\n            };\n            if (v) {\n                return pure1(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar when = function (dictApplicative) {\n    var pure1 = pure(dictApplicative);\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return pure1(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar liftA1 = function (dictApplicative) {\n    var apply = Control_Apply.apply(dictApplicative.Apply0());\n    var pure1 = pure(dictApplicative);\n    return function (f) {\n        return function (a) {\n            return apply(pure1(f))(a);\n        };\n    };\n};\nvar applicativeProxy = {\n    pure: function (v) {\n        return Type_Proxy[\"Proxy\"].value;\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar applicativeFn = {\n    pure: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar applicativeArray = {\n    pure: function (x) {\n        return [ x ];\n    },\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nexport {\n    pure,\n    liftA1,\n    unless,\n    when,\n    applicativeFn,\n    applicativeArray,\n    applicativeProxy\n};\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// module Unsafe.Coerce\n\nexport const unsafeCoerce = function (x) {\n  return x;\n};\n", "// Generated by purs version 0.15.10\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar toEffect = Unsafe_Coerce.unsafeCoerce;\nexport {\n    toEffect\n};\n", "export const map_ = function (f) {\n  return function (a) {\n    return function () {\n      return f(a());\n    };\n  };\n};\n\nexport const pure_ = function (a) {\n  return function () {\n    return a;\n  };\n};\n\nexport const bind_ = function (a) {\n  return function (f) {\n    return function () {\n      return f(a())();\n    };\n  };\n};\n\nexport const run = function (f) {\n  return f();\n};\n\nfunction whileST(f) {\n  return function (a) {\n    return function () {\n      while (f()) {\n        a();\n      }\n    };\n  };\n}\nexport { whileST as while };\n\nfunction forST(lo) {\n  return function (hi) {\n    return function (f) {\n      return function () {\n        for (var i = lo; i < hi; i++) {\n          f(i)();\n        }\n      };\n    };\n  };\n}\nexport { forST as for };\n\nexport const foreach = function (as) {\n  return function (f) {\n    return function () {\n      for (var i = 0, l = as.length; i < l; i++) {\n        f(as[i])();\n      }\n    };\n  };\n};\n\nfunction newSTRef(val) {\n  return function () {\n    return { value: val };\n  };\n}\nexport { newSTRef as new };\n\nexport const read = function (ref) {\n  return function () {\n    return ref.value;\n  };\n};\n\nexport const modifyImpl = function (f) {\n  return function (ref) {\n    return function () {\n      var t = f(ref.value);\n      ref.value = t.state;\n      return t.value;\n    };\n  };\n};\n\nexport const write = function (a) {\n  return function (ref) {\n    return function () {\n      return ref.value = a; // eslint-disable-line no-return-assign\n    };\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar discard = function (dict) {\n    return dict.discard;\n};\nvar bindProxy = {\n    bind: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar bindFn = {\n    bind: function (m) {\n        return function (f) {\n            return function (x) {\n                return f(m(x))(x);\n            };\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar bindArray = {\n    bind: $foreign.arrayBind,\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nvar bind = function (dict) {\n    return dict.bind;\n};\nvar bindFlipped = function (dictBind) {\n    return Data_Function.flip(bind(dictBind));\n};\nvar composeKleisliFlipped = function (dictBind) {\n    var bindFlipped1 = bindFlipped(dictBind);\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bindFlipped1(f)(g(a));\n            };\n        };\n    };\n};\nvar composeKleisli = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bind1(f(a))(g);\n            };\n        };\n    };\n};\nvar discardProxy = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar discardUnit = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar ifM = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (cond) {\n        return function (t) {\n            return function (f) {\n                return bind1(cond)(function (cond$prime) {\n                    if (cond$prime) {\n                        return t;\n                    };\n                    return f;\n                });\n            };\n        };\n    };\n};\nvar join = function (dictBind) {\n    var bind1 = bind(dictBind);\n    return function (m) {\n        return bind1(m)(identity);\n    };\n};\nexport {\n    bind,\n    bindFlipped,\n    discard,\n    join,\n    composeKleisli,\n    composeKleisliFlipped,\n    ifM,\n    bindFn,\n    bindArray,\n    bindProxy,\n    discardUnit,\n    discardProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar whenM = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var when = Control_Applicative.when(dictMonad.Applicative0());\n    return function (mb) {\n        return function (m) {\n            return bind(mb)(function (b) {\n                return when(b)(m);\n            });\n        };\n    };\n};\nvar unlessM = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var unless = Control_Applicative.unless(dictMonad.Applicative0());\n    return function (mb) {\n        return function (m) {\n            return bind(mb)(function (b) {\n                return unless(b)(m);\n            });\n        };\n    };\n};\nvar monadProxy = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeProxy;\n    },\n    Bind1: function () {\n        return Control_Bind.bindProxy;\n    }\n};\nvar monadFn = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeFn;\n    },\n    Bind1: function () {\n        return Control_Bind.bindFn;\n    }\n};\nvar monadArray = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeArray;\n    },\n    Bind1: function () {\n        return Control_Bind.bindArray;\n    }\n};\nvar liftM1 = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (a) {\n            return bind(a)(function (a$prime) {\n                return pure(f(a$prime));\n            });\n        };\n    };\n};\nvar ap = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (a) {\n            return bind(f)(function (f$prime) {\n                return bind(a)(function (a$prime) {\n                    return pure(f$prime(a$prime));\n                });\n            });\n        };\n    };\n};\nexport {\n    liftM1,\n    whenM,\n    unlessM,\n    ap,\n    monadFn,\n    monadArray,\n    monadProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    bind,\n    ifM,\n    join\n} from \"../Control.Bind/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "export const topInt = 2147483647;\nexport const bottomInt = -2147483648;\n\nexport const topChar = String.fromCharCode(65535);\nexport const bottomChar = String.fromCharCode(0);\n\nexport const topNumber = Number.POSITIVE_INFINITY;\nexport const bottomNumber = Number.NEGATIVE_INFINITY;\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar ordRecord = /* #__PURE__ */ Data_Ord.ordRecord();\nvar topRecord = function (dict) {\n    return dict.topRecord;\n};\nvar top = function (dict) {\n    return dict.top;\n};\nvar boundedUnit = {\n    top: Data_Unit.unit,\n    bottom: Data_Unit.unit,\n    Ord0: function () {\n        return Data_Ord.ordUnit;\n    }\n};\nvar boundedRecordNil = {\n    topRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    bottomRecord: function (v) {\n        return function (v1) {\n            return {};\n        };\n    },\n    OrdRecord0: function () {\n        return Data_Ord.ordRecordNil;\n    }\n};\nvar boundedProxy = /* #__PURE__ */ (function () {\n    return {\n        bottom: Type_Proxy[\"Proxy\"].value,\n        top: Type_Proxy[\"Proxy\"].value,\n        Ord0: function () {\n            return Data_Ord.ordProxy;\n        }\n    };\n})();\nvar boundedOrdering = /* #__PURE__ */ (function () {\n    return {\n        top: Data_Ordering.GT.value,\n        bottom: Data_Ordering.LT.value,\n        Ord0: function () {\n            return Data_Ord.ordOrdering;\n        }\n    };\n})();\nvar boundedNumber = {\n    top: $foreign.topNumber,\n    bottom: $foreign.bottomNumber,\n    Ord0: function () {\n        return Data_Ord.ordNumber;\n    }\n};\nvar boundedInt = {\n    top: $foreign.topInt,\n    bottom: $foreign.bottomInt,\n    Ord0: function () {\n        return Data_Ord.ordInt;\n    }\n};\nvar boundedChar = {\n    top: $foreign.topChar,\n    bottom: $foreign.bottomChar,\n    Ord0: function () {\n        return Data_Ord.ordChar;\n    }\n};\nvar boundedBoolean = {\n    top: true,\n    bottom: false,\n    Ord0: function () {\n        return Data_Ord.ordBoolean;\n    }\n};\nvar bottomRecord = function (dict) {\n    return dict.bottomRecord;\n};\nvar boundedRecord = function () {\n    return function (dictBoundedRecord) {\n        var ordRecord1 = ordRecord(dictBoundedRecord.OrdRecord0());\n        return {\n            top: topRecord(dictBoundedRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            bottom: bottomRecord(dictBoundedRecord)(Type_Proxy[\"Proxy\"].value)(Type_Proxy[\"Proxy\"].value),\n            Ord0: function () {\n                return ordRecord1;\n            }\n        };\n    };\n};\nvar bottom = function (dict) {\n    return dict.bottom;\n};\nvar boundedRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function (dictBounded) {\n        var top1 = top(dictBounded);\n        var bottom1 = bottom(dictBounded);\n        var Ord0 = dictBounded.Ord0();\n        return function () {\n            return function () {\n                return function (dictBoundedRecord) {\n                    var topRecord1 = topRecord(dictBoundedRecord);\n                    var bottomRecord1 = bottomRecord(dictBoundedRecord);\n                    var ordRecordCons = Data_Ord.ordRecordCons(dictBoundedRecord.OrdRecord0())()(dictIsSymbol)(Ord0);\n                    return {\n                        topRecord: function (v) {\n                            return function (rowProxy) {\n                                var tail = topRecord1(Type_Proxy[\"Proxy\"].value)(rowProxy);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                return insert(top1)(tail);\n                            };\n                        },\n                        bottomRecord: function (v) {\n                            return function (rowProxy) {\n                                var tail = bottomRecord1(Type_Proxy[\"Proxy\"].value)(rowProxy);\n                                var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                return insert(bottom1)(tail);\n                            };\n                        },\n                        OrdRecord0: function () {\n                            return ordRecordCons;\n                        }\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    bottom,\n    top,\n    bottomRecord,\n    topRecord,\n    boundedBoolean,\n    boundedInt,\n    boundedChar,\n    boundedOrdering,\n    boundedUnit,\n    boundedNumber,\n    boundedProxy,\n    boundedRecordNil,\n    boundedRecordCons,\n    boundedRecord\n};\nexport {\n    EQ,\n    GT,\n    LT,\n    compare\n} from \"../Data.Ord/index.js\";\n", "export const showIntImpl = function (n) {\n  return n.toString();\n};\n\nexport const showNumberImpl = function (n) {\n  var str = n.toString();\n  return isNaN(str + \".0\") ? str : str + \".0\";\n};\n\nexport const showCharImpl = function (c) {\n  var code = c.charCodeAt(0);\n  if (code < 0x20 || code === 0x7F) {\n    switch (c) {\n      case \"\\x07\": return \"'\\\\a'\";\n      case \"\\b\": return \"'\\\\b'\";\n      case \"\\f\": return \"'\\\\f'\";\n      case \"\\n\": return \"'\\\\n'\";\n      case \"\\r\": return \"'\\\\r'\";\n      case \"\\t\": return \"'\\\\t'\";\n      case \"\\v\": return \"'\\\\v'\";\n    }\n    return \"'\\\\\" + code.toString(10) + \"'\";\n  }\n  return c === \"'\" || c === \"\\\\\" ? \"'\\\\\" + c + \"'\" : \"'\" + c + \"'\";\n};\n\nexport const showStringImpl = function (s) {\n  var l = s.length;\n  return \"\\\"\" + s.replace(\n    /[\\0-\\x1F\\x7F\"\\\\]/g, // eslint-disable-line no-control-regex\n    function (c, i) {\n      switch (c) {\n        case \"\\\"\":\n        case \"\\\\\":\n          return \"\\\\\" + c;\n        case \"\\x07\": return \"\\\\a\";\n        case \"\\b\": return \"\\\\b\";\n        case \"\\f\": return \"\\\\f\";\n        case \"\\n\": return \"\\\\n\";\n        case \"\\r\": return \"\\\\r\";\n        case \"\\t\": return \"\\\\t\";\n        case \"\\v\": return \"\\\\v\";\n      }\n      var k = i + 1;\n      var empty = k < l && s[k] >= \"0\" && s[k] <= \"9\" ? \"\\\\&\" : \"\";\n      return \"\\\\\" + c.charCodeAt(0).toString(10) + empty;\n    }\n  ) + \"\\\"\";\n};\n\nexport const showArrayImpl = function (f) {\n  return function (xs) {\n    var ss = [];\n    for (var i = 0, l = xs.length; i < l; i++) {\n      ss[i] = f(xs[i]);\n    }\n    return \"[\" + ss.join(\",\") + \"]\";\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Void from \"../Data.Void/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar showVoid = {\n    show: Data_Void.absurd\n};\nvar showUnit = {\n    show: function (v) {\n        return \"unit\";\n    }\n};\nvar showString = {\n    show: $foreign.showStringImpl\n};\nvar showRecordFieldsNil = {\n    showRecordFields: function (v) {\n        return function (v1) {\n            return \"\";\n        };\n    }\n};\nvar showRecordFields = function (dict) {\n    return dict.showRecordFields;\n};\nvar showRecord = function () {\n    return function () {\n        return function (dictShowRecordFields) {\n            var showRecordFields1 = showRecordFields(dictShowRecordFields);\n            return {\n                show: function (record) {\n                    return \"{\" + (showRecordFields1(Type_Proxy[\"Proxy\"].value)(record) + \"}\");\n                }\n            };\n        };\n    };\n};\nvar showProxy = {\n    show: function (v) {\n        return \"Proxy\";\n    }\n};\nvar showNumber = {\n    show: $foreign.showNumberImpl\n};\nvar showInt = {\n    show: $foreign.showIntImpl\n};\nvar showChar = {\n    show: $foreign.showCharImpl\n};\nvar showBoolean = {\n    show: function (v) {\n        if (v) {\n            return \"true\";\n        };\n        if (!v) {\n            return \"false\";\n        };\n        throw new Error(\"Failed pattern match at Data.Show (line 29, column 1 - line 31, column 23): \" + [ v.constructor.name ]);\n    }\n};\nvar show = function (dict) {\n    return dict.show;\n};\nvar showArray = function (dictShow) {\n    return {\n        show: $foreign.showArrayImpl(show(dictShow))\n    };\n};\nvar showRecordFieldsCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function (dictShowRecordFields) {\n        var showRecordFields1 = showRecordFields(dictShowRecordFields);\n        return function (dictShow) {\n            var show1 = show(dictShow);\n            return {\n                showRecordFields: function (v) {\n                    return function (record) {\n                        var tail = showRecordFields1(Type_Proxy[\"Proxy\"].value)(record);\n                        var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                        var focus = Record_Unsafe.unsafeGet(key)(record);\n                        return \" \" + (key + (\": \" + (show1(focus) + (\",\" + tail))));\n                    };\n                }\n            };\n        };\n    };\n};\nvar showRecordFieldsConsNil = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function (dictShow) {\n        var show1 = show(dictShow);\n        return {\n            showRecordFields: function (v) {\n                return function (record) {\n                    var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                    var focus = Record_Unsafe.unsafeGet(key)(record);\n                    return \" \" + (key + (\": \" + (show1(focus) + \" \")));\n                };\n            }\n        };\n    };\n};\nexport {\n    show,\n    showRecordFields,\n    showUnit,\n    showBoolean,\n    showInt,\n    showNumber,\n    showChar,\n    showString,\n    showArray,\n    showProxy,\n    showVoid,\n    showRecord,\n    showRecordFieldsNil,\n    showRecordFieldsConsNil,\n    showRecordFieldsCons\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showString);\nvar Inl = /* #__PURE__ */ (function () {\n    function Inl(value0) {\n        this.value0 = value0;\n    };\n    Inl.create = function (value0) {\n        return new Inl(value0);\n    };\n    return Inl;\n})();\nvar Inr = /* #__PURE__ */ (function () {\n    function Inr(value0) {\n        this.value0 = value0;\n    };\n    Inr.create = function (value0) {\n        return new Inr(value0);\n    };\n    return Inr;\n})();\nvar Product = /* #__PURE__ */ (function () {\n    function Product(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Product.create = function (value0) {\n        return function (value1) {\n            return new Product(value0, value1);\n        };\n    };\n    return Product;\n})();\nvar NoConstructors = function (x) {\n    return x;\n};\nvar NoArguments = /* #__PURE__ */ (function () {\n    function NoArguments() {\n\n    };\n    NoArguments.value = new NoArguments();\n    return NoArguments;\n})();\nvar Constructor = function (x) {\n    return x;\n};\nvar Argument = function (x) {\n    return x;\n};\nvar to = function (dict) {\n    return dict.to;\n};\nvar showSum = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show2 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                if (v instanceof Inl) {\n                    return \"(Inl \" + (show1(v.value0) + \")\");\n                };\n                if (v instanceof Inr) {\n                    return \"(Inr \" + (show2(v.value0) + \")\");\n                };\n                throw new Error(\"Failed pattern match at Data.Generic.Rep (line 32, column 1 - line 34, column 42): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar showProduct = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show2 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                return \"(Product \" + (show1(v.value0) + (\" \" + (show2(v.value1) + \")\")));\n            }\n        };\n    };\n};\nvar showNoArguments = {\n    show: function (v) {\n        return \"NoArguments\";\n    }\n};\nvar showConstructor = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function (dictShow) {\n        var show1 = Data_Show.show(dictShow);\n        return {\n            show: function (v) {\n                return \"(Constructor @\" + (show(reflectSymbol(Type_Proxy[\"Proxy\"].value)) + (\" \" + (show1(v) + \")\")));\n            }\n        };\n    };\n};\nvar showArgument = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            return \"(Argument \" + (show1(v) + \")\");\n        }\n    };\n};\nvar repOf = function (dictGeneric) {\n    return function (v) {\n        return Type_Proxy[\"Proxy\"].value;\n    };\n};\nvar from = function (dict) {\n    return dict.from;\n};\nexport {\n    to,\n    from,\n    repOf,\n    NoArguments,\n    Inl,\n    Inr,\n    Product,\n    Constructor,\n    Argument,\n    showNoArguments,\n    showSum,\n    showProduct,\n    showConstructor,\n    showArgument\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Nothing = /* #__PURE__ */ (function () {\n    function Nothing() {\n\n    };\n    Nothing.value = new Nothing();\n    return Nothing;\n})();\nvar Just = /* #__PURE__ */ (function () {\n    function Just(value0) {\n        this.value0 = value0;\n    };\n    Just.create = function (value0) {\n        return new Just(value0);\n    };\n    return Just;\n})();\nvar showMaybe = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof Just) {\n                return \"(Just \" + (show(v.value0) + \")\");\n            };\n            if (v instanceof Nothing) {\n                return \"Nothing\";\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar semigroupMaybe = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        append: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(append1(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 182, column 1 - line 185, column 43): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        }\n    };\n};\nvar optional = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var map1 = Data_Functor.map(dictAlt.Functor0());\n    return function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (a) {\n            return alt(map1(Just.create)(a))(pure(Nothing.value));\n        };\n    };\n};\nvar monoidMaybe = function (dictSemigroup) {\n    var semigroupMaybe1 = semigroupMaybe(dictSemigroup);\n    return {\n        mempty: Nothing.value,\n        Semigroup0: function () {\n            return semigroupMaybe1;\n        }\n    };\n};\nvar maybe$prime = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v(Data_Unit.unit);\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar maybe = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v;\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar isNothing = /* #__PURE__ */ maybe(true)(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isJust = /* #__PURE__ */ maybe(false)(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar genericMaybe = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return Nothing.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Just(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Nothing) {\n            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n        };\n        if (x instanceof Just) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    }\n};\nvar functorMaybe = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Just) {\n                return new Just(v(v1.value0));\n            };\n            return Nothing.value;\n        };\n    }\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorMaybe);\nvar invariantMaybe = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorMaybe)\n};\nvar fromMaybe$prime = function (a) {\n    return maybe$prime(a)(identity);\n};\nvar fromMaybe = function (a) {\n    return maybe(a)(identity);\n};\nvar fromJust = function () {\n    return function (v) {\n        if (v instanceof Just) {\n            return v.value0;\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): \" + [ v.constructor.name ]);\n    };\n};\nvar extendMaybe = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Nothing) {\n                return Nothing.value;\n            };\n            return new Just(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar eqMaybe = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        eq: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return true;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return eq(x.value0)(y.value0);\n                };\n                return false;\n            };\n        }\n    };\n};\nvar ordMaybe = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqMaybe1 = eqMaybe(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return Data_Ordering.EQ.value;\n                };\n                if (x instanceof Nothing) {\n                    return Data_Ordering.LT.value;\n                };\n                if (y instanceof Nothing) {\n                    return Data_Ordering.GT.value;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return compare(x.value0)(y.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n            };\n        },\n        Eq0: function () {\n            return eqMaybe1;\n        }\n    };\n};\nvar eq1Maybe = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqMaybe(dictEq));\n    }\n};\nvar ord1Maybe = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordMaybe(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Maybe;\n    }\n};\nvar boundedMaybe = function (dictBounded) {\n    var ordMaybe1 = ordMaybe(dictBounded.Ord0());\n    return {\n        top: new Just(Data_Bounded.top(dictBounded)),\n        bottom: Nothing.value,\n        Ord0: function () {\n            return ordMaybe1;\n        }\n    };\n};\nvar applyMaybe = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return map(v.value0)(v1);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyMaybe);\nvar bindMaybe = {\n    bind: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return v1(v.value0);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Apply0: function () {\n        return applyMaybe;\n    }\n};\nvar semiringMaybe = function (dictSemiring) {\n    var add = Data_Semiring.add(dictSemiring);\n    var mul = Data_Semiring.mul(dictSemiring);\n    return {\n        zero: Nothing.value,\n        one: new Just(Data_Semiring.one(dictSemiring)),\n        add: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(add(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 190, column 1 - line 198, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        },\n        mul: function (x) {\n            return function (y) {\n                return apply(map(mul)(x))(y);\n            };\n        }\n    };\n};\nvar applicativeMaybe = /* #__PURE__ */ (function () {\n    return {\n        pure: Just.create,\n        Apply0: function () {\n            return applyMaybe;\n        }\n    };\n})();\nvar monadMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Bind1: function () {\n        return bindMaybe;\n    }\n};\nvar altMaybe = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Nothing) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar plusMaybe = /* #__PURE__ */ (function () {\n    return {\n        empty: Nothing.value,\n        Alt0: function () {\n            return altMaybe;\n        }\n    };\n})();\nvar alternativeMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Plus1: function () {\n        return plusMaybe;\n    }\n};\nexport {\n    Nothing,\n    Just,\n    maybe,\n    maybe$prime,\n    fromMaybe,\n    fromMaybe$prime,\n    isJust,\n    isNothing,\n    fromJust,\n    optional,\n    functorMaybe,\n    applyMaybe,\n    applicativeMaybe,\n    altMaybe,\n    plusMaybe,\n    alternativeMaybe,\n    bindMaybe,\n    monadMaybe,\n    extendMaybe,\n    invariantMaybe,\n    semigroupMaybe,\n    monoidMaybe,\n    semiringMaybe,\n    eqMaybe,\n    eq1Maybe,\n    ordMaybe,\n    ord1Maybe,\n    boundedMaybe,\n    showMaybe,\n    genericMaybe\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Left = /* #__PURE__ */ (function () {\n    function Left(value0) {\n        this.value0 = value0;\n    };\n    Left.create = function (value0) {\n        return new Left(value0);\n    };\n    return Left;\n})();\nvar Right = /* #__PURE__ */ (function () {\n    function Right(value0) {\n        this.value0 = value0;\n    };\n    Right.create = function (value0) {\n        return new Right(value0);\n    };\n    return Right;\n})();\nvar showEither = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                if (v instanceof Left) {\n                    return \"(Left \" + (show(v.value0) + \")\");\n                };\n                if (v instanceof Right) {\n                    return \"(Right \" + (show1(v.value0) + \")\");\n                };\n                throw new Error(\"Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar note$prime = function (f) {\n    return Data_Maybe[\"maybe$prime\"](function ($138) {\n        return Left.create(f($138));\n    })(Right.create);\n};\nvar note = function (a) {\n    return Data_Maybe.maybe(new Left(a))(Right.create);\n};\nvar genericEither = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new Left(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Right(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Left) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof Right) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    }\n};\nvar functorEither = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Left) {\n                return new Left(m.value0);\n            };\n            if (m instanceof Right) {\n                return new Right(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorEither);\nvar invariantEither = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorEither)\n};\nvar fromRight$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromRight = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar fromLeft$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromLeft = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar extendEither = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Left) {\n                return new Left(v1.value0);\n            };\n            return new Right(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar eqEither = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(dictEq1);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return eq(x.value0)(y.value0);\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return eq1(x.value0)(y.value0);\n                    };\n                    return false;\n                };\n            }\n        };\n    };\n};\nvar ordEither = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqEither1 = eqEither(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqEither2 = eqEither1(dictOrd1.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return compare(x.value0)(y.value0);\n                    };\n                    if (x instanceof Left) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (y instanceof Left) {\n                        return Data_Ordering.GT.value;\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return compare1(x.value0)(y.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n                };\n            },\n            Eq0: function () {\n                return eqEither2;\n            }\n        };\n    };\n};\nvar eq1Either = function (dictEq) {\n    var eqEither1 = eqEither(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqEither1(dictEq1));\n        }\n    };\n};\nvar ord1Either = function (dictOrd) {\n    var ordEither1 = ordEither(dictOrd);\n    var eq1Either1 = eq1Either(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordEither1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Either1;\n        }\n    };\n};\nvar either = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Left) {\n                return v(v2.value0);\n            };\n            if (v2 instanceof Right) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar hush = /* #__PURE__ */ (function () {\n    return either(Data_Function[\"const\"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);\n})();\nvar isLeft = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](true))(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isRight = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](false))(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar choose = function (dictAlt) {\n    var alt = Control_Alt.alt(dictAlt);\n    var map1 = Data_Functor.map(dictAlt.Functor0());\n    return function (a) {\n        return function (b) {\n            return alt(map1(Left.create)(a))(map1(Right.create)(b));\n        };\n    };\n};\nvar boundedEither = function (dictBounded) {\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var ordEither1 = ordEither(dictBounded.Ord0());\n    return function (dictBounded1) {\n        var ordEither2 = ordEither1(dictBounded1.Ord0());\n        return {\n            top: new Right(Data_Bounded.top(dictBounded1)),\n            bottom: new Left(bottom),\n            Ord0: function () {\n                return ordEither2;\n            }\n        };\n    };\n};\nvar blush = /* #__PURE__ */ (function () {\n    return either(Data_Maybe.Just.create)(Data_Function[\"const\"](Data_Maybe.Nothing.value));\n})();\nvar applyEither = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return new Left(v.value0);\n            };\n            if (v instanceof Right) {\n                return map(v.value0)(v1);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyEither);\nvar bindEither = {\n    bind: /* #__PURE__ */ either(function (e) {\n        return function (v) {\n            return new Left(e);\n        };\n    })(function (a) {\n        return function (f) {\n            return f(a);\n        };\n    }),\n    Apply0: function () {\n        return applyEither;\n    }\n};\nvar semigroupEither = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        append: function (x) {\n            return function (y) {\n                return apply(map(append1)(x))(y);\n            };\n        }\n    };\n};\nvar applicativeEither = /* #__PURE__ */ (function () {\n    return {\n        pure: Right.create,\n        Apply0: function () {\n            return applyEither;\n        }\n    };\n})();\nvar monadEither = {\n    Applicative0: function () {\n        return applicativeEither;\n    },\n    Bind1: function () {\n        return bindEither;\n    }\n};\nvar altEither = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nexport {\n    Left,\n    Right,\n    either,\n    choose,\n    isLeft,\n    isRight,\n    fromLeft,\n    fromLeft$prime,\n    fromRight,\n    fromRight$prime,\n    note,\n    note$prime,\n    hush,\n    blush,\n    functorEither,\n    genericEither,\n    invariantEither,\n    applyEither,\n    applicativeEither,\n    altEither,\n    bindEither,\n    monadEither,\n    extendEither,\n    showEither,\n    eqEither,\n    eq1Either,\n    ordEither,\n    ord1Either,\n    boundedEither,\n    semigroupEither\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar Identity = function (x) {\n    return x;\n};\nvar showIdentity = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            return \"(Identity \" + (show(v) + \")\");\n        }\n    };\n};\nvar semiringIdentity = function (dictSemiring) {\n    return dictSemiring;\n};\nvar semigroupIdentity = function (dictSemigroup) {\n    return dictSemigroup;\n};\nvar ringIdentity = function (dictRing) {\n    return dictRing;\n};\nvar ordIdentity = function (dictOrd) {\n    return dictOrd;\n};\nvar newtypeIdentity = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidIdentity = function (dictMonoid) {\n    return dictMonoid;\n};\nvar lazyIdentity = function (dictLazy) {\n    return dictLazy;\n};\nvar heytingAlgebraIdentity = function (dictHeytingAlgebra) {\n    return dictHeytingAlgebra;\n};\nvar functorIdentity = {\n    map: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    }\n};\nvar invariantIdentity = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorIdentity)\n};\nvar extendIdentity = {\n    extend: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar euclideanRingIdentity = function (dictEuclideanRing) {\n    return dictEuclideanRing;\n};\nvar eqIdentity = function (dictEq) {\n    return dictEq;\n};\nvar eq1Identity = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqIdentity(dictEq));\n    }\n};\nvar ord1Identity = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordIdentity(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Identity;\n    }\n};\nvar comonadIdentity = {\n    extract: function (v) {\n        return v;\n    },\n    Extend0: function () {\n        return extendIdentity;\n    }\n};\nvar commutativeRingIdentity = function (dictCommutativeRing) {\n    return dictCommutativeRing;\n};\nvar boundedIdentity = function (dictBounded) {\n    return dictBounded;\n};\nvar booleanAlgebraIdentity = function (dictBooleanAlgebra) {\n    return dictBooleanAlgebra;\n};\nvar applyIdentity = {\n    apply: function (v) {\n        return function (v1) {\n            return v(v1);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar bindIdentity = {\n    bind: function (v) {\n        return function (f) {\n            return f(v);\n        };\n    },\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar applicativeIdentity = {\n    pure: Identity,\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar monadIdentity = {\n    Applicative0: function () {\n        return applicativeIdentity;\n    },\n    Bind1: function () {\n        return bindIdentity;\n    }\n};\nvar altIdentity = {\n    alt: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nexport {\n    Identity,\n    newtypeIdentity,\n    eqIdentity,\n    ordIdentity,\n    boundedIdentity,\n    heytingAlgebraIdentity,\n    booleanAlgebraIdentity,\n    semigroupIdentity,\n    monoidIdentity,\n    semiringIdentity,\n    euclideanRingIdentity,\n    ringIdentity,\n    commutativeRingIdentity,\n    lazyIdentity,\n    showIdentity,\n    eq1Identity,\n    ord1Identity,\n    functorIdentity,\n    invariantIdentity,\n    altIdentity,\n    applyIdentity,\n    applicativeIdentity,\n    bindIdentity,\n    monadIdentity,\n    extendIdentity,\n    comonadIdentity\n};\n", "export const intDegree = function (x) {\n  return Math.min(Math.abs(x), 2147483647);\n};\n\n// See the Euclidean definition in\n// https://en.m.wikipedia.org/wiki/Modulo_operation.\nexport const intDiv = function (x) {\n  return function (y) {\n    if (y === 0) return 0;\n    return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);\n  };\n};\n\nexport const intMod = function (x) {\n  return function (y) {\n    if (y === 0) return 0;\n    var yy = Math.abs(y);\n    return ((x % yy) + yy) % yy;\n  };\n};\n\nexport const numDiv = function (n1) {\n  return function (n2) {\n    return n1 / n2;\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nvar ringRecord = /* #__PURE__ */ Data_Ring.ringRecord();\nvar commutativeRingUnit = {\n    Ring0: function () {\n        return Data_Ring.ringUnit;\n    }\n};\nvar commutativeRingRecordNil = {\n    RingRecord0: function () {\n        return Data_Ring.ringRecordNil;\n    }\n};\nvar commutativeRingRecordCons = function (dictIsSymbol) {\n    var ringRecordCons = Data_Ring.ringRecordCons(dictIsSymbol)();\n    return function () {\n        return function (dictCommutativeRingRecord) {\n            var ringRecordCons1 = ringRecordCons(dictCommutativeRingRecord.RingRecord0());\n            return function (dictCommutativeRing) {\n                var ringRecordCons2 = ringRecordCons1(dictCommutativeRing.Ring0());\n                return {\n                    RingRecord0: function () {\n                        return ringRecordCons2;\n                    }\n                };\n            };\n        };\n    };\n};\nvar commutativeRingRecord = function () {\n    return function (dictCommutativeRingRecord) {\n        var ringRecord1 = ringRecord(dictCommutativeRingRecord.RingRecord0());\n        return {\n            Ring0: function () {\n                return ringRecord1;\n            }\n        };\n    };\n};\nvar commutativeRingProxy = {\n    Ring0: function () {\n        return Data_Ring.ringProxy;\n    }\n};\nvar commutativeRingNumber = {\n    Ring0: function () {\n        return Data_Ring.ringNumber;\n    }\n};\nvar commutativeRingInt = {\n    Ring0: function () {\n        return Data_Ring.ringInt;\n    }\n};\nvar commutativeRingFn = function (dictCommutativeRing) {\n    var ringFn = Data_Ring.ringFn(dictCommutativeRing.Ring0());\n    return {\n        Ring0: function () {\n            return ringFn;\n        }\n    };\n};\nexport {\n    commutativeRingInt,\n    commutativeRingNumber,\n    commutativeRingUnit,\n    commutativeRingFn,\n    commutativeRingRecord,\n    commutativeRingProxy,\n    commutativeRingRecordNil,\n    commutativeRingRecordCons\n};\nexport {\n    add,\n    mul,\n    one,\n    zero\n} from \"../Data.Semiring/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_CommutativeRing from \"../Data.CommutativeRing/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nvar mod = function (dict) {\n    return dict.mod;\n};\nvar gcd = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (dictEuclideanRing) {\n        var zero = Data_Semiring.zero(((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0());\n        var mod1 = mod(dictEuclideanRing);\n        return function (a) {\n            return function (b) {\n                var $24 = eq(b)(zero);\n                if ($24) {\n                    return a;\n                };\n                return gcd(dictEq)(dictEuclideanRing)(b)(mod1(a)(b));\n            };\n        };\n    };\n};\nvar euclideanRingNumber = {\n    degree: function (v) {\n        return 1;\n    },\n    div: $foreign.numDiv,\n    mod: function (v) {\n        return function (v1) {\n            return 0.0;\n        };\n    },\n    CommutativeRing0: function () {\n        return Data_CommutativeRing.commutativeRingNumber;\n    }\n};\nvar euclideanRingInt = {\n    degree: $foreign.intDegree,\n    div: $foreign.intDiv,\n    mod: $foreign.intMod,\n    CommutativeRing0: function () {\n        return Data_CommutativeRing.commutativeRingInt;\n    }\n};\nvar div = function (dict) {\n    return dict.div;\n};\nvar lcm = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    var gcd1 = gcd(dictEq);\n    return function (dictEuclideanRing) {\n        var Semiring0 = ((dictEuclideanRing.CommutativeRing0()).Ring0()).Semiring0();\n        var zero = Data_Semiring.zero(Semiring0);\n        var div1 = div(dictEuclideanRing);\n        var mul = Data_Semiring.mul(Semiring0);\n        var gcd2 = gcd1(dictEuclideanRing);\n        return function (a) {\n            return function (b) {\n                var $26 = eq(a)(zero) || eq(b)(zero);\n                if ($26) {\n                    return zero;\n                };\n                return div1(mul(a)(b))(gcd2(a)(b));\n            };\n        };\n    };\n};\nvar degree = function (dict) {\n    return dict.degree;\n};\nexport {\n    degree,\n    div,\n    mod,\n    gcd,\n    lcm,\n    euclideanRingInt,\n    euclideanRingNumber\n};\nexport {\n    sub\n} from \"../Data.Ring/index.js\";\nexport {\n    add,\n    mul,\n    one,\n    zero\n} from \"../Data.Semiring/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semigroupRecord = /* #__PURE__ */ Data_Semigroup.semigroupRecord();\nvar mod = /* #__PURE__ */ Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);\nvar div = /* #__PURE__ */ Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt);\nvar monoidUnit = {\n    mempty: Data_Unit.unit,\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupUnit;\n    }\n};\nvar monoidString = {\n    mempty: \"\",\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupString;\n    }\n};\nvar monoidRecordNil = {\n    memptyRecord: function (v) {\n        return {};\n    },\n    SemigroupRecord0: function () {\n        return Data_Semigroup.semigroupRecordNil;\n    }\n};\nvar monoidOrdering = /* #__PURE__ */ (function () {\n    return {\n        mempty: Data_Ordering.EQ.value,\n        Semigroup0: function () {\n            return Data_Ordering.semigroupOrdering;\n        }\n    };\n})();\nvar monoidArray = {\n    mempty: [  ],\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupArray;\n    }\n};\nvar memptyRecord = function (dict) {\n    return dict.memptyRecord;\n};\nvar monoidRecord = function () {\n    return function (dictMonoidRecord) {\n        var semigroupRecord1 = semigroupRecord(dictMonoidRecord.SemigroupRecord0());\n        return {\n            mempty: memptyRecord(dictMonoidRecord)(Type_Proxy[\"Proxy\"].value),\n            Semigroup0: function () {\n                return semigroupRecord1;\n            }\n        };\n    };\n};\nvar mempty = function (dict) {\n    return dict.mempty;\n};\nvar monoidFn = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    var semigroupFn = Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());\n    return {\n        mempty: function (v) {\n            return mempty1;\n        },\n        Semigroup0: function () {\n            return semigroupFn;\n        }\n    };\n};\nvar monoidRecordCons = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    var semigroupRecordCons = Data_Semigroup.semigroupRecordCons(dictIsSymbol)();\n    return function (dictMonoid) {\n        var mempty1 = mempty(dictMonoid);\n        var Semigroup0 = dictMonoid.Semigroup0();\n        return function () {\n            return function (dictMonoidRecord) {\n                var memptyRecord1 = memptyRecord(dictMonoidRecord);\n                var semigroupRecordCons1 = semigroupRecordCons(dictMonoidRecord.SemigroupRecord0())(Semigroup0);\n                return {\n                    memptyRecord: function (v) {\n                        var tail = memptyRecord1(Type_Proxy[\"Proxy\"].value);\n                        var key = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(mempty1)(tail);\n                    },\n                    SemigroupRecord0: function () {\n                        return semigroupRecordCons1;\n                    }\n                };\n            };\n        };\n    };\n};\nvar power = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n    return function (x) {\n        var go = function (p) {\n            if (p <= 0) {\n                return mempty1;\n            };\n            if (p === 1) {\n                return x;\n            };\n            if (mod(p)(2) === 0) {\n                var x$prime = go(div(p)(2));\n                return append(x$prime)(x$prime);\n            };\n            if (Data_Boolean.otherwise) {\n                var x$prime = go(div(p)(2));\n                return append(x$prime)(append(x$prime)(x));\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): \" + [ p.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar guard = function (dictMonoid) {\n    var mempty1 = mempty(dictMonoid);\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return mempty1;\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nexport {\n    mempty,\n    power,\n    guard,\n    memptyRecord,\n    monoidUnit,\n    monoidOrdering,\n    monoidFn,\n    monoidString,\n    monoidArray,\n    monoidRecord,\n    monoidRecordNil,\n    monoidRecordCons\n};\n", "export const pureE = function (a) {\n  return function () {\n    return a;\n  };\n};\n\nexport const bindE = function (a) {\n  return function (f) {\n    return function () {\n      return f(a())();\n    };\n  };\n};\n\nexport const untilE = function (f) {\n  return function () {\n    while (!f());\n  };\n};\n\nexport const whileE = function (f) {\n  return function (a) {\n    return function () {\n      while (f()) {\n        a();\n      }\n    };\n  };\n};\n\nexport const forE = function (lo) {\n  return function (hi) {\n    return function (f) {\n      return function () {\n        for (var i = lo; i < hi; i++) {\n          f(i)();\n        }\n      };\n    };\n  };\n};\n\nexport const foreachE = function (as) {\n  return function (f) {\n    return function () {\n      for (var i = 0, l = as.length; i < l; i++) {\n        f(as[i])();\n      }\n    };\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar monadEffect = {\n    Applicative0: function () {\n        return applicativeEffect;\n    },\n    Bind1: function () {\n        return bindEffect;\n    }\n};\nvar bindEffect = {\n    bind: $foreign.bindE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar applicativeEffect = {\n    pure: $foreign.pureE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar $lazy_functorEffect = /* #__PURE__ */ $runtime_lazy(\"functorEffect\", \"Effect\", function () {\n    return {\n        map: Control_Applicative.liftA1(applicativeEffect)\n    };\n});\nvar $lazy_applyEffect = /* #__PURE__ */ $runtime_lazy(\"applyEffect\", \"Effect\", function () {\n    return {\n        apply: Control_Monad.ap(monadEffect),\n        Functor0: function () {\n            return $lazy_functorEffect(0);\n        }\n    };\n});\nvar functorEffect = /* #__PURE__ */ $lazy_functorEffect(20);\nvar applyEffect = /* #__PURE__ */ $lazy_applyEffect(23);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyEffect);\nvar semigroupEffect = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidEffect = function (dictMonoid) {\n    var semigroupEffect1 = semigroupEffect(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.pureE(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupEffect1;\n        }\n    };\n};\nexport {\n    untilE,\n    whileE,\n    forE,\n    foreachE\n} from \"./foreign.js\";\nexport {\n    functorEffect,\n    applyEffect,\n    applicativeEffect,\n    bindEffect,\n    monadEffect,\n    semigroupEffect,\n    monoidEffect\n};\n", "export const _new = function (val) {\n  return function () {\n    return { value: val };\n  };\n};\n\nexport const newWithSelf = function (f) {\n  return function () {\n    var ref = { value: null };\n    ref.value = f(ref);\n    return ref;\n  };\n};\n\nexport const read = function (ref) {\n  return function () {\n    return ref.value;\n  };\n};\n\nexport const modifyImpl = function (f) {\n  return function (ref) {\n    return function () {\n      var t = f(ref.value);\n      ref.value = t.state;\n      return t.value;\n    };\n  };\n};\n\nexport const write = function (val) {\n  return function (ref) {\n    return function () {\n      ref.value = val;\n    };\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar $$new = $foreign[\"_new\"];\nvar modify$prime = $foreign.modifyImpl;\nvar modify = function (f) {\n    return modify$prime(function (s) {\n        var s$prime = f(s);\n        return {\n            state: s$prime,\n            value: s$prime\n        };\n    });\n};\nvar modify_ = function (f) {\n    return function (s) {\n        return $$void(modify(f)(s));\n    };\n};\nexport {\n    newWithSelf,\n    read,\n    write\n} from \"./foreign.js\";\nexport {\n    $$new as new,\n    modify$prime,\n    modify,\n    modify_\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar modify$prime = $foreign.modifyImpl;\nvar modify = function (f) {\n    return modify$prime(function (s) {\n        var s$prime = f(s);\n        return {\n            state: s$prime,\n            value: s$prime\n        };\n    });\n};\nvar functorST = {\n    map: $foreign.map_\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](functorST);\nvar monadST = {\n    Applicative0: function () {\n        return applicativeST;\n    },\n    Bind1: function () {\n        return bindST;\n    }\n};\nvar bindST = {\n    bind: $foreign.bind_,\n    Apply0: function () {\n        return $lazy_applyST(0);\n    }\n};\nvar applicativeST = {\n    pure: $foreign.pure_,\n    Apply0: function () {\n        return $lazy_applyST(0);\n    }\n};\nvar $lazy_applyST = /* #__PURE__ */ $runtime_lazy(\"applyST\", \"Control.Monad.ST.Internal\", function () {\n    return {\n        apply: Control_Monad.ap(monadST),\n        Functor0: function () {\n            return functorST;\n        }\n    };\n});\nvar applyST = /* #__PURE__ */ $lazy_applyST(47);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyST);\nvar bind = /* #__PURE__ */ Control_Bind.bind(bindST);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(bindST);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(bindST);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(applicativeST);\nvar semigroupST = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monadRecST = {\n    tailRecM: function (f) {\n        return function (a) {\n            var isLooping = function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Loop) {\n                    return true;\n                };\n                return false;\n            };\n            var fromDone = function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Done) {\n                    return v.value0;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.ST.Internal (line 70, column 32 - line 70, column 46): \" + [ v.constructor.name ]);\n            };\n            return bind(bindFlipped($foreign[\"new\"])(f(a)))(function (r) {\n                return discard($foreign[\"while\"](map(isLooping)($foreign.read(r)))(bind($foreign.read(r))(function (v) {\n                    if (v instanceof Control_Monad_Rec_Class.Loop) {\n                        return bind(f(v.value0))(function (e) {\n                            return $$void($foreign.write(e)(r));\n                        });\n                    };\n                    if (v instanceof Control_Monad_Rec_Class.Done) {\n                        return pure(Data_Unit.unit);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.ST.Internal (line 62, column 18 - line 66, column 28): \" + [ v.constructor.name ]);\n                })))(function () {\n                    return map(fromDone)($foreign.read(r));\n                });\n            });\n        };\n    },\n    Monad0: function () {\n        return monadST;\n    }\n};\nvar monoidST = function (dictMonoid) {\n    var semigroupST1 = semigroupST(dictMonoid.Semigroup0());\n    return {\n        mempty: pure(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupST1;\n        }\n    };\n};\nexport {\n    run,\n    while,\n    for,\n    foreach,\n    new,\n    read,\n    write\n} from \"./foreign.js\";\nexport {\n    modify$prime,\n    modify,\n    functorST,\n    applyST,\n    applicativeST,\n    bindST,\n    monadST,\n    monadRecST,\n    semigroupST,\n    monoidST\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_ST_Global from \"../Control.Monad.ST.Global/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar monadSTST = {\n    liftST: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Monad0: function () {\n        return Control_Monad_ST_Internal.monadST;\n    }\n};\nvar monadSTEffect = {\n    liftST: Control_Monad_ST_Global.toEffect,\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar liftST = function (dict) {\n    return dict.liftST;\n};\nexport {\n    liftST,\n    monadSTEffect,\n    monadSTST\n};\n", "//------------------------------------------------------------------------------\n// Array creation --------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const rangeImpl = function (start, end) {\n  var step = start > end ? -1 : 1;\n  var result = new Array(step * (end - start) + 1);\n  var i = start, n = 0;\n  while (i !== end) {\n    result[n++] = i;\n    i += step;\n  }\n  result[n] = i;\n  return result;\n};\n\nvar replicateFill = function (count, value) {\n  if (count < 1) {\n    return [];\n  }\n  var result = new Array(count);\n  return result.fill(value);\n};\n\nvar replicatePolyfill = function (count, value) {\n  var result = [];\n  var n = 0;\n  for (var i = 0; i < count; i++) {\n    result[n++] = value;\n  }\n  return result;\n};\n\n// In browsers that have Array.prototype.fill we use it, as it's faster.\nexport const replicateImpl = typeof Array.prototype.fill === \"function\" ? replicateFill : replicatePolyfill;\n\nexport const fromFoldableImpl = (function () {\n  function Cons(head, tail) {\n    this.head = head;\n    this.tail = tail;\n  }\n  var emptyList = {};\n\n  function curryCons(head) {\n    return function (tail) {\n      return new Cons(head, tail);\n    };\n  }\n\n  function listToArray(list) {\n    var result = [];\n    var count = 0;\n    var xs = list;\n    while (xs !== emptyList) {\n      result[count++] = xs.head;\n      xs = xs.tail;\n    }\n    return result;\n  }\n\n  return function (foldr, xs) {\n    return listToArray(foldr(curryCons)(emptyList)(xs));\n  };\n})();\n\n//------------------------------------------------------------------------------\n// Array size ------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const length = function (xs) {\n  return xs.length;\n};\n\n//------------------------------------------------------------------------------\n// Non-indexed reads -----------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const unconsImpl = function (empty, next, xs) {\n  return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));\n};\n\n//------------------------------------------------------------------------------\n// Indexed operations ----------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const indexImpl = function (just, nothing, xs, i) {\n  return i < 0 || i >= xs.length ? nothing :  just(xs[i]);\n};\n\nexport const findMapImpl = function (nothing, isJust, f, xs) {\n  for (var i = 0; i < xs.length; i++) {\n    var result = f(xs[i]);\n    if (isJust(result)) return result;\n  }\n  return nothing;\n};\n\nexport const findIndexImpl = function (just, nothing, f, xs) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (f(xs[i])) return just(i);\n  }\n  return nothing;\n};\n\nexport const findLastIndexImpl = function (just, nothing, f, xs) {\n  for (var i = xs.length - 1; i >= 0; i--) {\n    if (f(xs[i])) return just(i);\n  }\n  return nothing;\n};\n\nexport const _insertAt = function (just, nothing, i, a, l) {\n  if (i < 0 || i > l.length) return nothing;\n  var l1 = l.slice();\n  l1.splice(i, 0, a);\n  return just(l1);\n};\n\nexport const _deleteAt = function (just, nothing, i, l) {\n  if (i < 0 || i >= l.length) return nothing;\n  var l1 = l.slice();\n  l1.splice(i, 1);\n  return just(l1);\n};\n\nexport const _updateAt = function (just, nothing, i, a, l) {\n  if (i < 0 || i >= l.length) return nothing;\n  var l1 = l.slice();\n  l1[i] = a;\n  return just(l1);\n};\n\n//------------------------------------------------------------------------------\n// Transformations -------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const reverse = function (l) {\n  return l.slice().reverse();\n};\n\nexport const concat = function (xss) {\n  if (xss.length <= 10000) {\n    // This method is faster, but it crashes on big arrays.\n    // So we use it when can and fallback to simple variant otherwise.\n    return Array.prototype.concat.apply([], xss);\n  }\n\n  var result = [];\n  for (var i = 0, l = xss.length; i < l; i++) {\n    var xs = xss[i];\n    for (var j = 0, m = xs.length; j < m; j++) {\n      result.push(xs[j]);\n    }\n  }\n  return result;\n};\n\nexport const filterImpl = function (f, xs) {\n  return xs.filter(f);\n};\n\nexport const partitionImpl = function (f, xs) {\n  var yes = [];\n  var no  = [];\n  for (var i = 0; i < xs.length; i++) {\n    var x = xs[i];\n    if (f(x))\n      yes.push(x);\n    else\n      no.push(x);\n  }\n  return { yes: yes, no: no };\n};\n\nexport const scanlImpl = function (f, b, xs) {\n  var len = xs.length;\n  var acc = b;\n  var out = new Array(len);\n  for (var i = 0; i < len; i++) {\n    acc = f(acc)(xs[i]);\n    out[i] = acc;\n  }\n  return out;\n};\n\nexport const scanrImpl = function (f, b, xs) {\n  var len = xs.length;\n  var acc = b;\n  var out = new Array(len);\n  for (var i = len - 1; i >= 0; i--) {\n    acc = f(xs[i])(acc);\n    out[i] = acc;\n  }\n  return out;\n};\n\n//------------------------------------------------------------------------------\n// Sorting ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const sortByImpl = (function () {\n  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {\n    var mid;\n    var i;\n    var j;\n    var k;\n    var x;\n    var y;\n    var c;\n\n    mid = from + ((to - from) >> 1);\n    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);\n    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);\n\n    i = from;\n    j = mid;\n    k = from;\n    while (i < mid && j < to) {\n      x = xs2[i];\n      y = xs2[j];\n      c = fromOrdering(compare(x)(y));\n      if (c > 0) {\n        xs1[k++] = y;\n        ++j;\n      }\n      else {\n        xs1[k++] = x;\n        ++i;\n      }\n    }\n    while (i < mid) {\n      xs1[k++] = xs2[i++];\n    }\n    while (j < to) {\n      xs1[k++] = xs2[j++];\n    }\n  }\n\n  return function (compare, fromOrdering, xs) {\n    var out;\n\n    if (xs.length < 2) return xs;\n\n    out = xs.slice(0);\n    mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);\n\n    return out;\n  };\n})();\n\n//------------------------------------------------------------------------------\n// Subarrays -------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const sliceImpl = function (s, e, l) {\n  return l.slice(s, e);\n};\n\n//------------------------------------------------------------------------------\n// Zipping ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const zipWithImpl = function (f, xs, ys) {\n  var l = xs.length < ys.length ? xs.length : ys.length;\n  var result = new Array(l);\n  for (var i = 0; i < l; i++) {\n    result[i] = f(xs[i])(ys[i]);\n  }\n  return result;\n};\n\n//------------------------------------------------------------------------------\n// Folding ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const anyImpl = function (p, xs) {\n  var len = xs.length;\n  for (var i = 0; i < len; i++) {\n    if (p(xs[i])) return true;\n  }\n  return false;\n};\n\nexport const allImpl = function (p, xs) {\n  var len = xs.length;\n  for (var i = 0; i < len; i++) {\n    if (!p(xs[i])) return false;\n  }\n  return true;\n};\n\n//------------------------------------------------------------------------------\n// Partial ---------------------------------------------------------------------\n//------------------------------------------------------------------------------\n\nexport const unsafeIndexImpl = function (xs, n) {\n  return xs[n];\n};\n", "function newSTArray() {\n  return [];\n}\nexport { newSTArray as new };\n\nexport const peekImpl = function (just, nothing, i, xs) {\n  return i >= 0 && i < xs.length ? just(xs[i]) : nothing;\n};\n\nexport const pokeImpl = function (i, a, xs) {\n  var ret = i >= 0 && i < xs.length;\n  if (ret) xs[i] = a;\n  return ret;\n};\n\nexport const lengthImpl = function (xs) {\n  return xs.length;\n};\n\nexport const popImpl = function (just, nothing, xs) {\n  return xs.length > 0 ? just(xs.pop()) : nothing;\n};\n\nexport const pushAllImpl = function (as, xs) {\n  return xs.push.apply(xs, as);\n};\n\nexport const shiftImpl = function (just, nothing, xs) {\n  return xs.length > 0 ? just(xs.shift()) : nothing;\n};\n\nexport const unshiftAllImpl = function (as, xs) {\n  return xs.unshift.apply(xs, as);\n};\n\nexport const spliceImpl = function (i, howMany, bs, xs) {\n  return xs.splice.apply(xs, [i, howMany].concat(bs));\n};\n\nfunction unsafeFreezeThawImpl(xs) {\n  return xs;\n}\n\nexport const unsafeFreezeImpl = unsafeFreezeThawImpl;\n\nexport const unsafeThawImpl = unsafeFreezeThawImpl;\n\nfunction copyImpl(xs) {\n  return xs.slice();\n}\n\nexport const freezeImpl = copyImpl;\n\nexport const thawImpl = copyImpl;\n\nexport const sortByImpl = (function () {\n  function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {\n    var mid;\n    var i;\n    var j;\n    var k;\n    var x;\n    var y;\n    var c;\n\n    mid = from + ((to - from) >> 1);\n    if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);\n    if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);\n\n    i = from;\n    j = mid;\n    k = from;\n    while (i < mid && j < to) {\n      x = xs2[i];\n      y = xs2[j];\n      c = fromOrdering(compare(x)(y));\n      if (c > 0) {\n        xs1[k++] = y;\n        ++j;\n      } else {\n        xs1[k++] = x;\n        ++i;\n      }\n    }\n    while (i < mid) {\n      xs1[k++] = xs2[i++];\n    }\n    while (j < to) {\n      xs1[k++] = xs2[j++];\n    }\n  }\n\n  return function (compare, fromOrdering, xs) {\n    if (xs.length < 2) return xs;\n\n    mergeFromTo(compare, fromOrdering, xs, xs.slice(0), 0, xs.length);\n\n    return xs;\n  };\n})();\n\nexport const toAssocArrayImpl = function (xs) {\n  var n = xs.length;\n  var as = new Array(n);\n  for (var i = 0; i < n; i++) as[i] = { value: xs[i], index: i };\n  return as;\n};\n", "export const mkSTFn1 = function mkSTFn1(fn) {\n  return function(x) {\n    return fn(x)();\n  };\n};\n  \nexport const mkSTFn2 = function mkSTFn2(fn) {\n  return function(a, b) {\n    return fn(a)(b)();\n  };\n};\n  \nexport const mkSTFn3 = function mkSTFn3(fn) {\n  return function(a, b, c) {\n    return fn(a)(b)(c)();\n  };\n};\n  \nexport const mkSTFn4 = function mkSTFn4(fn) {\n  return function(a, b, c, d) {\n    return fn(a)(b)(c)(d)();\n  };\n};\n  \nexport const mkSTFn5 = function mkSTFn5(fn) {\n  return function(a, b, c, d, e) {\n    return fn(a)(b)(c)(d)(e)();\n  };\n};\n  \nexport const mkSTFn6 = function mkSTFn6(fn) {\n  return function(a, b, c, d, e, f) {\n    return fn(a)(b)(c)(d)(e)(f)();\n  };\n};\n  \nexport const mkSTFn7 = function mkSTFn7(fn) {\n  return function(a, b, c, d, e, f, g) {\n    return fn(a)(b)(c)(d)(e)(f)(g)();\n  };\n};\n  \nexport const mkSTFn8 = function mkSTFn8(fn) {\n  return function(a, b, c, d, e, f, g, h) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)();\n  };\n};\n  \nexport const mkSTFn9 = function mkSTFn9(fn) {\n  return function(a, b, c, d, e, f, g, h, i) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();\n  };\n};\n  \nexport const mkSTFn10 = function mkSTFn10(fn) {\n  return function(a, b, c, d, e, f, g, h, i, j) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();\n  };\n};\n  \nexport const runSTFn1 = function runSTFn1(fn) {\n  return function(a) {\n    return function() {\n      return fn(a);\n    };\n  };\n};\n  \nexport const runSTFn2 = function runSTFn2(fn) {\n  return function(a) {\n    return function(b) {\n      return function() {\n        return fn(a, b);\n      };\n    };\n  };\n};\n  \nexport const runSTFn3 = function runSTFn3(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function() {\n          return fn(a, b, c);\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn4 = function runSTFn4(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function() {\n            return fn(a, b, c, d);\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn5 = function runSTFn5(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function() {\n              return fn(a, b, c, d, e);\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn6 = function runSTFn6(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function() {\n                return fn(a, b, c, d, e, f);\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn7 = function runSTFn7(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function() {\n                  return fn(a, b, c, d, e, f, g);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn8 = function runSTFn8(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function() {\n                    return fn(a, b, c, d, e, f, g, h);\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn9 = function runSTFn9(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function(i) {\n                    return function() {\n                      return fn(a, b, c, d, e, f, g, h, i);\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n  \nexport const runSTFn10 = function runSTFn10(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function(i) {\n                    return function(j) {\n                      return function() {\n                        return fn(a, b, c, d, e, f, g, h, i, j);\n                      };\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Control_Monad_ST_Uncurried from \"../Control.Monad.ST.Uncurried/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nvar bind = /* #__PURE__ */ Control_Bind.bind(Control_Monad_ST_Internal.bindST);\nvar unshiftAll = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn2($foreign.unshiftAllImpl);\nvar unshift = function (a) {\n    return Control_Monad_ST_Uncurried.runSTFn2($foreign.unshiftAllImpl)([ a ]);\n};\nvar unsafeThaw = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.unsafeThawImpl);\nvar unsafeFreeze = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.unsafeFreezeImpl);\nvar toAssocArray = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.toAssocArrayImpl);\nvar thaw = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.thawImpl);\nvar withArray = function (f) {\n    return function (xs) {\n        return function __do() {\n            var result = thaw(xs)();\n            f(result)();\n            return unsafeFreeze(result)();\n        };\n    };\n};\nvar splice = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn4($foreign.spliceImpl);\nvar sortBy = function (comp) {\n    return Control_Monad_ST_Uncurried.runSTFn3($foreign.sortByImpl)(comp)(function (v) {\n        if (v instanceof Data_Ordering.GT) {\n            return 1;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return 0;\n        };\n        if (v instanceof Data_Ordering.LT) {\n            return -1 | 0;\n        };\n        throw new Error(\"Failed pattern match at Data.Array.ST (line 119, column 40 - line 122, column 11): \" + [ v.constructor.name ]);\n    });\n};\nvar sortWith = function (dictOrd) {\n    var comparing = Data_Ord.comparing(dictOrd);\n    return function (f) {\n        return sortBy(comparing(f));\n    };\n};\nvar sort = function (dictOrd) {\n    return sortBy(Data_Ord.compare(dictOrd));\n};\nvar shift = /* #__PURE__ */ (function () {\n    return Control_Monad_ST_Uncurried.runSTFn3($foreign.shiftImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar run = function (st) {\n    return bind(st)(unsafeFreeze)();\n};\nvar pushAll = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn2($foreign.pushAllImpl);\nvar push = function (a) {\n    return Control_Monad_ST_Uncurried.runSTFn2($foreign.pushAllImpl)([ a ]);\n};\nvar pop = /* #__PURE__ */ (function () {\n    return Control_Monad_ST_Uncurried.runSTFn3($foreign.popImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar poke = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn3($foreign.pokeImpl);\nvar peek = /* #__PURE__ */ (function () {\n    return Control_Monad_ST_Uncurried.runSTFn4($foreign.peekImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar modify = function (i) {\n    return function (f) {\n        return function (xs) {\n            return function __do() {\n                var entry = peek(i)(xs)();\n                if (entry instanceof Data_Maybe.Just) {\n                    return poke(i)(f(entry.value0))(xs)();\n                };\n                if (entry instanceof Data_Maybe.Nothing) {\n                    return false;\n                };\n                throw new Error(\"Failed pattern match at Data.Array.ST (line 222, column 3 - line 224, column 26): \" + [ entry.constructor.name ]);\n            };\n        };\n    };\n};\nvar length = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.lengthImpl);\nvar freeze = /* #__PURE__ */ Control_Monad_ST_Uncurried.runSTFn1($foreign.freezeImpl);\nexport {\n    new\n} from \"./foreign.js\";\nexport {\n    run,\n    withArray,\n    peek,\n    poke,\n    modify,\n    length,\n    pop,\n    push,\n    pushAll,\n    shift,\n    unshift,\n    unshiftAll,\n    splice,\n    sort,\n    sortBy,\n    sortWith,\n    freeze,\n    thaw,\n    unsafeFreeze,\n    unsafeThaw,\n    toAssocArray\n};\n", "export const foldrArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = len - 1; i >= 0; i--) {\n        acc = f(xs[i])(acc);\n      }\n      return acc;\n    };\n  };\n};\n\nexport const foldlArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = 0; i < len; i++) {\n        acc = f(acc)(xs[i]);\n      }\n      return acc;\n    };\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar plusArray = {\n    empty: [  ],\n    Alt0: function () {\n        return Control_Alt.altArray;\n    }\n};\nvar empty = function (dict) {\n    return dict.empty;\n};\nexport {\n    empty,\n    plusArray\n};\nexport {\n    alt\n} from \"../Control.Alt/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Tuple = /* #__PURE__ */ (function () {\n    function Tuple(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Tuple.create = function (value0) {\n        return function (value1) {\n            return new Tuple(value0, value1);\n        };\n    };\n    return Tuple;\n})();\nvar uncurry = function (f) {\n    return function (v) {\n        return f(v.value0)(v.value1);\n    };\n};\nvar swap = function (v) {\n    return new Tuple(v.value1, v.value0);\n};\nvar snd = function (v) {\n    return v.value1;\n};\nvar showTuple = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(dictShow1);\n        return {\n            show: function (v) {\n                return \"(Tuple \" + (show(v.value0) + (\" \" + (show1(v.value1) + \")\")));\n            }\n        };\n    };\n};\nvar semiringTuple = function (dictSemiring) {\n    var add = Data_Semiring.add(dictSemiring);\n    var one = Data_Semiring.one(dictSemiring);\n    var mul = Data_Semiring.mul(dictSemiring);\n    var zero = Data_Semiring.zero(dictSemiring);\n    return function (dictSemiring1) {\n        var add1 = Data_Semiring.add(dictSemiring1);\n        var mul1 = Data_Semiring.mul(dictSemiring1);\n        return {\n            add: function (v) {\n                return function (v1) {\n                    return new Tuple(add(v.value0)(v1.value0), add1(v.value1)(v1.value1));\n                };\n            },\n            one: new Tuple(one, Data_Semiring.one(dictSemiring1)),\n            mul: function (v) {\n                return function (v1) {\n                    return new Tuple(mul(v.value0)(v1.value0), mul1(v.value1)(v1.value1));\n                };\n            },\n            zero: new Tuple(zero, Data_Semiring.zero(dictSemiring1))\n        };\n    };\n};\nvar semigroupoidTuple = {\n    compose: function (v) {\n        return function (v1) {\n            return new Tuple(v1.value0, v.value1);\n        };\n    }\n};\nvar semigroupTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return function (dictSemigroup1) {\n        var append2 = Data_Semigroup.append(dictSemigroup1);\n        return {\n            append: function (v) {\n                return function (v1) {\n                    return new Tuple(append1(v.value0)(v1.value0), append2(v.value1)(v1.value1));\n                };\n            }\n        };\n    };\n};\nvar ringTuple = function (dictRing) {\n    var sub = Data_Ring.sub(dictRing);\n    var semiringTuple1 = semiringTuple(dictRing.Semiring0());\n    return function (dictRing1) {\n        var sub1 = Data_Ring.sub(dictRing1);\n        var semiringTuple2 = semiringTuple1(dictRing1.Semiring0());\n        return {\n            sub: function (v) {\n                return function (v1) {\n                    return new Tuple(sub(v.value0)(v1.value0), sub1(v.value1)(v1.value1));\n                };\n            },\n            Semiring0: function () {\n                return semiringTuple2;\n            }\n        };\n    };\n};\nvar monoidTuple = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var semigroupTuple1 = semigroupTuple(dictMonoid.Semigroup0());\n    return function (dictMonoid1) {\n        var semigroupTuple2 = semigroupTuple1(dictMonoid1.Semigroup0());\n        return {\n            mempty: new Tuple(mempty, Data_Monoid.mempty(dictMonoid1)),\n            Semigroup0: function () {\n                return semigroupTuple2;\n            }\n        };\n    };\n};\nvar heytingAlgebraTuple = function (dictHeytingAlgebra) {\n    var tt = Data_HeytingAlgebra.tt(dictHeytingAlgebra);\n    var ff = Data_HeytingAlgebra.ff(dictHeytingAlgebra);\n    var implies = Data_HeytingAlgebra.implies(dictHeytingAlgebra);\n    var conj1 = Data_HeytingAlgebra.conj(dictHeytingAlgebra);\n    var disj = Data_HeytingAlgebra.disj(dictHeytingAlgebra);\n    var not = Data_HeytingAlgebra.not(dictHeytingAlgebra);\n    return function (dictHeytingAlgebra1) {\n        var implies1 = Data_HeytingAlgebra.implies(dictHeytingAlgebra1);\n        var conj2 = Data_HeytingAlgebra.conj(dictHeytingAlgebra1);\n        var disj1 = Data_HeytingAlgebra.disj(dictHeytingAlgebra1);\n        var not1 = Data_HeytingAlgebra.not(dictHeytingAlgebra1);\n        return {\n            tt: new Tuple(tt, Data_HeytingAlgebra.tt(dictHeytingAlgebra1)),\n            ff: new Tuple(ff, Data_HeytingAlgebra.ff(dictHeytingAlgebra1)),\n            implies: function (v) {\n                return function (v1) {\n                    return new Tuple(implies(v.value0)(v1.value0), implies1(v.value1)(v1.value1));\n                };\n            },\n            conj: function (v) {\n                return function (v1) {\n                    return new Tuple(conj1(v.value0)(v1.value0), conj2(v.value1)(v1.value1));\n                };\n            },\n            disj: function (v) {\n                return function (v1) {\n                    return new Tuple(disj(v.value0)(v1.value0), disj1(v.value1)(v1.value1));\n                };\n            },\n            not: function (v) {\n                return new Tuple(not(v.value0), not1(v.value1));\n            }\n        };\n    };\n};\nvar genericTuple = {\n    to: function (x) {\n        return new Tuple(x.value0, x.value1);\n    },\n    from: function (x) {\n        return new Data_Generic_Rep.Product(x.value0, x.value1);\n    }\n};\nvar functorTuple = {\n    map: function (f) {\n        return function (m) {\n            return new Tuple(m.value0, f(m.value1));\n        };\n    }\n};\nvar invariantTuple = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorTuple)\n};\nvar fst = function (v) {\n    return v.value0;\n};\nvar lazyTuple = function (dictLazy) {\n    var defer = Control_Lazy.defer(dictLazy);\n    return function (dictLazy1) {\n        var defer1 = Control_Lazy.defer(dictLazy1);\n        return {\n            defer: function (f) {\n                return new Tuple(defer(function (v) {\n                    return fst(f(Data_Unit.unit));\n                }), defer1(function (v) {\n                    return snd(f(Data_Unit.unit));\n                }));\n            }\n        };\n    };\n};\nvar extendTuple = {\n    extend: function (f) {\n        return function (v) {\n            return new Tuple(v.value0, f(v));\n        };\n    },\n    Functor0: function () {\n        return functorTuple;\n    }\n};\nvar eqTuple = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(dictEq1);\n        return {\n            eq: function (x) {\n                return function (y) {\n                    return eq(x.value0)(y.value0) && eq1(x.value1)(y.value1);\n                };\n            }\n        };\n    };\n};\nvar ordTuple = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqTuple1 = eqTuple(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqTuple2 = eqTuple1(dictOrd1.Eq0());\n        return {\n            compare: function (x) {\n                return function (y) {\n                    var v = compare(x.value0)(y.value0);\n                    if (v instanceof Data_Ordering.LT) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (v instanceof Data_Ordering.GT) {\n                        return Data_Ordering.GT.value;\n                    };\n                    return compare1(x.value1)(y.value1);\n                };\n            },\n            Eq0: function () {\n                return eqTuple2;\n            }\n        };\n    };\n};\nvar eq1Tuple = function (dictEq) {\n    var eqTuple1 = eqTuple(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqTuple1(dictEq1));\n        }\n    };\n};\nvar ord1Tuple = function (dictOrd) {\n    var ordTuple1 = ordTuple(dictOrd);\n    var eq1Tuple1 = eq1Tuple(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordTuple1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Tuple1;\n        }\n    };\n};\nvar curry = function (f) {\n    return function (a) {\n        return function (b) {\n            return f(new Tuple(a, b));\n        };\n    };\n};\nvar comonadTuple = {\n    extract: snd,\n    Extend0: function () {\n        return extendTuple;\n    }\n};\nvar commutativeRingTuple = function (dictCommutativeRing) {\n    var ringTuple1 = ringTuple(dictCommutativeRing.Ring0());\n    return function (dictCommutativeRing1) {\n        var ringTuple2 = ringTuple1(dictCommutativeRing1.Ring0());\n        return {\n            Ring0: function () {\n                return ringTuple2;\n            }\n        };\n    };\n};\nvar boundedTuple = function (dictBounded) {\n    var top = Data_Bounded.top(dictBounded);\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var ordTuple1 = ordTuple(dictBounded.Ord0());\n    return function (dictBounded1) {\n        var ordTuple2 = ordTuple1(dictBounded1.Ord0());\n        return {\n            top: new Tuple(top, Data_Bounded.top(dictBounded1)),\n            bottom: new Tuple(bottom, Data_Bounded.bottom(dictBounded1)),\n            Ord0: function () {\n                return ordTuple2;\n            }\n        };\n    };\n};\nvar booleanAlgebraTuple = function (dictBooleanAlgebra) {\n    var heytingAlgebraTuple1 = heytingAlgebraTuple(dictBooleanAlgebra.HeytingAlgebra0());\n    return function (dictBooleanAlgebra1) {\n        var heytingAlgebraTuple2 = heytingAlgebraTuple1(dictBooleanAlgebra1.HeytingAlgebra0());\n        return {\n            HeytingAlgebra0: function () {\n                return heytingAlgebraTuple2;\n            }\n        };\n    };\n};\nvar applyTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return new Tuple(append1(v.value0)(v1.value0), v.value1(v1.value1));\n            };\n        },\n        Functor0: function () {\n            return functorTuple;\n        }\n    };\n};\nvar bindTuple = function (dictSemigroup) {\n    var append1 = Data_Semigroup.append(dictSemigroup);\n    var applyTuple1 = applyTuple(dictSemigroup);\n    return {\n        bind: function (v) {\n            return function (f) {\n                var v1 = f(v.value1);\n                return new Tuple(append1(v.value0)(v1.value0), v1.value1);\n            };\n        },\n        Apply0: function () {\n            return applyTuple1;\n        }\n    };\n};\nvar applicativeTuple = function (dictMonoid) {\n    var applyTuple1 = applyTuple(dictMonoid.Semigroup0());\n    return {\n        pure: Tuple.create(Data_Monoid.mempty(dictMonoid)),\n        Apply0: function () {\n            return applyTuple1;\n        }\n    };\n};\nvar monadTuple = function (dictMonoid) {\n    var applicativeTuple1 = applicativeTuple(dictMonoid);\n    var bindTuple1 = bindTuple(dictMonoid.Semigroup0());\n    return {\n        Applicative0: function () {\n            return applicativeTuple1;\n        },\n        Bind1: function () {\n            return bindTuple1;\n        }\n    };\n};\nexport {\n    Tuple,\n    fst,\n    snd,\n    curry,\n    uncurry,\n    swap,\n    showTuple,\n    eqTuple,\n    eq1Tuple,\n    ordTuple,\n    ord1Tuple,\n    boundedTuple,\n    semigroupoidTuple,\n    semigroupTuple,\n    monoidTuple,\n    semiringTuple,\n    ringTuple,\n    commutativeRingTuple,\n    heytingAlgebraTuple,\n    booleanAlgebraTuple,\n    functorTuple,\n    genericTuple,\n    invariantTuple,\n    applyTuple,\n    applicativeTuple,\n    bindTuple,\n    monadTuple,\n    extendTuple,\n    comonadTuple,\n    lazyTuple\n};\n", "// Generated by purs version 0.15.10\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar coerce = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nexport {\n    coerce\n};\n", "// Generated by purs version 0.15.10\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar wrap = function () {\n    return coerce;\n};\nvar wrap1 = /* #__PURE__ */ wrap();\nvar unwrap = function () {\n    return coerce;\n};\nvar unwrap1 = /* #__PURE__ */ unwrap();\nvar underF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar underF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar under2 = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar under = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar un = function () {\n    return function (v) {\n        return unwrap1;\n    };\n};\nvar traverse = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar overF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar overF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar over2 = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar over = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar newtypeMultiplicative = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeLast = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeFirst = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeEndo = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDual = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDisj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeConj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeAdditive = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar modify = function () {\n    return function (fn) {\n        return function (t) {\n            return wrap1(fn(unwrap1(t)));\n        };\n    };\n};\nvar collect = function () {\n    return function () {\n        return function (v) {\n            return coerce;\n        };\n    };\n};\nvar alaF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return coerce;\n                };\n            };\n        };\n    };\n};\nvar ala = function () {\n    return function () {\n        return function () {\n            return function (v) {\n                return function (f) {\n                    return coerce(f(wrap1));\n                };\n            };\n        };\n    };\n};\nexport {\n    wrap,\n    unwrap,\n    un,\n    modify,\n    ala,\n    alaF,\n    over,\n    overF,\n    under,\n    underF,\n    over2,\n    overF2,\n    under2,\n    underF2,\n    traverse,\n    collect,\n    newtypeAdditive,\n    newtypeMultiplicative,\n    newtypeConj,\n    newtypeDisj,\n    newtypeDual,\n    newtypeEndo,\n    newtypeFirst,\n    newtypeLast\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Endo from \"../Data.Monoid.Endo/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar monoidEndo = /* #__PURE__ */ Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn);\nvar monoidDual = /* #__PURE__ */ Data_Monoid_Dual.monoidDual(monoidEndo);\nvar alaF = /* #__PURE__ */ Data_Newtype.alaF()()()();\nvar foldr = function (dict) {\n    return dict.foldr;\n};\nvar indexr = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (idx) {\n        var go = function (a) {\n            return function (cursor) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $292 = cursor.pos === idx;\n                if ($292) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $451 = foldr2(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($452) {\n            return (function (v) {\n                return v.elem;\n            })($451($452));\n        };\n    };\n};\nvar $$null = function (dictFoldable) {\n    return foldr(dictFoldable)(function (v) {\n        return function (v1) {\n            return false;\n        };\n    })(true);\n};\nvar oneOf = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictPlus) {\n        return foldr2(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));\n    };\n};\nvar oneOfMap = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictPlus) {\n        var alt = Control_Alt.alt(dictPlus.Alt0());\n        var empty = Control_Plus.empty(dictPlus);\n        return function (f) {\n            return foldr2(function ($453) {\n                return alt(f($453));\n            })(empty);\n        };\n    };\n};\nvar traverse_ = function (dictApplicative) {\n    var applySecond = Control_Apply.applySecond(dictApplicative.Apply0());\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (dictFoldable) {\n        var foldr2 = foldr(dictFoldable);\n        return function (f) {\n            return foldr2(function ($454) {\n                return applySecond(f($454));\n            })(pure(Data_Unit.unit));\n        };\n    };\n};\nvar for_ = function (dictApplicative) {\n    var traverse_1 = traverse_(dictApplicative);\n    return function (dictFoldable) {\n        return Data_Function.flip(traverse_1(dictFoldable));\n    };\n};\nvar sequence_ = function (dictApplicative) {\n    var traverse_1 = traverse_(dictApplicative);\n    return function (dictFoldable) {\n        return traverse_1(dictFoldable)(identity);\n    };\n};\nvar foldl = function (dict) {\n    return dict.foldl;\n};\nvar indexl = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (idx) {\n        var go = function (cursor) {\n            return function (a) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $296 = cursor.pos === idx;\n                if ($296) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $455 = foldl2(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($456) {\n            return (function (v) {\n                return v.elem;\n            })($455($456));\n        };\n    };\n};\nvar intercalate = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (sep) {\n            return function (xs) {\n                var go = function (v) {\n                    return function (v1) {\n                        if (v.init) {\n                            return {\n                                init: false,\n                                acc: v1\n                            };\n                        };\n                        return {\n                            init: false,\n                            acc: append(v.acc)(append(sep)(v1))\n                        };\n                    };\n                };\n                return (foldl2(go)({\n                    init: true,\n                    acc: mempty\n                })(xs)).acc;\n            };\n        };\n    };\n};\nvar length = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        var add1 = Data_Semiring.add(dictSemiring);\n        var one = Data_Semiring.one(dictSemiring);\n        return foldl2(function (c) {\n            return function (v) {\n                return add1(one)(c);\n            };\n        })(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar maximumBy = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (cmp) {\n        var max$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $303 = eq1(cmp(v.value0)(v1))(Data_Ordering.GT.value);\n                        if ($303) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl2(max$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar maximum = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (dictFoldable) {\n        return maximumBy(dictFoldable)(compare);\n    };\n};\nvar minimumBy = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (cmp) {\n        var min$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $307 = eq1(cmp(v.value0)(v1))(Data_Ordering.LT.value);\n                        if ($307) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl2(min$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar minimum = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (dictFoldable) {\n        return minimumBy(dictFoldable)(compare);\n    };\n};\nvar product = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        return foldl2(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));\n    };\n};\nvar sum = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictSemiring) {\n        return foldl2(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar foldableTuple = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v.value1)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v.value1);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v.value1);\n            };\n        };\n    }\n};\nvar foldableMultiplicative = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableMaybe = {\n    foldr: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return v(v2.value0)(v1);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return v(v1)(v2.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return mempty;\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldr1 = /* #__PURE__ */ foldr(foldableMaybe);\nvar foldl1 = /* #__PURE__ */ foldl(foldableMaybe);\nvar foldableIdentity = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableEither = {\n    foldr: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(v2.value0)(v1);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(v1)(v2.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return mempty;\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldableDual = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableDisj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableConst = {\n    foldr: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                return mempty;\n            };\n        };\n    }\n};\nvar foldableConj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableAdditive = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldMapDefaultR = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldr2(function (x) {\n                return function (acc) {\n                    return append(f(x))(acc);\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldableArray = {\n    foldr: $foreign.foldrArray,\n    foldl: $foreign.foldlArray,\n    foldMap: function (dictMonoid) {\n        return foldMapDefaultR(foldableArray)(dictMonoid);\n    }\n};\nvar foldMapDefaultL = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldl2(function (acc) {\n                return function (x) {\n                    return append(acc)(f(x));\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldMap = function (dict) {\n    return dict.foldMap;\n};\nvar foldMap1 = /* #__PURE__ */ foldMap(foldableMaybe);\nvar foldableApp = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return {\n        foldr: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldr2(f)(i)(v);\n                };\n            };\n        },\n        foldl: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldl2(f)(i)(v);\n                };\n            };\n        },\n        foldMap: function (dictMonoid) {\n            var foldMap3 = foldMap2(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return foldMap3(f)(v);\n                };\n            };\n        }\n    };\n};\nvar foldableCompose = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldr2(Data_Function.flip(foldr3(f)))(i)(v);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldl2(foldl3(f))(i)(v);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return foldMap4(foldMap5(f))(v);\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldableCoproduct = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldr2(f)(z))(foldr3(f)(z));\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldl2(f)(z))(foldl3(f)(z));\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return Data_Functor_Coproduct.coproduct(foldMap4(f))(foldMap5(f));\n                };\n            }\n        };\n    };\n};\nvar foldableFirst = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr1(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl1(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap2 = foldMap1(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMap2(f)(v);\n            };\n        };\n    }\n};\nvar foldableLast = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr1(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl1(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap2 = foldMap1(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMap2(f)(v);\n            };\n        };\n    }\n};\nvar foldableProduct = function (dictFoldable) {\n    var foldr2 = foldr(dictFoldable);\n    var foldl2 = foldl(dictFoldable);\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictFoldable1) {\n        var foldr3 = foldr(dictFoldable1);\n        var foldl3 = foldl(dictFoldable1);\n        var foldMap3 = foldMap(dictFoldable1);\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldr2(f)(foldr3(f)(z)(v.value1))(v.value0);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldl3(f)(foldl2(f)(z)(v.value0))(v.value1);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n                var foldMap4 = foldMap2(dictMonoid);\n                var foldMap5 = foldMap3(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return append(foldMap4(f)(v.value0))(foldMap5(f)(v.value1));\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldlDefault = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidDual);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(unwrap(foldMap2((function () {\n                    var $457 = Data_Function.flip(c);\n                    return function ($458) {\n                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($457($458)));\n                    };\n                })())(xs)))(u);\n            };\n        };\n    };\n};\nvar foldrDefault = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidEndo);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(foldMap2(function ($459) {\n                    return Data_Monoid_Endo.Endo(c($459));\n                })(xs))(u);\n            };\n        };\n    };\n};\nvar lookup = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst);\n    return function (dictEq) {\n        var eq2 = Data_Eq.eq(dictEq);\n        return function (a) {\n            var $460 = foldMap2(function (v) {\n                var $444 = eq2(a)(v.value0);\n                if ($444) {\n                    return new Data_Maybe.Just(v.value1);\n                };\n                return Data_Maybe.Nothing.value;\n            });\n            return function ($461) {\n                return unwrap($460($461));\n            };\n        };\n    };\n};\nvar surroundMap = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable)(monoidEndo);\n    return function (dictSemigroup) {\n        var append = Data_Semigroup.append(dictSemigroup);\n        return function (d) {\n            return function (t) {\n                return function (f) {\n                    var joined = function (a) {\n                        return function (m) {\n                            return append(d)(append(t(a))(m));\n                        };\n                    };\n                    return unwrap(foldMap2(joined)(f))(d);\n                };\n            };\n        };\n    };\n};\nvar surround = function (dictFoldable) {\n    var surroundMap1 = surroundMap(dictFoldable);\n    return function (dictSemigroup) {\n        var surroundMap2 = surroundMap1(dictSemigroup);\n        return function (d) {\n            return surroundMap2(d)(identity);\n        };\n    };\n};\nvar foldM = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (f) {\n            return function (b0) {\n                return foldl2(function (b) {\n                    return function (a) {\n                        return bind(b)(Data_Function.flip(f)(a));\n                    };\n                })(pure(b0));\n            };\n        };\n    };\n};\nvar fold = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictMonoid) {\n        return foldMap2(dictMonoid)(identity);\n    };\n};\nvar findMap = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return p(v1);\n                };\n                return v;\n            };\n        };\n        return foldl2(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar find = function (dictFoldable) {\n    var foldl2 = foldl(dictFoldable);\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing && p(v1)) {\n                    return new Data_Maybe.Just(v1);\n                };\n                return v;\n            };\n        };\n        return foldl2(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar any = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return alaF(Data_Monoid_Disj.Disj)(foldMap2(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));\n    };\n};\nvar elem = function (dictFoldable) {\n    var any1 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);\n    return function (dictEq) {\n        var $462 = Data_Eq.eq(dictEq);\n        return function ($463) {\n            return any1($462($463));\n        };\n    };\n};\nvar notElem = function (dictFoldable) {\n    var elem1 = elem(dictFoldable);\n    return function (dictEq) {\n        var elem2 = elem1(dictEq);\n        return function (x) {\n            var $464 = elem2(x);\n            return function ($465) {\n                return !$464($465);\n            };\n        };\n    };\n};\nvar or = function (dictFoldable) {\n    var any1 = any(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return any1(dictHeytingAlgebra)(identity);\n    };\n};\nvar all = function (dictFoldable) {\n    var foldMap2 = foldMap(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return alaF(Data_Monoid_Conj.Conj)(foldMap2(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));\n    };\n};\nvar and = function (dictFoldable) {\n    var all1 = all(dictFoldable);\n    return function (dictHeytingAlgebra) {\n        return all1(dictHeytingAlgebra)(identity);\n    };\n};\nexport {\n    foldr,\n    foldl,\n    foldMap,\n    foldrDefault,\n    foldlDefault,\n    foldMapDefaultL,\n    foldMapDefaultR,\n    fold,\n    foldM,\n    traverse_,\n    for_,\n    sequence_,\n    oneOf,\n    oneOfMap,\n    intercalate,\n    surroundMap,\n    surround,\n    and,\n    or,\n    all,\n    any,\n    sum,\n    product,\n    elem,\n    notElem,\n    indexl,\n    indexr,\n    find,\n    findMap,\n    maximum,\n    maximumBy,\n    minimum,\n    minimumBy,\n    $$null as null,\n    length,\n    lookup,\n    foldableArray,\n    foldableMaybe,\n    foldableFirst,\n    foldableLast,\n    foldableAdditive,\n    foldableDual,\n    foldableDisj,\n    foldableConj,\n    foldableMultiplicative,\n    foldableEither,\n    foldableTuple,\n    foldableIdentity,\n    foldableConst,\n    foldableProduct,\n    foldableCoproduct,\n    foldableCompose,\n    foldableApp\n};\n", "// module Data.Function.Uncurried\n\nexport const mkFn0 = function (fn) {\n  return function () {\n    return fn();\n  };\n};\n\nexport const mkFn2 = function (fn) {\n  /* jshint maxparams: 2 */\n  return function (a, b) {\n    return fn(a)(b);\n  };\n};\n\nexport const mkFn3 = function (fn) {\n  /* jshint maxparams: 3 */\n  return function (a, b, c) {\n    return fn(a)(b)(c);\n  };\n};\n\nexport const mkFn4 = function (fn) {\n  /* jshint maxparams: 4 */\n  return function (a, b, c, d) {\n    return fn(a)(b)(c)(d);\n  };\n};\n\nexport const mkFn5 = function (fn) {\n  /* jshint maxparams: 5 */\n  return function (a, b, c, d, e) {\n    return fn(a)(b)(c)(d)(e);\n  };\n};\n\nexport const mkFn6 = function (fn) {\n  /* jshint maxparams: 6 */\n  return function (a, b, c, d, e, f) {\n    return fn(a)(b)(c)(d)(e)(f);\n  };\n};\n\nexport const mkFn7 = function (fn) {\n  /* jshint maxparams: 7 */\n  return function (a, b, c, d, e, f, g) {\n    return fn(a)(b)(c)(d)(e)(f)(g);\n  };\n};\n\nexport const mkFn8 = function (fn) {\n  /* jshint maxparams: 8 */\n  return function (a, b, c, d, e, f, g, h) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h);\n  };\n};\n\nexport const mkFn9 = function (fn) {\n  /* jshint maxparams: 9 */\n  return function (a, b, c, d, e, f, g, h, i) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);\n  };\n};\n\nexport const mkFn10 = function (fn) {\n  /* jshint maxparams: 10 */\n  return function (a, b, c, d, e, f, g, h, i, j) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);\n  };\n};\n\nexport const runFn0 = function (fn) {\n  return fn();\n};\n\nexport const runFn2 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return fn(a, b);\n    };\n  };\n};\n\nexport const runFn3 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return fn(a, b, c);\n      };\n    };\n  };\n};\n\nexport const runFn4 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return fn(a, b, c, d);\n        };\n      };\n    };\n  };\n};\n\nexport const runFn5 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return fn(a, b, c, d, e);\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn6 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return fn(a, b, c, d, e, f);\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn7 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return fn(a, b, c, d, e, f, g);\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn8 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return fn(a, b, c, d, e, f, g, h);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn9 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return function (i) {\n                    return fn(a, b, c, d, e, f, g, h, i);\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runFn10 = function (fn) {\n  return function (a) {\n    return function (b) {\n      return function (c) {\n        return function (d) {\n          return function (e) {\n            return function (f) {\n              return function (g) {\n                return function (h) {\n                  return function (i) {\n                    return function (j) {\n                      return fn(a, b, c, d, e, f, g, h, i, j);\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n", "export const mapWithIndexArray = function (f) {\n  return function (xs) {\n    var l = xs.length;\n    var result = Array(l);\n    for (var i = 0; i < l; i++) {\n      result[i] = f(i)(xs[i]);\n    }\n    return result;\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Const from \"../Data.Const/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_App from \"../Data.Functor.App/index.js\";\nimport * as Data_Functor_Compose from \"../Data.Functor.Compose/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_Functor_Product from \"../Data.Functor.Product/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Maybe_Last from \"../Data.Maybe.Last/index.js\";\nimport * as Data_Monoid_Additive from \"../Data.Monoid.Additive/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Multiplicative from \"../Data.Monoid.Multiplicative/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Multiplicative.functorMultiplicative);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map3 = /* #__PURE__ */ Data_Functor.map(Data_Maybe_Last.functorLast);\nvar map4 = /* #__PURE__ */ Data_Functor.map(Data_Maybe_First.functorFirst);\nvar map5 = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);\nvar map6 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Dual.functorDual);\nvar map7 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Disj.functorDisj);\nvar bimap1 = /* #__PURE__ */ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither);\nvar map8 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Conj.functorConj);\nvar map9 = /* #__PURE__ */ Data_Functor.map(Data_Monoid_Additive.functorAdditive);\nvar mapWithIndex = function (dict) {\n    return dict.mapWithIndex;\n};\nvar mapDefault = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    return function (f) {\n        return mapWithIndex1(Data_Function[\"const\"](f));\n    };\n};\nvar functorWithIndexTuple = {\n    mapWithIndex: function (f) {\n        return map(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Tuple.functorTuple;\n    }\n};\nvar functorWithIndexProduct = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorProduct = Data_Functor_Product.functorProduct(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorProduct1 = functorProduct(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return bimap(mapWithIndex1(function ($63) {\n                        return f(Data_Either.Left.create($63));\n                    }))(mapWithIndex2(function ($64) {\n                        return f(Data_Either.Right.create($64));\n                    }))(v);\n                };\n            },\n            Functor0: function () {\n                return functorProduct1;\n            }\n        };\n    };\n};\nvar functorWithIndexMultiplicative = {\n    mapWithIndex: function (f) {\n        return map1(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Multiplicative.functorMultiplicative;\n    }\n};\nvar functorWithIndexMaybe = {\n    mapWithIndex: function (f) {\n        return map2(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe.functorMaybe;\n    }\n};\nvar functorWithIndexLast = {\n    mapWithIndex: function (f) {\n        return map3(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe_Last.functorLast;\n    }\n};\nvar functorWithIndexIdentity = {\n    mapWithIndex: function (f) {\n        return function (v) {\n            return f(Data_Unit.unit)(v);\n        };\n    },\n    Functor0: function () {\n        return Data_Identity.functorIdentity;\n    }\n};\nvar functorWithIndexFirst = {\n    mapWithIndex: function (f) {\n        return map4(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Maybe_First.functorFirst;\n    }\n};\nvar functorWithIndexEither = {\n    mapWithIndex: function (f) {\n        return map5(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Either.functorEither;\n    }\n};\nvar functorWithIndexDual = {\n    mapWithIndex: function (f) {\n        return map6(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Dual.functorDual;\n    }\n};\nvar functorWithIndexDisj = {\n    mapWithIndex: function (f) {\n        return map7(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Disj.functorDisj;\n    }\n};\nvar functorWithIndexCoproduct = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorCoproduct = Data_Functor_Coproduct.functorCoproduct(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorCoproduct1 = functorCoproduct(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return bimap1(mapWithIndex1(function ($65) {\n                        return f(Data_Either.Left.create($65));\n                    }))(mapWithIndex2(function ($66) {\n                        return f(Data_Either.Right.create($66));\n                    }))(v);\n                };\n            },\n            Functor0: function () {\n                return functorCoproduct1;\n            }\n        };\n    };\n};\nvar functorWithIndexConst = {\n    mapWithIndex: function (v) {\n        return function (v1) {\n            return v1;\n        };\n    },\n    Functor0: function () {\n        return Data_Const.functorConst;\n    }\n};\nvar functorWithIndexConj = {\n    mapWithIndex: function (f) {\n        return map8(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Conj.functorConj;\n    }\n};\nvar functorWithIndexCompose = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorCompose = Data_Functor_Compose.functorCompose(dictFunctorWithIndex.Functor0());\n    return function (dictFunctorWithIndex1) {\n        var mapWithIndex2 = mapWithIndex(dictFunctorWithIndex1);\n        var functorCompose1 = functorCompose(dictFunctorWithIndex1.Functor0());\n        return {\n            mapWithIndex: function (f) {\n                return function (v) {\n                    return mapWithIndex1((function () {\n                        var $67 = Data_Tuple.curry(f);\n                        return function ($68) {\n                            return mapWithIndex2($67($68));\n                        };\n                    })())(v);\n                };\n            },\n            Functor0: function () {\n                return functorCompose1;\n            }\n        };\n    };\n};\nvar functorWithIndexArray = {\n    mapWithIndex: $foreign.mapWithIndexArray,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar functorWithIndexApp = function (dictFunctorWithIndex) {\n    var mapWithIndex1 = mapWithIndex(dictFunctorWithIndex);\n    var functorApp = Data_Functor_App.functorApp(dictFunctorWithIndex.Functor0());\n    return {\n        mapWithIndex: function (f) {\n            return function (v) {\n                return mapWithIndex1(f)(v);\n            };\n        },\n        Functor0: function () {\n            return functorApp;\n        }\n    };\n};\nvar functorWithIndexAdditive = {\n    mapWithIndex: function (f) {\n        return map9(f(Data_Unit.unit));\n    },\n    Functor0: function () {\n        return Data_Monoid_Additive.functorAdditive;\n    }\n};\nexport {\n    mapWithIndex,\n    mapDefault,\n    functorWithIndexArray,\n    functorWithIndexMaybe,\n    functorWithIndexFirst,\n    functorWithIndexLast,\n    functorWithIndexAdditive,\n    functorWithIndexDual,\n    functorWithIndexConj,\n    functorWithIndexDisj,\n    functorWithIndexMultiplicative,\n    functorWithIndexEither,\n    functorWithIndexTuple,\n    functorWithIndexIdentity,\n    functorWithIndexConst,\n    functorWithIndexProduct,\n    functorWithIndexCoproduct,\n    functorWithIndexCompose,\n    functorWithIndexApp\n};\n", "// jshint maxparams: 3\n\nexport const traverseArrayImpl = (function () {\n  function array1(a) {\n    return [a];\n  }\n\n  function array2(a) {\n    return function (b) {\n      return [a, b];\n    };\n  }\n\n  function array3(a) {\n    return function (b) {\n      return function (c) {\n        return [a, b, c];\n      };\n    };\n  }\n\n  function concat2(xs) {\n    return function (ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  return function (apply) {\n    return function (map) {\n      return function (pure) {\n        return function (f) {\n          return function (array) {\n            function go(bot, top) {\n              switch (top - bot) {\n              case 0: return pure([]);\n              case 1: return map(array1)(f(array[bot]));\n              case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));\n              case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));\n              default:\n                // This slightly tricky pivot selection aims to produce two\n                // even-length partitions where possible.\n                var pivot = bot + Math.floor((top - bot) / 4) * 2;\n                return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));\n              }\n            }\n            return go(0, array.length);\n          };\n        };\n      };\n    };\n  };\n})();\n", "export const unfoldr1ArrayImpl = function (isNothing) {\n  return function (fromJust) {\n    return function (fst) {\n      return function (snd) {\n        return function (f) {\n          return function (b) {\n            var result = [];\n            var value = b;\n            while (true) { // eslint-disable-line no-constant-condition\n              var tuple = f(value);\n              result.push(fst(tuple));\n              var maybe = snd(tuple);\n              if (isNothing(maybe)) return result;\n              value = fromJust(maybe);\n            }\n          };\n        };\n      };\n    };\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar unfoldr1 = function (dict) {\n    return dict.unfoldr1;\n};\nvar unfoldable1Maybe = {\n    unfoldr1: function (f) {\n        return function (b) {\n            return new Data_Maybe.Just(Data_Tuple.fst(f(b)));\n        };\n    }\n};\nvar unfoldable1Array = {\n    unfoldr1: /* #__PURE__ */ $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(fromJust)(Data_Tuple.fst)(Data_Tuple.snd)\n};\nvar replicate1 = function (dictUnfoldable1) {\n    var unfoldr11 = unfoldr1(dictUnfoldable1);\n    return function (n) {\n        return function (v) {\n            var step = function (i) {\n                if (i <= 0) {\n                    return new Data_Tuple.Tuple(v, Data_Maybe.Nothing.value);\n                };\n                if (Data_Boolean.otherwise) {\n                    return new Data_Tuple.Tuple(v, new Data_Maybe.Just(i - 1 | 0));\n                };\n                throw new Error(\"Failed pattern match at Data.Unfoldable1 (line 68, column 5 - line 68, column 39): \" + [ i.constructor.name ]);\n            };\n            return unfoldr11(step)(n - 1 | 0);\n        };\n    };\n};\nvar replicate1A = function (dictApply) {\n    return function (dictUnfoldable1) {\n        var replicate11 = replicate1(dictUnfoldable1);\n        return function (dictTraversable1) {\n            var sequence1 = Data_Semigroup_Traversable.sequence1(dictTraversable1)(dictApply);\n            return function (n) {\n                return function (m) {\n                    return sequence1(replicate11(n)(m));\n                };\n            };\n        };\n    };\n};\nvar singleton = function (dictUnfoldable1) {\n    return replicate1(dictUnfoldable1)(1);\n};\nvar range = function (dictUnfoldable1) {\n    var unfoldr11 = unfoldr1(dictUnfoldable1);\n    return function (start) {\n        return function (end) {\n            var go = function (delta) {\n                return function (i) {\n                    var i$prime = i + delta | 0;\n                    return new Data_Tuple.Tuple(i, (function () {\n                        var $25 = i === end;\n                        if ($25) {\n                            return Data_Maybe.Nothing.value;\n                        };\n                        return new Data_Maybe.Just(i$prime);\n                    })());\n                };\n            };\n            var delta = (function () {\n                var $26 = end >= start;\n                if ($26) {\n                    return 1;\n                };\n                return -1 | 0;\n            })();\n            return unfoldr11(go(delta))(start);\n        };\n    };\n};\nvar iterateN = function (dictUnfoldable1) {\n    var unfoldr11 = unfoldr1(dictUnfoldable1);\n    return function (n) {\n        return function (f) {\n            return function (s) {\n                var go = function (v) {\n                    return new Data_Tuple.Tuple(v.value0, (function () {\n                        var $28 = v.value1 > 0;\n                        if ($28) {\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(f(v.value0), v.value1 - 1 | 0));\n                        };\n                        return Data_Maybe.Nothing.value;\n                    })());\n                };\n                return unfoldr11(go)(new Data_Tuple.Tuple(s, n - 1 | 0));\n            };\n        };\n    };\n};\nexport {\n    unfoldr1,\n    replicate1,\n    replicate1A,\n    singleton,\n    range,\n    iterateN,\n    unfoldable1Array,\n    unfoldable1Maybe\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Array_ST from \"../Data.Array.ST/index.js\";\nimport * as Data_Array_ST_Iterator from \"../Data.Array.ST.Iterator/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nvar sequence = /* #__PURE__ */ Data_Traversable.sequence(Data_Traversable.traversableArray);\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar intercalate1 = /* #__PURE__ */ Data_Foldable.intercalate(Data_Foldable.foldableArray);\nvar apply = /* #__PURE__ */ Control_Apply.apply(Data_Maybe.applyMaybe);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Control_Monad_ST_Internal.functorST);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar when = /* #__PURE__ */ Control_Applicative.when(Control_Monad_ST_Internal.applicativeST);\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar foldMap1 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableArray);\nvar fold1 = /* #__PURE__ */ Data_Foldable.fold(Data_Foldable.foldableArray);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar traverse = /* #__PURE__ */ Data_Traversable.traverse(Data_Traversable.traversableArray);\nvar zipWith = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.zipWithImpl);\nvar zipWithA = function (dictApplicative) {\n    var sequence1 = sequence(dictApplicative);\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence1(zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return zipWith(Data_Tuple.Tuple.create);\n})();\nvar updateAtIndices = function (dictFoldable) {\n    var traverse_1 = traverse_(dictFoldable);\n    return function (us) {\n        return function (xs) {\n            return Data_Array_ST.withArray(function (res) {\n                return traverse_1(function (v) {\n                    return Data_Array_ST.poke(v.value0)(v.value1)(res);\n                })(us);\n            })(xs)();\n        };\n    };\n};\nvar updateAt = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn5($foreign[\"_updateAt\"])(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar unsafeIndex = function () {\n    return Data_Function_Uncurried.runFn2($foreign.unsafeIndexImpl);\n};\nvar unsafeIndex1 = /* #__PURE__ */ unsafeIndex();\nvar uncons = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn3($foreign.unconsImpl)(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (x) {\n        return function (xs) {\n            return new Data_Maybe.Just({\n                head: x,\n                tail: xs\n            });\n        };\n    });\n})();\nvar toUnfoldable = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return function (xs) {\n        var len = $foreign.length(xs);\n        var f = function (i) {\n            if (i < len) {\n                return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex1(xs)(i), i + 1 | 0));\n            };\n            if (Data_Boolean.otherwise) {\n                return Data_Maybe.Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Array (line 163, column 3 - line 165, column 26): \" + [ i.constructor.name ]);\n        };\n        return unfoldr(f)(0);\n    };\n};\nvar tail = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn3($foreign.unconsImpl)(Data_Function[\"const\"](Data_Maybe.Nothing.value))(function (v) {\n        return function (xs) {\n            return new Data_Maybe.Just(xs);\n        };\n    });\n})();\nvar sortBy = function (comp) {\n    return Data_Function_Uncurried.runFn3($foreign.sortByImpl)(comp)(function (v) {\n        if (v instanceof Data_Ordering.GT) {\n            return 1;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return 0;\n        };\n        if (v instanceof Data_Ordering.LT) {\n            return -1 | 0;\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 897, column 38 - line 900, column 11): \" + [ v.constructor.name ]);\n    });\n};\nvar sortWith = function (dictOrd) {\n    var comparing = Data_Ord.comparing(dictOrd);\n    return function (f) {\n        return sortBy(comparing(f));\n    };\n};\nvar sortWith1 = /* #__PURE__ */ sortWith(Data_Ord.ordInt);\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar snoc = function (xs) {\n    return function (x) {\n        return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();\n    };\n};\nvar slice = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.sliceImpl);\nvar splitAt = function (v) {\n    return function (v1) {\n        if (v <= 0) {\n            return {\n                before: [  ],\n                after: v1\n            };\n        };\n        return {\n            before: slice(0)(v)(v1),\n            after: slice(v)($foreign.length(v1))(v1)\n        };\n    };\n};\nvar take = function (n) {\n    return function (xs) {\n        var $152 = n < 1;\n        if ($152) {\n            return [  ];\n        };\n        return slice(0)(n)(xs);\n    };\n};\nvar singleton = function (a) {\n    return [ a ];\n};\nvar scanr = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.scanrImpl);\nvar scanl = /* #__PURE__ */ Data_Function_Uncurried.runFn3($foreign.scanlImpl);\nvar replicate = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.replicateImpl);\nvar range = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.rangeImpl);\nvar partition = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.partitionImpl);\nvar $$null = function (xs) {\n    return $foreign.length(xs) === 0;\n};\nvar modifyAtIndices = function (dictFoldable) {\n    var traverse_1 = traverse_(dictFoldable);\n    return function (is) {\n        return function (f) {\n            return function (xs) {\n                return Data_Array_ST.withArray(function (res) {\n                    return traverse_1(function (i) {\n                        return Data_Array_ST.modify(i)(f)(res);\n                    })(is);\n                })(xs)();\n            };\n        };\n    };\n};\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray);\nvar intersperse = function (a) {\n    return function (arr) {\n        var v = $foreign.length(arr);\n        if (v < 2) {\n            return arr;\n        };\n        if (Data_Boolean.otherwise) {\n            return Data_Array_ST.run((function () {\n                var unsafeGetElem = function (idx) {\n                    return unsafeIndex1(arr)(idx);\n                };\n                return function __do() {\n                    var out = Data_Array_ST[\"new\"]();\n                    Data_Array_ST.push(unsafeGetElem(0))(out)();\n                    Control_Monad_ST_Internal[\"for\"](1)(v)(function (idx) {\n                        return function __do() {\n                            Data_Array_ST.push(a)(out)();\n                            return $$void(Data_Array_ST.push(unsafeGetElem(idx))(out))();\n                        };\n                    })();\n                    return out;\n                };\n            })());\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 623, column 21 - line 633, column 17): \" + [ v.constructor.name ]);\n    };\n};\nvar intercalate = function (dictMonoid) {\n    return intercalate1(dictMonoid);\n};\nvar insertAt = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn5($foreign[\"_insertAt\"])(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar init = function (xs) {\n    if ($$null(xs)) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (Data_Boolean.otherwise) {\n        return new Data_Maybe.Just(slice(0)($foreign.length(xs) - 1 | 0)(xs));\n    };\n    throw new Error(\"Failed pattern match at Data.Array (line 351, column 1 - line 351, column 45): \" + [ xs.constructor.name ]);\n};\nvar index = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.indexImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar last = function (xs) {\n    return index(xs)($foreign.length(xs) - 1 | 0);\n};\nvar unsnoc = function (xs) {\n    return apply(map(function (v) {\n        return function (v1) {\n            return {\n                init: v,\n                last: v1\n            };\n        };\n    })(init(xs)))(last(xs));\n};\nvar modifyAt = function (i) {\n    return function (f) {\n        return function (xs) {\n            var go = function (x) {\n                return updateAt(i)(f(x))(xs);\n            };\n            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));\n        };\n    };\n};\nvar span = function (p) {\n    return function (arr) {\n        var go = function ($copy_i) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(i) {\n                var v = index(arr)(i);\n                if (v instanceof Data_Maybe.Just) {\n                    var $156 = p(v.value0);\n                    if ($156) {\n                        $copy_i = i + 1 | 0;\n                        return;\n                    };\n                    $tco_done = true;\n                    return new Data_Maybe.Just(i);\n                };\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 1035, column 5 - line 1037, column 25): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_i);\n            };\n            return $tco_result;\n        };\n        var breakIndex = go(0);\n        if (breakIndex instanceof Data_Maybe.Just && breakIndex.value0 === 0) {\n            return {\n                init: [  ],\n                rest: arr\n            };\n        };\n        if (breakIndex instanceof Data_Maybe.Just) {\n            return {\n                init: slice(0)(breakIndex.value0)(arr),\n                rest: slice(breakIndex.value0)($foreign.length(arr))(arr)\n            };\n        };\n        if (breakIndex instanceof Data_Maybe.Nothing) {\n            return {\n                init: arr,\n                rest: [  ]\n            };\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 1022, column 3 - line 1028, column 30): \" + [ breakIndex.constructor.name ]);\n    };\n};\nvar takeWhile = function (p) {\n    return function (xs) {\n        return (span(p)(xs)).init;\n    };\n};\nvar unzip = function (xs) {\n    return (function __do() {\n        var fsts = Data_Array_ST[\"new\"]();\n        var snds = Data_Array_ST[\"new\"]();\n        var iter = Data_Array_ST_Iterator.iterator(function (v) {\n            return index(xs)(v);\n        })();\n        Data_Array_ST_Iterator.iterate(iter)(function (v) {\n            return function __do() {\n                $$void(Data_Array_ST.push(v.value0)(fsts))();\n                return $$void(Data_Array_ST.push(v.value1)(snds))();\n            };\n        })();\n        var fsts$prime = Data_Array_ST.unsafeFreeze(fsts)();\n        var snds$prime = Data_Array_ST.unsafeFreeze(snds)();\n        return new Data_Tuple.Tuple(fsts$prime, snds$prime);\n    })();\n};\nvar head = function (xs) {\n    return index(xs)(0);\n};\nvar nubBy = function (comp) {\n    return function (xs) {\n        var indexedAndSorted = sortBy(function (x) {\n            return function (y) {\n                return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));\n            };\n        })(mapWithIndex(Data_Tuple.Tuple.create)(xs));\n        var v = head(indexedAndSorted);\n        if (v instanceof Data_Maybe.Nothing) {\n            return [  ];\n        };\n        if (v instanceof Data_Maybe.Just) {\n            return map1(Data_Tuple.snd)(sortWith1(Data_Tuple.fst)((function __do() {\n                var result = Data_Array_ST.unsafeThaw(singleton(v.value0))();\n                Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v1) {\n                    return function __do() {\n                        var lst = map2((function () {\n                            var $183 = function ($185) {\n                                return fromJust(last($185));\n                            };\n                            return function ($184) {\n                                return Data_Tuple.snd($183($184));\n                            };\n                        })())(Data_Array_ST.unsafeFreeze(result))();\n                        return when(notEq(comp(lst)(v1.value1))(Data_Ordering.EQ.value))($$void(Data_Array_ST.push(v1)(result)))();\n                    };\n                })();\n                return Data_Array_ST.unsafeFreeze(result)();\n            })()));\n        };\n        throw new Error(\"Failed pattern match at Data.Array (line 1115, column 17 - line 1123, column 28): \" + [ v.constructor.name ]);\n    };\n};\nvar nub = function (dictOrd) {\n    return nubBy(Data_Ord.compare(dictOrd));\n};\nvar groupBy = function (op) {\n    return function (xs) {\n        return (function __do() {\n            var result = Data_Array_ST[\"new\"]();\n            var iter = Data_Array_ST_Iterator.iterator(function (v) {\n                return index(xs)(v);\n            })();\n            Data_Array_ST_Iterator.iterate(iter)(function (x) {\n                return $$void(function __do() {\n                    var sub1 = Data_Array_ST[\"new\"]();\n                    Data_Array_ST.push(x)(sub1)();\n                    Data_Array_ST_Iterator.pushWhile(op(x))(iter)(sub1)();\n                    var grp = Data_Array_ST.unsafeFreeze(sub1)();\n                    return Data_Array_ST.push(grp)(result)();\n                });\n            })();\n            return Data_Array_ST.unsafeFreeze(result)();\n        })();\n    };\n};\nvar groupAllBy = function (cmp) {\n    var $186 = groupBy(function (x) {\n        return function (y) {\n            return eq1(cmp(x)(y))(Data_Ordering.EQ.value);\n        };\n    });\n    var $187 = sortBy(cmp);\n    return function ($188) {\n        return $186($187($188));\n    };\n};\nvar groupAll = function (dictOrd) {\n    return groupAllBy(Data_Ord.compare(dictOrd));\n};\nvar group = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (xs) {\n        return groupBy(eq2)(xs);\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    return Data_Function_Uncurried.runFn2($foreign.fromFoldableImpl)(Data_Foldable.foldr(dictFoldable));\n};\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableArray);\nvar transpose = function (xs) {\n    var buildNext = function (idx) {\n        return Data_Function.flip(foldl)(Data_Maybe.Nothing.value)(function (acc) {\n            return function (nextArr) {\n                return Data_Maybe.maybe(acc)(function (el) {\n                    return new Data_Maybe.Just(Data_Maybe.maybe([ el ])(Data_Function.flip(snoc)(el))(acc));\n                })(index(nextArr)(idx));\n            };\n        })(xs);\n    };\n    var go = function ($copy_idx) {\n        return function ($copy_allArrays) {\n            var $tco_var_idx = $copy_idx;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(idx, allArrays) {\n                var v = buildNext(idx);\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return allArrays;\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    $tco_var_idx = idx + 1 | 0;\n                    $copy_allArrays = snoc(allArrays)(v.value0);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 837, column 22 - line 839, column 52): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_idx, $copy_allArrays);\n            };\n            return $tco_result;\n        };\n    };\n    return go(0)([  ]);\n};\nvar foldRecM = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n    var bind1 = Control_Bind.bind(Monad0.Bind1());\n    var tailRecM2 = Control_Monad_Rec_Class.tailRecM2(dictMonadRec);\n    return function (f) {\n        return function (b) {\n            return function (array) {\n                var go = function (res) {\n                    return function (i) {\n                        if (i >= $foreign.length(array)) {\n                            return pure1(new Control_Monad_Rec_Class.Done(res));\n                        };\n                        if (Data_Boolean.otherwise) {\n                            return bind1(f(res)(unsafeIndex1(array)(i)))(function (res$prime) {\n                                return pure1(new Control_Monad_Rec_Class.Loop({\n                                    a: res$prime,\n                                    b: i + 1 | 0\n                                }));\n                            });\n                        };\n                        throw new Error(\"Failed pattern match at Data.Array (line 1349, column 3 - line 1353, column 42): \" + [ res.constructor.name, i.constructor.name ]);\n                    };\n                };\n                return tailRecM2(go)(b)(0);\n            };\n        };\n    };\n};\nvar foldMap = function (dictMonoid) {\n    return foldMap1(dictMonoid);\n};\nvar foldM = function (dictMonad) {\n    var pure1 = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (f) {\n        return function (b) {\n            return Data_Function_Uncurried.runFn3($foreign.unconsImpl)(function (v) {\n                return pure1(b);\n            })(function (a) {\n                return function (as) {\n                    return bind1(f(b)(a))(function (b$prime) {\n                        return foldM(dictMonad)(f)(b$prime)(as);\n                    });\n                };\n            });\n        };\n    };\n};\nvar fold = function (dictMonoid) {\n    return fold1(dictMonoid);\n};\nvar findMap = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.findMapImpl)(Data_Maybe.Nothing.value)(Data_Maybe.isJust);\n})();\nvar findLastIndex = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.findLastIndexImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar insertBy = function (cmp) {\n    return function (x) {\n        return function (ys) {\n            var i = Data_Maybe.maybe(0)(function (v) {\n                return v + 1 | 0;\n            })(findLastIndex(function (y) {\n                return eq1(cmp(x)(y))(Data_Ordering.GT.value);\n            })(ys));\n            return fromJust(insertAt(i)(x)(ys));\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    return insertBy(Data_Ord.compare(dictOrd));\n};\nvar findIndex = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign.findIndexImpl)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar find = function (f) {\n    return function (xs) {\n        return map(unsafeIndex1(xs))(findIndex(f)(xs));\n    };\n};\nvar filter = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.filterImpl);\nvar intersectBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return filter(function (x) {\n                return Data_Maybe.isJust(findIndex(eq2(x))(ys));\n            })(xs);\n        };\n    };\n};\nvar intersect = function (dictEq) {\n    return intersectBy(Data_Eq.eq(dictEq));\n};\nvar elemLastIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar notElem = function (dictEq) {\n    var elemIndex1 = elemIndex(dictEq);\n    return function (a) {\n        return function (arr) {\n            return Data_Maybe.isNothing(elemIndex1(a)(arr));\n        };\n    };\n};\nvar elem = function (dictEq) {\n    var elemIndex1 = elemIndex(dictEq);\n    return function (a) {\n        return function (arr) {\n            return Data_Maybe.isJust(elemIndex1(a)(arr));\n        };\n    };\n};\nvar dropWhile = function (p) {\n    return function (xs) {\n        return (span(p)(xs)).rest;\n    };\n};\nvar dropEnd = function (n) {\n    return function (xs) {\n        return take($foreign.length(xs) - n | 0)(xs);\n    };\n};\nvar drop = function (n) {\n    return function (xs) {\n        var $173 = n < 1;\n        if ($173) {\n            return xs;\n        };\n        return slice(n)($foreign.length(xs))(xs);\n    };\n};\nvar takeEnd = function (n) {\n    return function (xs) {\n        return drop($foreign.length(xs) - n | 0)(xs);\n    };\n};\nvar deleteAt = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign[\"_deleteAt\"])(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar deleteBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2.length === 0) {\n                return [  ];\n            };\n            return Data_Maybe.maybe(v2)(function (i) {\n                return fromJust(deleteAt(i)(v2));\n            })(findIndex(v(v1))(v2));\n        };\n    };\n};\nvar $$delete = function (dictEq) {\n    return deleteBy(Data_Eq.eq(dictEq));\n};\nvar difference = function (dictEq) {\n    return foldr($$delete(dictEq));\n};\nvar cons = function (x) {\n    return function (xs) {\n        return append([ x ])(xs);\n    };\n};\nvar some = function (dictAlternative) {\n    var apply1 = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n    var map3 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n    return function (dictLazy) {\n        var defer = Control_Lazy.defer(dictLazy);\n        return function (v) {\n            return apply1(map3(cons)(v))(defer(function (v1) {\n                return many(dictAlternative)(dictLazy)(v);\n            }));\n        };\n    };\n};\nvar many = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure1 = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (dictLazy) {\n        return function (v) {\n            return alt(some(dictAlternative)(dictLazy)(v))(pure1([  ]));\n        };\n    };\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ Control_Bind.bind(Control_Bind.bindArray));\nvar mapMaybe = function (f) {\n    return concatMap((function () {\n        var $189 = Data_Maybe.maybe([  ])(singleton);\n        return function ($190) {\n            return $189(f($190));\n        };\n    })());\n};\nvar filterA = function (dictApplicative) {\n    var traverse1 = traverse(dictApplicative);\n    var map3 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n    return function (p) {\n        var $191 = map3(mapMaybe(function (v) {\n            if (v.value1) {\n                return new Data_Maybe.Just(v.value0);\n            };\n            return Data_Maybe.Nothing.value;\n        }));\n        var $192 = traverse1(function (x) {\n            return map3(Data_Tuple.Tuple.create(x))(p(x));\n        });\n        return function ($193) {\n            return $191($192($193));\n        };\n    };\n};\nvar catMaybes = /* #__PURE__ */ mapMaybe(/* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn));\nvar any = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.anyImpl);\nvar nubByEq = function (eq2) {\n    return function (xs) {\n        return (function __do() {\n            var arr = Data_Array_ST[\"new\"]();\n            Control_Monad_ST_Internal.foreach(xs)(function (x) {\n                return function __do() {\n                    var e = map2((function () {\n                        var $194 = any(function (v) {\n                            return eq2(v)(x);\n                        });\n                        return function ($195) {\n                            return !$194($195);\n                        };\n                    })())(Data_Array_ST.unsafeFreeze(arr))();\n                    return when(e)($$void(Data_Array_ST.push(x)(arr)))();\n                };\n            })();\n            return Data_Array_ST.unsafeFreeze(arr)();\n        })();\n    };\n};\nvar nubEq = function (dictEq) {\n    return nubByEq(Data_Eq.eq(dictEq));\n};\nvar unionBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return append(xs)(foldl(Data_Function.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));\n        };\n    };\n};\nvar union = function (dictEq) {\n    return unionBy(Data_Eq.eq(dictEq));\n};\nvar alterAt = function (i) {\n    return function (f) {\n        return function (xs) {\n            var go = function (x) {\n                var v = f(x);\n                if (v instanceof Data_Maybe.Nothing) {\n                    return deleteAt(i)(xs);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return updateAt(i)(v.value0)(xs);\n                };\n                throw new Error(\"Failed pattern match at Data.Array (line 601, column 10 - line 603, column 32): \" + [ v.constructor.name ]);\n            };\n            return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));\n        };\n    };\n};\nvar all = /* #__PURE__ */ Data_Function_Uncurried.runFn2($foreign.allImpl);\nexport {\n    length,\n    reverse,\n    concat\n} from \"./foreign.js\";\nexport {\n    fromFoldable,\n    toUnfoldable,\n    singleton,\n    range,\n    replicate,\n    some,\n    many,\n    $$null as null,\n    cons,\n    snoc,\n    insert,\n    insertBy,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elem,\n    notElem,\n    elemIndex,\n    elemLastIndex,\n    find,\n    findMap,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    deleteAt,\n    updateAt,\n    updateAtIndices,\n    modifyAt,\n    modifyAtIndices,\n    alterAt,\n    intersperse,\n    concatMap,\n    filter,\n    partition,\n    splitAt,\n    filterA,\n    mapMaybe,\n    catMaybes,\n    mapWithIndex,\n    foldl,\n    foldr,\n    foldMap,\n    fold,\n    intercalate,\n    transpose,\n    scanl,\n    scanr,\n    sort,\n    sortBy,\n    sortWith,\n    slice,\n    take,\n    takeEnd,\n    takeWhile,\n    drop,\n    dropEnd,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    nub,\n    nubEq,\n    nubBy,\n    nubByEq,\n    union,\n    unionBy,\n    $$delete as delete,\n    deleteBy,\n    difference,\n    intersect,\n    intersectBy,\n    zipWith,\n    zipWithA,\n    zip,\n    unzip,\n    any,\n    all,\n    foldM,\n    foldRecM,\n    unsafeIndex\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Endo from \"../Data.Monoid.Endo/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableMultiplicative);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableMultiplicative);\nvar foldMap = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableMultiplicative);\nvar foldr1 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableMaybe);\nvar foldl1 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableMaybe);\nvar foldMap1 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableMaybe);\nvar foldr2 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableLast);\nvar foldl2 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableLast);\nvar foldMap2 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableLast);\nvar foldr3 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableFirst);\nvar foldl3 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableFirst);\nvar foldMap3 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableFirst);\nvar foldr4 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableDual);\nvar foldl4 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableDual);\nvar foldMap4 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableDual);\nvar foldr5 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableDisj);\nvar foldl5 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableDisj);\nvar foldMap5 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableDisj);\nvar foldr6 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableConj);\nvar foldl6 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableConj);\nvar foldMap6 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableConj);\nvar foldr7 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableAdditive);\nvar foldl7 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableAdditive);\nvar foldMap7 = /* #__PURE__ */ Data_Foldable.foldMap(Data_Foldable.foldableAdditive);\nvar foldr8 = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray);\nvar foldl8 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableArray);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar monoidEndo = /* #__PURE__ */ Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn);\nvar monoidDual = /* #__PURE__ */ Data_Monoid_Dual.monoidDual(monoidEndo);\nvar foldrWithIndex = function (dict) {\n    return dict.foldrWithIndex;\n};\nvar traverseWithIndex_ = function (dictApplicative) {\n    var applySecond = Control_Apply.applySecond(dictApplicative.Apply0());\n    var pure = Control_Applicative.pure(dictApplicative);\n    return function (dictFoldableWithIndex) {\n        var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);\n        return function (f) {\n            return foldrWithIndex1(function (i) {\n                var $289 = f(i);\n                return function ($290) {\n                    return applySecond($289($290));\n                };\n            })(pure(Data_Unit.unit));\n        };\n    };\n};\nvar forWithIndex_ = function (dictApplicative) {\n    var traverseWithIndex_1 = traverseWithIndex_(dictApplicative);\n    return function (dictFoldableWithIndex) {\n        return Data_Function.flip(traverseWithIndex_1(dictFoldableWithIndex));\n    };\n};\nvar foldrDefault = function (dictFoldableWithIndex) {\n    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);\n    return function (f) {\n        return foldrWithIndex1(Data_Function[\"const\"](f));\n    };\n};\nvar foldlWithIndex = function (dict) {\n    return dict.foldlWithIndex;\n};\nvar foldlDefault = function (dictFoldableWithIndex) {\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    return function (f) {\n        return foldlWithIndex1(Data_Function[\"const\"](f));\n    };\n};\nvar foldableWithIndexTuple = {\n    foldrWithIndex: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(Data_Unit.unit)(v.value1)(z);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(Data_Unit.unit)(z)(v.value1);\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(Data_Unit.unit)(v.value1);\n            };\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableTuple;\n    }\n};\nvar foldableWithIndexMultiplicative = {\n    foldrWithIndex: function (f) {\n        return foldr(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableMultiplicative;\n    }\n};\nvar foldableWithIndexMaybe = {\n    foldrWithIndex: function (f) {\n        return foldr1(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl1(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap1(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableMaybe;\n    }\n};\nvar foldableWithIndexLast = {\n    foldrWithIndex: function (f) {\n        return foldr2(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl2(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap2(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableLast;\n    }\n};\nvar foldableWithIndexIdentity = {\n    foldrWithIndex: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(Data_Unit.unit)(v)(z);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(Data_Unit.unit)(z)(v);\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(Data_Unit.unit)(v);\n            };\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableIdentity;\n    }\n};\nvar foldableWithIndexFirst = {\n    foldrWithIndex: function (f) {\n        return foldr3(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl3(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap3(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableFirst;\n    }\n};\nvar foldableWithIndexEither = {\n    foldrWithIndex: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(Data_Unit.unit)(v2.value0)(v1);\n                };\n                throw new Error(\"Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldlWithIndex: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return v1;\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return v(Data_Unit.unit)(v1)(v2.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return mempty;\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return v(Data_Unit.unit)(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.FoldableWithIndex (line 164, column 1 - line 170, column 42): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableEither;\n    }\n};\nvar foldableWithIndexDual = {\n    foldrWithIndex: function (f) {\n        return foldr4(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl4(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap4(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableDual;\n    }\n};\nvar foldableWithIndexDisj = {\n    foldrWithIndex: function (f) {\n        return foldr5(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl5(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap5(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableDisj;\n    }\n};\nvar foldableWithIndexConst = {\n    foldrWithIndex: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldlWithIndex: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (v) {\n            return function (v1) {\n                return mempty;\n            };\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableConst;\n    }\n};\nvar foldableWithIndexConj = {\n    foldrWithIndex: function (f) {\n        return foldr6(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl6(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap6(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableConj;\n    }\n};\nvar foldableWithIndexAdditive = {\n    foldrWithIndex: function (f) {\n        return foldr7(f(Data_Unit.unit));\n    },\n    foldlWithIndex: function (f) {\n        return foldl7(f(Data_Unit.unit));\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMap8 = foldMap7(dictMonoid);\n        return function (f) {\n            return foldMap8(f(Data_Unit.unit));\n        };\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableAdditive;\n    }\n};\nvar foldWithIndexM = function (dictFoldableWithIndex) {\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    return function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (f) {\n            return function (a0) {\n                return foldlWithIndex1(function (i) {\n                    return function (ma) {\n                        return function (b) {\n                            return bind(ma)(Data_Function.flip(f(i))(b));\n                        };\n                    };\n                })(pure(a0));\n            };\n        };\n    };\n};\nvar foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {\n    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldrWithIndex1(function (i) {\n                return function (x) {\n                    return function (acc) {\n                        return append(f(i)(x))(acc);\n                    };\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldableWithIndexArray = {\n    foldrWithIndex: function (f) {\n        return function (z) {\n            var $291 = foldr8(function (v) {\n                return function (y) {\n                    return f(v.value0)(v.value1)(y);\n                };\n            })(z);\n            var $292 = mapWithIndex(Data_Tuple.Tuple.create);\n            return function ($293) {\n                return $291($292($293));\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (z) {\n            var $294 = foldl8(function (y) {\n                return function (v) {\n                    return f(v.value0)(y)(v.value1);\n                };\n            })(z);\n            var $295 = mapWithIndex(Data_Tuple.Tuple.create);\n            return function ($296) {\n                return $294($295($296));\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);\n    },\n    Foldable0: function () {\n        return Data_Foldable.foldableArray;\n    }\n};\nvar foldMapWithIndexDefaultL = function (dictFoldableWithIndex) {\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    return function (dictMonoid) {\n        var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return foldlWithIndex1(function (i) {\n                return function (acc) {\n                    return function (x) {\n                        return append(acc)(f(i)(x));\n                    };\n                };\n            })(mempty);\n        };\n    };\n};\nvar foldMapWithIndex = function (dict) {\n    return dict.foldMapWithIndex;\n};\nvar foldableWithIndexApp = function (dictFoldableWithIndex) {\n    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);\n    var foldableApp = Data_Foldable.foldableApp(dictFoldableWithIndex.Foldable0());\n    return {\n        foldrWithIndex: function (f) {\n            return function (z) {\n                return function (v) {\n                    return foldrWithIndex1(f)(z)(v);\n                };\n            };\n        },\n        foldlWithIndex: function (f) {\n            return function (z) {\n                return function (v) {\n                    return foldlWithIndex1(f)(z)(v);\n                };\n            };\n        },\n        foldMapWithIndex: function (dictMonoid) {\n            var foldMapWithIndex2 = foldMapWithIndex1(dictMonoid);\n            return function (f) {\n                return function (v) {\n                    return foldMapWithIndex2(f)(v);\n                };\n            };\n        },\n        Foldable0: function () {\n            return foldableApp;\n        }\n    };\n};\nvar foldableWithIndexCompose = function (dictFoldableWithIndex) {\n    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);\n    var foldableCompose = Data_Foldable.foldableCompose(dictFoldableWithIndex.Foldable0());\n    return function (dictFoldableWithIndex1) {\n        var foldrWithIndex2 = foldrWithIndex(dictFoldableWithIndex1);\n        var foldlWithIndex2 = foldlWithIndex(dictFoldableWithIndex1);\n        var foldMapWithIndex2 = foldMapWithIndex(dictFoldableWithIndex1);\n        var foldableCompose1 = foldableCompose(dictFoldableWithIndex1.Foldable0());\n        return {\n            foldrWithIndex: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldrWithIndex1(function (a) {\n                            return Data_Function.flip(foldrWithIndex2(Data_Tuple.curry(f)(a)));\n                        })(i)(v);\n                    };\n                };\n            },\n            foldlWithIndex: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldlWithIndex1((function () {\n                            var $297 = Data_Tuple.curry(f);\n                            return function ($298) {\n                                return foldlWithIndex2($297($298));\n                            };\n                        })())(i)(v);\n                    };\n                };\n            },\n            foldMapWithIndex: function (dictMonoid) {\n                var foldMapWithIndex3 = foldMapWithIndex1(dictMonoid);\n                var foldMapWithIndex4 = foldMapWithIndex2(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return foldMapWithIndex3((function () {\n                            var $299 = Data_Tuple.curry(f);\n                            return function ($300) {\n                                return foldMapWithIndex4($299($300));\n                            };\n                        })())(v);\n                    };\n                };\n            },\n            Foldable0: function () {\n                return foldableCompose1;\n            }\n        };\n    };\n};\nvar foldableWithIndexCoproduct = function (dictFoldableWithIndex) {\n    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);\n    var foldableCoproduct = Data_Foldable.foldableCoproduct(dictFoldableWithIndex.Foldable0());\n    return function (dictFoldableWithIndex1) {\n        var foldrWithIndex2 = foldrWithIndex(dictFoldableWithIndex1);\n        var foldlWithIndex2 = foldlWithIndex(dictFoldableWithIndex1);\n        var foldMapWithIndex2 = foldMapWithIndex(dictFoldableWithIndex1);\n        var foldableCoproduct1 = foldableCoproduct(dictFoldableWithIndex1.Foldable0());\n        return {\n            foldrWithIndex: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldrWithIndex1(function ($301) {\n                        return f(Data_Either.Left.create($301));\n                    })(z))(foldrWithIndex2(function ($302) {\n                        return f(Data_Either.Right.create($302));\n                    })(z));\n                };\n            },\n            foldlWithIndex: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldlWithIndex1(function ($303) {\n                        return f(Data_Either.Left.create($303));\n                    })(z))(foldlWithIndex2(function ($304) {\n                        return f(Data_Either.Right.create($304));\n                    })(z));\n                };\n            },\n            foldMapWithIndex: function (dictMonoid) {\n                var foldMapWithIndex3 = foldMapWithIndex1(dictMonoid);\n                var foldMapWithIndex4 = foldMapWithIndex2(dictMonoid);\n                return function (f) {\n                    return Data_Functor_Coproduct.coproduct(foldMapWithIndex3(function ($305) {\n                        return f(Data_Either.Left.create($305));\n                    }))(foldMapWithIndex4(function ($306) {\n                        return f(Data_Either.Right.create($306));\n                    }));\n                };\n            },\n            Foldable0: function () {\n                return foldableCoproduct1;\n            }\n        };\n    };\n};\nvar foldableWithIndexProduct = function (dictFoldableWithIndex) {\n    var foldrWithIndex1 = foldrWithIndex(dictFoldableWithIndex);\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);\n    var foldableProduct = Data_Foldable.foldableProduct(dictFoldableWithIndex.Foldable0());\n    return function (dictFoldableWithIndex1) {\n        var foldrWithIndex2 = foldrWithIndex(dictFoldableWithIndex1);\n        var foldlWithIndex2 = foldlWithIndex(dictFoldableWithIndex1);\n        var foldMapWithIndex2 = foldMapWithIndex(dictFoldableWithIndex1);\n        var foldableProduct1 = foldableProduct(dictFoldableWithIndex1.Foldable0());\n        return {\n            foldrWithIndex: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldrWithIndex1(function ($307) {\n                            return f(Data_Either.Left.create($307));\n                        })(foldrWithIndex2(function ($308) {\n                            return f(Data_Either.Right.create($308));\n                        })(z)(v.value1))(v.value0);\n                    };\n                };\n            },\n            foldlWithIndex: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldlWithIndex2(function ($309) {\n                            return f(Data_Either.Right.create($309));\n                        })(foldlWithIndex1(function ($310) {\n                            return f(Data_Either.Left.create($310));\n                        })(z)(v.value0))(v.value1);\n                    };\n                };\n            },\n            foldMapWithIndex: function (dictMonoid) {\n                var append = Data_Semigroup.append(dictMonoid.Semigroup0());\n                var foldMapWithIndex3 = foldMapWithIndex1(dictMonoid);\n                var foldMapWithIndex4 = foldMapWithIndex2(dictMonoid);\n                return function (f) {\n                    return function (v) {\n                        return append(foldMapWithIndex3(function ($311) {\n                            return f(Data_Either.Left.create($311));\n                        })(v.value0))(foldMapWithIndex4(function ($312) {\n                            return f(Data_Either.Right.create($312));\n                        })(v.value1));\n                    };\n                };\n            },\n            Foldable0: function () {\n                return foldableProduct1;\n            }\n        };\n    };\n};\nvar foldlWithIndexDefault = function (dictFoldableWithIndex) {\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex)(monoidDual);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(unwrap(foldMapWithIndex1(function (i) {\n                    var $313 = Data_Function.flip(c(i));\n                    return function ($314) {\n                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($313($314)));\n                    };\n                })(xs)))(u);\n            };\n        };\n    };\n};\nvar foldrWithIndexDefault = function (dictFoldableWithIndex) {\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex)(monoidEndo);\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return unwrap(foldMapWithIndex1(function (i) {\n                    var $315 = c(i);\n                    return function ($316) {\n                        return Data_Monoid_Endo.Endo($315($316));\n                    };\n                })(xs))(u);\n            };\n        };\n    };\n};\nvar surroundMapWithIndex = function (dictFoldableWithIndex) {\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex)(monoidEndo);\n    return function (dictSemigroup) {\n        var append = Data_Semigroup.append(dictSemigroup);\n        return function (d) {\n            return function (t) {\n                return function (f) {\n                    var joined = function (i) {\n                        return function (a) {\n                            return function (m) {\n                                return append(d)(append(t(i)(a))(m));\n                            };\n                        };\n                    };\n                    return unwrap(foldMapWithIndex1(joined)(f))(d);\n                };\n            };\n        };\n    };\n};\nvar foldMapDefault = function (dictFoldableWithIndex) {\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);\n    return function (dictMonoid) {\n        var foldMapWithIndex2 = foldMapWithIndex1(dictMonoid);\n        return function (f) {\n            return foldMapWithIndex2(Data_Function[\"const\"](f));\n        };\n    };\n};\nvar findWithIndex = function (dictFoldableWithIndex) {\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                return function (v2) {\n                    if (v1 instanceof Data_Maybe.Nothing && p(v)(v2)) {\n                        return new Data_Maybe.Just({\n                            index: v,\n                            value: v2\n                        });\n                    };\n                    return v1;\n                };\n            };\n        };\n        return foldlWithIndex1(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar findMapWithIndex = function (dictFoldableWithIndex) {\n    var foldlWithIndex1 = foldlWithIndex(dictFoldableWithIndex);\n    return function (f) {\n        var go = function (v) {\n            return function (v1) {\n                return function (v2) {\n                    if (v1 instanceof Data_Maybe.Nothing) {\n                        return f(v)(v2);\n                    };\n                    return v1;\n                };\n            };\n        };\n        return foldlWithIndex1(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar anyWithIndex = function (dictFoldableWithIndex) {\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);\n    return function (dictHeytingAlgebra) {\n        var foldMapWithIndex2 = foldMapWithIndex1(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra));\n        return function (t) {\n            var $317 = foldMapWithIndex2(function (i) {\n                var $319 = t(i);\n                return function ($320) {\n                    return Data_Monoid_Disj.Disj($319($320));\n                };\n            });\n            return function ($318) {\n                return unwrap($317($318));\n            };\n        };\n    };\n};\nvar allWithIndex = function (dictFoldableWithIndex) {\n    var foldMapWithIndex1 = foldMapWithIndex(dictFoldableWithIndex);\n    return function (dictHeytingAlgebra) {\n        var foldMapWithIndex2 = foldMapWithIndex1(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra));\n        return function (t) {\n            var $321 = foldMapWithIndex2(function (i) {\n                var $323 = t(i);\n                return function ($324) {\n                    return Data_Monoid_Conj.Conj($323($324));\n                };\n            });\n            return function ($322) {\n                return unwrap($321($322));\n            };\n        };\n    };\n};\nexport {\n    foldrWithIndex,\n    foldlWithIndex,\n    foldMapWithIndex,\n    foldrWithIndexDefault,\n    foldlWithIndexDefault,\n    foldMapWithIndexDefaultR,\n    foldMapWithIndexDefaultL,\n    foldWithIndexM,\n    traverseWithIndex_,\n    forWithIndex_,\n    surroundMapWithIndex,\n    allWithIndex,\n    anyWithIndex,\n    findWithIndex,\n    findMapWithIndex,\n    foldrDefault,\n    foldlDefault,\n    foldMapDefault,\n    foldableWithIndexArray,\n    foldableWithIndexMaybe,\n    foldableWithIndexFirst,\n    foldableWithIndexLast,\n    foldableWithIndexAdditive,\n    foldableWithIndexDual,\n    foldableWithIndexDisj,\n    foldableWithIndexConj,\n    foldableWithIndexMultiplicative,\n    foldableWithIndexEither,\n    foldableWithIndexTuple,\n    foldableWithIndexIdentity,\n    foldableWithIndexConst,\n    foldableWithIndexProduct,\n    foldableWithIndexCoproduct,\n    foldableWithIndexCompose,\n    foldableWithIndexApp\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semigroup_Traversable from \"../Data.Semigroup.Traversable/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar add = /* #__PURE__ */ Data_Semiring.add(Data_Semiring.semiringInt);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Nil = /* #__PURE__ */ (function () {\n    function Nil() {\n\n    };\n    Nil.value = new Nil();\n    return Nil;\n})();\nvar Cons = /* #__PURE__ */ (function () {\n    function Cons(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Cons.create = function (value0) {\n        return function (value1) {\n            return new Cons(value0, value1);\n        };\n    };\n    return Cons;\n})();\nvar NonEmptyList = function (x) {\n    return x;\n};\nvar toList = function (v) {\n    return new Cons(v.value0, v.value1);\n};\nvar newtypeNonEmptyList = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar nelCons = function (a) {\n    return function (v) {\n        return new Data_NonEmpty.NonEmpty(a, new Cons(v.value0, v.value1));\n    };\n};\nvar listMap = function (f) {\n    var chunkedRevMap = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Cons)) {\n                    $tco_var_v = new Cons(v1, v);\n                    $copy_v1 = v1.value1.value1.value1;\n                    return;\n                };\n                var unrolledMap = function (v2) {\n                    if (v2 instanceof Cons && (v2.value1 instanceof Cons && v2.value1.value1 instanceof Nil)) {\n                        return new Cons(f(v2.value0), new Cons(f(v2.value1.value0), Nil.value));\n                    };\n                    if (v2 instanceof Cons && v2.value1 instanceof Nil) {\n                        return new Cons(f(v2.value0), Nil.value);\n                    };\n                    return Nil.value;\n                };\n                var reverseUnrolledMap = function ($copy_v2) {\n                    return function ($copy_v3) {\n                        var $tco_var_v2 = $copy_v2;\n                        var $tco_done1 = false;\n                        var $tco_result;\n                        function $tco_loop(v2, v3) {\n                            if (v2 instanceof Cons && (v2.value0 instanceof Cons && (v2.value0.value1 instanceof Cons && v2.value0.value1.value1 instanceof Cons))) {\n                                $tco_var_v2 = v2.value1;\n                                $copy_v3 = new Cons(f(v2.value0.value0), new Cons(f(v2.value0.value1.value0), new Cons(f(v2.value0.value1.value1.value0), v3)));\n                                return;\n                            };\n                            $tco_done1 = true;\n                            return v3;\n                        };\n                        while (!$tco_done1) {\n                            $tco_result = $tco_loop($tco_var_v2, $copy_v3);\n                        };\n                        return $tco_result;\n                    };\n                };\n                $tco_done = true;\n                return reverseUnrolledMap(v)(unrolledMap(v1));\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return chunkedRevMap(Nil.value);\n};\nvar functorList = {\n    map: listMap\n};\nvar map = /* #__PURE__ */ Data_Functor.map(functorList);\nvar functorNonEmptyList = /* #__PURE__ */ Data_NonEmpty.functorNonEmpty(functorList);\nvar foldableList = {\n    foldr: function (f) {\n        return function (b) {\n            var rev = (function () {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1) {\n                            if (v1 instanceof Nil) {\n                                $tco_done = true;\n                                return v;\n                            };\n                            if (v1 instanceof Cons) {\n                                $tco_var_v = new Cons(v1.value0, v);\n                                $copy_v1 = v1.value1;\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): \" + [ v.constructor.name, v1.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go(Nil.value);\n            })();\n            var $284 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);\n            return function ($285) {\n                return $284(rev($285));\n            };\n        };\n    },\n    foldl: function (f) {\n        var go = function ($copy_b) {\n            return function ($copy_v) {\n                var $tco_var_b = $copy_b;\n                var $tco_done1 = false;\n                var $tco_result;\n                function $tco_loop(b, v) {\n                    if (v instanceof Nil) {\n                        $tco_done1 = true;\n                        return b;\n                    };\n                    if (v instanceof Cons) {\n                        $tco_var_b = f(b)(v.value0);\n                        $copy_v = v.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done1) {\n                    $tco_result = $tco_loop($tco_var_b, $copy_v);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    },\n    foldMap: function (dictMonoid) {\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return Data_Foldable.foldl(foldableList)(function (acc) {\n                var $286 = append2(acc);\n                return function ($287) {\n                    return $286(f($287));\n                };\n            })(mempty);\n        };\n    }\n};\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(foldableList);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(foldableList);\nvar intercalate = /* #__PURE__ */ Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString);\nvar foldableNonEmptyList = /* #__PURE__ */ Data_NonEmpty.foldableNonEmpty(foldableList);\nvar foldableWithIndexList = {\n    foldrWithIndex: function (f) {\n        return function (b) {\n            return function (xs) {\n                var v = (function () {\n                    var rev = foldl(function (v1) {\n                        return function (a) {\n                            return new Data_Tuple.Tuple(v1.value0 + 1 | 0, new Cons(a, v1.value1));\n                        };\n                    });\n                    return rev(new Data_Tuple.Tuple(0, Nil.value))(xs);\n                })();\n                return Data_Tuple.snd(foldl(function (v1) {\n                    return function (a) {\n                        return new Data_Tuple.Tuple(v1.value0 - 1 | 0, f(v1.value0 - 1 | 0)(a)(v1.value1));\n                    };\n                })(new Data_Tuple.Tuple(v.value0, b))(v.value1));\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (acc) {\n            var $288 = foldl(function (v) {\n                return function (a) {\n                    return new Data_Tuple.Tuple(v.value0 + 1 | 0, f(v.value0)(v.value1)(a));\n                };\n            })(new Data_Tuple.Tuple(0, acc));\n            return function ($289) {\n                return Data_Tuple.snd($288($289));\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        return function (f) {\n            return Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList)(function (i) {\n                return function (acc) {\n                    var $290 = append2(acc);\n                    var $291 = f(i);\n                    return function ($292) {\n                        return $290($291($292));\n                    };\n                };\n            })(mempty);\n        };\n    },\n    Foldable0: function () {\n        return foldableList;\n    }\n};\nvar foldableWithIndexNonEmpty = /* #__PURE__ */ Data_NonEmpty.foldableWithIndexNonEmpty(foldableWithIndexList);\nvar foldMapWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldMapWithIndex(foldableWithIndexNonEmpty);\nvar foldlWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexNonEmpty);\nvar foldrWithIndex = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexNonEmpty);\nvar foldrWithIndex1 = /* #__PURE__ */ Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexList);\nvar foldlWithIndex1 = /* #__PURE__ */ Data_FoldableWithIndex.foldlWithIndex(foldableWithIndexList);\nvar foldableWithIndexNonEmptyList = {\n    foldMapWithIndex: function (dictMonoid) {\n        var foldMapWithIndex1 = foldMapWithIndex(dictMonoid);\n        return function (f) {\n            return function (v) {\n                return foldMapWithIndex1((function () {\n                    var $293 = Data_Maybe.maybe(0)(add(1));\n                    return function ($294) {\n                        return f($293($294));\n                    };\n                })())(v);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (b) {\n            return function (v) {\n                return foldlWithIndex((function () {\n                    var $295 = Data_Maybe.maybe(0)(add(1));\n                    return function ($296) {\n                        return f($295($296));\n                    };\n                })())(b)(v);\n            };\n        };\n    },\n    foldrWithIndex: function (f) {\n        return function (b) {\n            return function (v) {\n                return foldrWithIndex((function () {\n                    var $297 = Data_Maybe.maybe(0)(add(1));\n                    return function ($298) {\n                        return f($297($298));\n                    };\n                })())(b)(v);\n            };\n        };\n    },\n    Foldable0: function () {\n        return foldableNonEmptyList;\n    }\n};\nvar functorWithIndexList = {\n    mapWithIndex: function (f) {\n        return foldrWithIndex1(function (i) {\n            return function (x) {\n                return function (acc) {\n                    return new Cons(f(i)(x), acc);\n                };\n            };\n        })(Nil.value);\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(/* #__PURE__ */ Data_NonEmpty.functorWithIndex(functorWithIndexList));\nvar functorWithIndexNonEmptyList = {\n    mapWithIndex: function (fn) {\n        return function (v) {\n            return mapWithIndex((function () {\n                var $299 = Data_Maybe.maybe(0)(add(1));\n                return function ($300) {\n                    return fn($299($300));\n                };\n            })())(v);\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar semigroupList = {\n    append: function (xs) {\n        return function (ys) {\n            return foldr(Cons.create)(ys)(xs);\n        };\n    }\n};\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(semigroupList);\nvar monoidList = /* #__PURE__ */ (function () {\n    return {\n        mempty: Nil.value,\n        Semigroup0: function () {\n            return semigroupList;\n        }\n    };\n})();\nvar semigroupNonEmptyList = {\n    append: function (v) {\n        return function (as$prime) {\n            return new Data_NonEmpty.NonEmpty(v.value0, append1(v.value1)(toList(as$prime)));\n        };\n    }\n};\nvar showList = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof Nil) {\n                return \"Nil\";\n            };\n            return \"(\" + (intercalate(\" : \")(map(show)(v)) + \" : Nil)\");\n        }\n    };\n};\nvar showNonEmptyList = function (dictShow) {\n    var show = Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)));\n    return {\n        show: function (v) {\n            return \"(NonEmptyList \" + (show(v) + \")\");\n        }\n    };\n};\nvar traversableList = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var $301 = map1(foldl(Data_Function.flip(Cons.create))(Nil.value));\n            var $302 = foldl(function (acc) {\n                var $304 = lift2(Data_Function.flip(Cons.create))(acc);\n                return function ($305) {\n                    return $304(f($305));\n                };\n            })(pure1(Nil.value));\n            return function ($303) {\n                return $301($302($303));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableList)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorList;\n    },\n    Foldable1: function () {\n        return foldableList;\n    }\n};\nvar traversableNonEmptyList = /* #__PURE__ */ Data_NonEmpty.traversableNonEmpty(traversableList);\nvar traversableWithIndexList = {\n    traverseWithIndex: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var rev = foldl(Data_Function.flip(Cons.create))(Nil.value);\n            var $306 = map1(rev);\n            var $307 = foldlWithIndex1(function (i) {\n                return function (acc) {\n                    var $309 = lift2(Data_Function.flip(Cons.create))(acc);\n                    var $310 = f(i);\n                    return function ($311) {\n                        return $309($310($311));\n                    };\n                };\n            })(pure1(Nil.value));\n            return function ($308) {\n                return $306($307($308));\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexList;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexList;\n    },\n    Traversable2: function () {\n        return traversableList;\n    }\n};\nvar traverseWithIndex = /* #__PURE__ */ Data_TraversableWithIndex.traverseWithIndex(/* #__PURE__ */ Data_NonEmpty.traversableWithIndexNonEmpty(traversableWithIndexList));\nvar traversableWithIndexNonEmptyList = {\n    traverseWithIndex: function (dictApplicative) {\n        var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n        var traverseWithIndex1 = traverseWithIndex(dictApplicative);\n        return function (f) {\n            return function (v) {\n                return map1(NonEmptyList)(traverseWithIndex1((function () {\n                    var $312 = Data_Maybe.maybe(0)(add(1));\n                    return function ($313) {\n                        return f($312($313));\n                    };\n                })())(v));\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexNonEmptyList;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexNonEmptyList;\n    },\n    Traversable2: function () {\n        return traversableNonEmptyList;\n    }\n};\nvar unfoldable1List = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = new Cons(v.value0, memo);\n                            return;\n                        };\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return foldl(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));\n                        };\n                        throw new Error(\"Failed pattern match at Data.List.Types (line 135, column 22 - line 137, column 61): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(Nil.value);\n        };\n    }\n};\nvar unfoldableList = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return foldl(Data_Function.flip(Cons.create))(Nil.value)(memo);\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = new Cons(v.value0.value0, memo);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.List.Types (line 142, column 22 - line 144, column 52): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(Nil.value);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1List;\n    }\n};\nvar unfoldable1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.unfoldable1NonEmpty(unfoldableList);\nvar foldable1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.foldable1NonEmpty(foldableList);\nvar extendNonEmptyList = {\n    extend: function (f) {\n        return function (v) {\n            var go = function (a) {\n                return function (v1) {\n                    return {\n                        val: new Cons(f(new Data_NonEmpty.NonEmpty(a, v1.acc)), v1.val),\n                        acc: new Cons(a, v1.acc)\n                    };\n                };\n            };\n            return new Data_NonEmpty.NonEmpty(f(v), (foldr(go)({\n                val: Nil.value,\n                acc: Nil.value\n            })(v.value1)).val);\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar extendList = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Nil) {\n                return Nil.value;\n            };\n            if (v1 instanceof Cons) {\n                var go = function (a$prime) {\n                    return function (v2) {\n                        var acc$prime = new Cons(a$prime, v2.acc);\n                        return {\n                            val: new Cons(v(acc$prime), v2.val),\n                            acc: acc$prime\n                        };\n                    };\n                };\n                return new Cons(v(v1), (foldr(go)({\n                    val: Nil.value,\n                    acc: Nil.value\n                })(v1.value1)).val);\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 180, column 1 - line 187, column 42): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar eq1List = {\n    eq1: function (dictEq) {\n        var eq = Data_Eq.eq(dictEq);\n        return function (xs) {\n            return function (ys) {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        return function ($copy_v2) {\n                            var $tco_var_v = $copy_v;\n                            var $tco_var_v1 = $copy_v1;\n                            var $tco_done = false;\n                            var $tco_result;\n                            function $tco_loop(v, v1, v2) {\n                                if (!v2) {\n                                    $tco_done = true;\n                                    return false;\n                                };\n                                if (v instanceof Nil && v1 instanceof Nil) {\n                                    $tco_done = true;\n                                    return v2;\n                                };\n                                if (v instanceof Cons && v1 instanceof Cons) {\n                                    $tco_var_v = v.value1;\n                                    $tco_var_v1 = v1.value1;\n                                    $copy_v2 = v2 && eq(v1.value0)(v.value0);\n                                    return;\n                                };\n                                $tco_done = true;\n                                return false;\n                            };\n                            while (!$tco_done) {\n                                $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                            };\n                            return $tco_result;\n                        };\n                    };\n                };\n                return go(xs)(ys)(true);\n            };\n        };\n    }\n};\nvar eq1 = /* #__PURE__ */ Data_Eq.eq1(eq1List);\nvar eqNonEmpty = /* #__PURE__ */ Data_NonEmpty.eqNonEmpty(eq1List);\nvar eq1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.eq1NonEmpty(eq1List);\nvar eqList = function (dictEq) {\n    return {\n        eq: eq1(dictEq)\n    };\n};\nvar eqNonEmptyList = function (dictEq) {\n    return eqNonEmpty(dictEq);\n};\nvar ord1List = {\n    compare1: function (dictOrd) {\n        var compare = Data_Ord.compare(dictOrd);\n        return function (xs) {\n            return function (ys) {\n                var go = function ($copy_v) {\n                    return function ($copy_v1) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1) {\n                            if (v instanceof Nil && v1 instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.EQ.value;\n                            };\n                            if (v instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.LT.value;\n                            };\n                            if (v1 instanceof Nil) {\n                                $tco_done = true;\n                                return Data_Ordering.GT.value;\n                            };\n                            if (v instanceof Cons && v1 instanceof Cons) {\n                                var v2 = compare(v.value0)(v1.value0);\n                                if (v2 instanceof Data_Ordering.EQ) {\n                                    $tco_var_v = v.value1;\n                                    $copy_v1 = v1.value1;\n                                    return;\n                                };\n                                $tco_done = true;\n                                return v2;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List.Types (line 60, column 5 - line 60, column 20): \" + [ v.constructor.name, v1.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go(xs)(ys);\n            };\n        };\n    },\n    Eq10: function () {\n        return eq1List;\n    }\n};\nvar compare1 = /* #__PURE__ */ Data_Ord.compare1(ord1List);\nvar ordNonEmpty = /* #__PURE__ */ Data_NonEmpty.ordNonEmpty(ord1List);\nvar ord1NonEmptyList = /* #__PURE__ */ Data_NonEmpty.ord1NonEmpty(ord1List);\nvar ordList = function (dictOrd) {\n    var eqList1 = eqList(dictOrd.Eq0());\n    return {\n        compare: compare1(dictOrd),\n        Eq0: function () {\n            return eqList1;\n        }\n    };\n};\nvar ordNonEmptyList = function (dictOrd) {\n    return ordNonEmpty(dictOrd);\n};\nvar comonadNonEmptyList = {\n    extract: function (v) {\n        return v.value0;\n    },\n    Extend0: function () {\n        return extendNonEmptyList;\n    }\n};\nvar applyList = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Nil) {\n                return Nil.value;\n            };\n            if (v instanceof Cons) {\n                return append1(map(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyList);\nvar applyNonEmptyList = {\n    apply: function (v) {\n        return function (v1) {\n            return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), append1(apply(v.value1)(new Cons(v1.value0, Nil.value)))(apply(new Cons(v.value0, v.value1))(v1.value1)));\n        };\n    },\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar bindList = {\n    bind: function (v) {\n        return function (v1) {\n            if (v instanceof Nil) {\n                return Nil.value;\n            };\n            if (v instanceof Cons) {\n                return append1(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));\n            };\n            throw new Error(\"Failed pattern match at Data.List.Types (line 164, column 1 - line 166, column 37): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Apply0: function () {\n        return applyList;\n    }\n};\nvar bind = /* #__PURE__ */ Control_Bind.bind(bindList);\nvar bindNonEmptyList = {\n    bind: function (v) {\n        return function (f) {\n            var v1 = f(v.value0);\n            return new Data_NonEmpty.NonEmpty(v1.value0, append1(v1.value1)(bind(v.value1)(function ($314) {\n                return toList(f($314));\n            })));\n        };\n    },\n    Apply0: function () {\n        return applyNonEmptyList;\n    }\n};\nvar applicativeList = {\n    pure: function (a) {\n        return new Cons(a, Nil.value);\n    },\n    Apply0: function () {\n        return applyList;\n    }\n};\nvar monadList = {\n    Applicative0: function () {\n        return applicativeList;\n    },\n    Bind1: function () {\n        return bindList;\n    }\n};\nvar altNonEmptyList = {\n    alt: /* #__PURE__ */ Data_Semigroup.append(semigroupNonEmptyList),\n    Functor0: function () {\n        return functorNonEmptyList;\n    }\n};\nvar altList = {\n    alt: append1,\n    Functor0: function () {\n        return functorList;\n    }\n};\nvar plusList = /* #__PURE__ */ (function () {\n    return {\n        empty: Nil.value,\n        Alt0: function () {\n            return altList;\n        }\n    };\n})();\nvar alternativeList = {\n    Applicative0: function () {\n        return applicativeList;\n    },\n    Plus1: function () {\n        return plusList;\n    }\n};\nvar monadPlusList = {\n    Monad0: function () {\n        return monadList;\n    },\n    Alternative1: function () {\n        return alternativeList;\n    }\n};\nvar applicativeNonEmptyList = {\n    pure: /* #__PURE__ */ (function () {\n        var $315 = Data_NonEmpty.singleton(plusList);\n        return function ($316) {\n            return NonEmptyList($315($316));\n        };\n    })(),\n    Apply0: function () {\n        return applyNonEmptyList;\n    }\n};\nvar pure = /* #__PURE__ */ Control_Applicative.pure(applicativeNonEmptyList);\nvar monadNonEmptyList = {\n    Applicative0: function () {\n        return applicativeNonEmptyList;\n    },\n    Bind1: function () {\n        return bindNonEmptyList;\n    }\n};\nvar traversable1NonEmptyList = {\n    traverse1: function (dictApply) {\n        var Functor0 = dictApply.Functor0();\n        var mapFlipped = Data_Functor.mapFlipped(Functor0);\n        var lift2 = Control_Apply.lift2(dictApply);\n        var map1 = Data_Functor.map(Functor0);\n        return function (f) {\n            return function (v) {\n                return mapFlipped(foldl(function (acc) {\n                    var $317 = lift2(Data_Function.flip(nelCons))(acc);\n                    return function ($318) {\n                        return $317(f($318));\n                    };\n                })(map1(pure)(f(v.value0)))(v.value1))(function (v1) {\n                    return foldl(Data_Function.flip(nelCons))(pure(v1.value0))(v1.value1);\n                });\n            };\n        };\n    },\n    sequence1: function (dictApply) {\n        return Data_Semigroup_Traversable.traverse1(traversable1NonEmptyList)(dictApply)(identity);\n    },\n    Foldable10: function () {\n        return foldable1NonEmptyList;\n    },\n    Traversable1: function () {\n        return traversableNonEmptyList;\n    }\n};\nexport {\n    Nil,\n    Cons,\n    NonEmptyList,\n    toList,\n    nelCons,\n    showList,\n    eqList,\n    eq1List,\n    ordList,\n    ord1List,\n    semigroupList,\n    monoidList,\n    functorList,\n    functorWithIndexList,\n    foldableList,\n    foldableWithIndexList,\n    unfoldable1List,\n    unfoldableList,\n    traversableList,\n    traversableWithIndexList,\n    applyList,\n    applicativeList,\n    bindList,\n    monadList,\n    altList,\n    plusList,\n    alternativeList,\n    monadPlusList,\n    extendList,\n    newtypeNonEmptyList,\n    eqNonEmptyList,\n    ordNonEmptyList,\n    eq1NonEmptyList,\n    ord1NonEmptyList,\n    showNonEmptyList,\n    functorNonEmptyList,\n    applyNonEmptyList,\n    applicativeNonEmptyList,\n    bindNonEmptyList,\n    monadNonEmptyList,\n    altNonEmptyList,\n    extendNonEmptyList,\n    comonadNonEmptyList,\n    semigroupNonEmptyList,\n    foldableNonEmptyList,\n    traversableNonEmptyList,\n    foldable1NonEmptyList,\n    unfoldable1NonEmptyList,\n    functorWithIndexNonEmptyList,\n    foldableWithIndexNonEmptyList,\n    traversableWithIndexNonEmptyList,\n    traversable1NonEmptyList\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_List_Internal from \"../Data.List.Internal/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_List_Types.foldableList);\nvar tailRecM2 = /* #__PURE__ */ Control_Monad_Rec_Class.tailRecM2(Control_Monad_Rec_Class.monadRecMaybe);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Data_Ordering.eqOrdering);\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(Data_Ordering.eqOrdering);\nvar sequence = /* #__PURE__ */ Data_Traversable.sequence(Data_List_Types.traversableList);\nvar bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_List_Types.foldableList);\nvar any = /* #__PURE__ */ Data_Foldable.any(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_List_Types.semigroupList);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_List_Types.bindList);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar Pattern = function (x) {\n    return x;\n};\nvar updateAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0 && v2 instanceof Data_List_Types.Cons) {\n                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2.value1));\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(updateAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar unzip = /* #__PURE__ */ (function () {\n    return foldr(function (v) {\n        return function (v1) {\n            return new Data_Tuple.Tuple(new Data_List_Types.Cons(v.value0, v1.value0), new Data_List_Types.Cons(v.value1, v1.value1));\n        };\n    })(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_Types.Nil.value));\n})();\nvar uncons = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just({\n            head: v.value0,\n            tail: v.value1\n        });\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): \" + [ v.constructor.name ]);\n};\nvar toUnfoldable = function (dictUnfoldable) {\n    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {\n        return map(function (rec) {\n            return new Data_Tuple.Tuple(rec.head, rec.tail);\n        })(uncons(xs));\n    });\n};\nvar tail = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(v.value1);\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): \" + [ v.constructor.name ]);\n};\nvar stripPrefix = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (v) {\n        return function (s) {\n            var go = function (prefix) {\n                return function (input) {\n                    if (prefix instanceof Data_List_Types.Cons && (input instanceof Data_List_Types.Cons && eq2(prefix.value0)(input.value0))) {\n                        return new Data_Maybe.Just(new Control_Monad_Rec_Class.Loop({\n                            a: prefix.value1,\n                            b: input.value1\n                        }));\n                    };\n                    if (prefix instanceof Data_List_Types.Nil) {\n                        return new Data_Maybe.Just(new Control_Monad_Rec_Class.Done(input));\n                    };\n                    return Data_Maybe.Nothing.value;\n                };\n            };\n            return tailRecM2(go)(v)(s);\n        };\n    };\n};\nvar span = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Cons && v(v1.value0)) {\n            var v2 = span(v)(v1.value1);\n            return {\n                init: new Data_List_Types.Cons(v1.value0, v2.init),\n                rest: v2.rest\n            };\n        };\n        return {\n            init: Data_List_Types.Nil.value,\n            rest: v1\n        };\n    };\n};\nvar snoc = function (xs) {\n    return function (x) {\n        return foldr(Data_List_Types.Cons.create)(new Data_List_Types.Cons(x, Data_List_Types.Nil.value))(xs);\n    };\n};\nvar singleton = function (a) {\n    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);\n};\nvar sortBy = function (cmp) {\n    var merge = function (v) {\n        return function (v1) {\n            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {\n                if (eq(cmp(v.value0)(v1.value0))(Data_Ordering.GT.value)) {\n                    return new Data_List_Types.Cons(v1.value0, merge(v)(v1.value1));\n                };\n                if (Data_Boolean.otherwise) {\n                    return new Data_List_Types.Cons(v.value0, merge(v.value1)(v1));\n                };\n            };\n            if (v instanceof Data_List_Types.Nil) {\n                return v1;\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                return v;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 466, column 3 - line 466, column 38): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n    var mergePairs = function (v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {\n            return new Data_List_Types.Cons(merge(v.value0)(v.value1.value0), mergePairs(v.value1.value1));\n        };\n        return v;\n    };\n    var mergeAll = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return v.value0;\n            };\n            $copy_v = mergePairs(v);\n            return;\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    var sequences = function (v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {\n            if (eq(cmp(v.value0)(v.value1.value0))(Data_Ordering.GT.value)) {\n                return descending(v.value1.value0)(singleton(v.value0))(v.value1.value1);\n            };\n            if (Data_Boolean.otherwise) {\n                return ascending(v.value1.value0)(function (v1) {\n                    return new Data_List_Types.Cons(v.value0, v1);\n                })(v.value1.value1);\n            };\n        };\n        return singleton(v);\n    };\n    var descending = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done1 = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Cons && eq(cmp(v)(v2.value0))(Data_Ordering.GT.value)) {\n                        $tco_var_v = v2.value0;\n                        $tco_var_v1 = new Data_List_Types.Cons(v, v1);\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    $tco_done1 = true;\n                    return new Data_List_Types.Cons(new Data_List_Types.Cons(v, v1), sequences(v2));\n                };\n                while (!$tco_done1) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    var ascending = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done2 = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Cons && notEq(cmp(v)(v2.value0))(Data_Ordering.GT.value)) {\n                        $tco_var_v = v2.value0;\n                        $tco_var_v1 = function (ys) {\n                            return v1(new Data_List_Types.Cons(v, ys));\n                        };\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    $tco_done2 = true;\n                    return new Data_List_Types.Cons(v1(singleton(v)), sequences(v2));\n                };\n                while (!$tco_done2) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    return function ($444) {\n        return mergeAll(sequences($444));\n    };\n};\nvar sort = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (xs) {\n        return sortBy(compare)(xs);\n    };\n};\nvar tails = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return singleton(Data_List_Types.Nil.value);\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_List_Types.Cons(v, tails(v.value1));\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 641, column 1 - line 641, column 43): \" + [ v.constructor.name ]);\n};\nvar showPattern = function (dictShow) {\n    var show = Data_Show.show(Data_List_Types.showList(dictShow));\n    return {\n        show: function (v) {\n            return \"(Pattern \" + (show(v) + \")\");\n        }\n    };\n};\nvar reverse = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return v;\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                    $copy_v1 = v1.value1;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n})();\nvar take = /* #__PURE__ */ (function () {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v1 < 1) {\n                        $tco_done = true;\n                        return reverse(v);\n                    };\n                    if (v2 instanceof Data_List_Types.Nil) {\n                        $tco_done = true;\n                        return reverse(v);\n                    };\n                    if (v2 instanceof Data_List_Types.Cons) {\n                        $tco_var_v = new Data_List_Types.Cons(v2.value0, v);\n                        $tco_var_v1 = v1 - 1 | 0;\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 513, column 3 - line 513, column 35): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n})();\nvar takeWhile = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Cons && p(v1.value0)) {\n                    $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                    $copy_v1 = v1.value1;\n                    return;\n                };\n                $tco_done = true;\n                return reverse(v);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar unsnoc = function (lst) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return new Data_Maybe.Just({\n                        revInit: v1,\n                        last: v.value0\n                    });\n                };\n                if (v instanceof Data_List_Types.Cons) {\n                    $tco_var_v = v.value1;\n                    $copy_v1 = new Data_List_Types.Cons(v.value0, v1);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 270, column 3 - line 270, column 21): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return map(function (h) {\n        return {\n            init: reverse(h.revInit),\n            last: h.last\n        };\n    })(go(lst)(Data_List_Types.Nil.value));\n};\nvar zipWith = function (f) {\n    return function (xs) {\n        return function (ys) {\n            var go = function ($copy_v) {\n                return function ($copy_v1) {\n                    return function ($copy_v2) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_var_v1 = $copy_v1;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1, v2) {\n                            if (v instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v2;\n                            };\n                            if (v1 instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v2;\n                            };\n                            if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {\n                                $tco_var_v = v.value1;\n                                $tco_var_v1 = v1.value1;\n                                $copy_v2 = new Data_List_Types.Cons(f(v.value0)(v1.value0), v2);\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.List (line 779, column 3 - line 779, column 21): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                        };\n                        return $tco_result;\n                    };\n                };\n            };\n            return reverse(go(xs)(ys)(Data_List_Types.Nil.value));\n        };\n    };\n};\nvar zip = /* #__PURE__ */ (function () {\n    return zipWith(Data_Tuple.Tuple.create);\n})();\nvar zipWithA = function (dictApplicative) {\n    var sequence1 = sequence(dictApplicative);\n    return function (f) {\n        return function (xs) {\n            return function (ys) {\n                return sequence1(zipWith(f)(xs)(ys));\n            };\n        };\n    };\n};\nvar range = function (start) {\n    return function (end) {\n        if (start === end) {\n            return singleton(start);\n        };\n        if (Data_Boolean.otherwise) {\n            var go = function ($copy_s) {\n                return function ($copy_e) {\n                    return function ($copy_step) {\n                        return function ($copy_rest) {\n                            var $tco_var_s = $copy_s;\n                            var $tco_var_e = $copy_e;\n                            var $tco_var_step = $copy_step;\n                            var $tco_done = false;\n                            var $tco_result;\n                            function $tco_loop(s, e, step, rest) {\n                                if (s === e) {\n                                    $tco_done = true;\n                                    return new Data_List_Types.Cons(s, rest);\n                                };\n                                if (Data_Boolean.otherwise) {\n                                    $tco_var_s = s + step | 0;\n                                    $tco_var_e = e;\n                                    $tco_var_step = step;\n                                    $copy_rest = new Data_List_Types.Cons(s, rest);\n                                    return;\n                                };\n                                throw new Error(\"Failed pattern match at Data.List (line 148, column 3 - line 149, column 65): \" + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);\n                            };\n                            while (!$tco_done) {\n                                $tco_result = $tco_loop($tco_var_s, $tco_var_e, $tco_var_step, $copy_rest);\n                            };\n                            return $tco_result;\n                        };\n                    };\n                };\n            };\n            return go(end)(start)((function () {\n                var $325 = start > end;\n                if ($325) {\n                    return 1;\n                };\n                return -1 | 0;\n            })())(Data_List_Types.Nil.value);\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 144, column 1 - line 144, column 32): \" + [ start.constructor.name, end.constructor.name ]);\n    };\n};\nvar partition = function (p) {\n    return function (xs) {\n        var select = function (x) {\n            return function (v) {\n                var $328 = p(x);\n                if ($328) {\n                    return {\n                        no: v.no,\n                        yes: new Data_List_Types.Cons(x, v.yes)\n                    };\n                };\n                return {\n                    no: new Data_List_Types.Cons(x, v.no),\n                    yes: v.yes\n                };\n            };\n        };\n        return foldr(select)({\n            no: Data_List_Types.Nil.value,\n            yes: Data_List_Types.Nil.value\n        })(xs);\n    };\n};\nvar $$null = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return true;\n    };\n    return false;\n};\nvar nubBy = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            return function ($copy_v2) {\n                var $tco_var_v = $copy_v;\n                var $tco_var_v1 = $copy_v1;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v, v1, v2) {\n                    if (v2 instanceof Data_List_Types.Nil) {\n                        $tco_done = true;\n                        return v1;\n                    };\n                    if (v2 instanceof Data_List_Types.Cons) {\n                        var v3 = Data_List_Internal.insertAndLookupBy(p)(v2.value0)(v);\n                        if (v3.found) {\n                            $tco_var_v = v3.result;\n                            $tco_var_v1 = v1;\n                            $copy_v2 = v2.value1;\n                            return;\n                        };\n                        $tco_var_v = v3.result;\n                        $tco_var_v1 = new Data_List_Types.Cons(v2.value0, v1);\n                        $copy_v2 = v2.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 673, column 5 - line 673, column 23): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                };\n                return $tco_result;\n            };\n        };\n    };\n    var $445 = go(Data_List_Internal.emptySet)(Data_List_Types.Nil.value);\n    return function ($446) {\n        return reverse($445($446));\n    };\n};\nvar nub = function (dictOrd) {\n    return nubBy(Data_Ord.compare(dictOrd));\n};\nvar newtypePattern = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar mapMaybe = function (f) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return reverse(v);\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    var v2 = f(v1.value0);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        $tco_var_v = v;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    if (v2 instanceof Data_Maybe.Just) {\n                        $tco_var_v = new Data_List_Types.Cons(v2.value0, v);\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 419, column 5 - line 421, column 32): \" + [ v2.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 417, column 3 - line 417, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar manyRec = function (dictMonadRec) {\n    var bind1 = Control_Bind.bind((dictMonadRec.Monad0()).Bind1());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    return function (dictAlternative) {\n        var Alt0 = (dictAlternative.Plus1()).Alt0();\n        var alt = Control_Alt.alt(Alt0);\n        var map1 = Data_Functor.map(Alt0.Functor0());\n        var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n        return function (p) {\n            var go = function (acc) {\n                return bind1(alt(map1(Control_Monad_Rec_Class.Loop.create)(p))(pure(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function (aa) {\n                    return pure(bimap(function (v) {\n                        return new Data_List_Types.Cons(v, acc);\n                    })(function (v) {\n                        return reverse(acc);\n                    })(aa));\n                });\n            };\n            return tailRecM(go)(Data_List_Types.Nil.value);\n        };\n    };\n};\nvar someRec = function (dictMonadRec) {\n    var manyRec1 = manyRec(dictMonadRec);\n    return function (dictAlternative) {\n        var apply = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n        var map1 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n        var manyRec2 = manyRec1(dictAlternative);\n        return function (v) {\n            return apply(map1(Data_List_Types.Cons.create)(v))(manyRec2(v));\n        };\n    };\n};\nvar some = function (dictAlternative) {\n    var apply = Control_Apply.apply((dictAlternative.Applicative0()).Apply0());\n    var map1 = Data_Functor.map(((dictAlternative.Plus1()).Alt0()).Functor0());\n    return function (dictLazy) {\n        var defer = Control_Lazy.defer(dictLazy);\n        return function (v) {\n            return apply(map1(Data_List_Types.Cons.create)(v))(defer(function (v1) {\n                return many(dictAlternative)(dictLazy)(v);\n            }));\n        };\n    };\n};\nvar many = function (dictAlternative) {\n    var alt = Control_Alt.alt((dictAlternative.Plus1()).Alt0());\n    var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n    return function (dictLazy) {\n        return function (v) {\n            return alt(some(dictAlternative)(dictLazy)(v))(pure(Data_List_Types.Nil.value));\n        };\n    };\n};\nvar length = /* #__PURE__ */ foldl(function (acc) {\n    return function (v) {\n        return acc + 1 | 0;\n    };\n})(0);\nvar last = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return new Data_Maybe.Just(v.value0);\n        };\n        if (v instanceof Data_List_Types.Cons) {\n            $copy_v = v.value1;\n            return;\n        };\n        $tco_done = true;\n        return Data_Maybe.Nothing.value;\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar insertBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Data_List_Types.Nil) {\n                return singleton(v1);\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                var v3 = v(v1)(v2.value0);\n                if (v3 instanceof Data_Ordering.GT) {\n                    return new Data_List_Types.Cons(v2.value0, insertBy(v)(v1)(v2.value1));\n                };\n                return new Data_List_Types.Cons(v1, v2);\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 216, column 1 - line 216, column 68): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar insertAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0) {\n                return new Data_Maybe.Just(new Data_List_Types.Cons(v1, v2));\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(insertAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    return insertBy(Data_Ord.compare(dictOrd));\n};\nvar init = function (lst) {\n    return map(function (v) {\n        return v.init;\n    })(unsnoc(lst));\n};\nvar index = function ($copy_v) {\n    return function ($copy_v1) {\n        var $tco_var_v = $copy_v;\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v, v1) {\n            if (v instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Data_List_Types.Cons && v1 === 0) {\n                $tco_done = true;\n                return new Data_Maybe.Just(v.value0);\n            };\n            if (v instanceof Data_List_Types.Cons) {\n                $tco_var_v = v.value1;\n                $copy_v1 = v1 - 1 | 0;\n                return;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 281, column 1 - line 281, column 44): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n        };\n        return $tco_result;\n    };\n};\nvar head = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof Data_List_Types.Cons) {\n        return new Data_Maybe.Just(v.value0);\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): \" + [ v.constructor.name ]);\n};\nvar transpose = function (v) {\n    if (v instanceof Data_List_Types.Nil) {\n        return Data_List_Types.Nil.value;\n    };\n    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Nil) {\n        return transpose(v.value1);\n    };\n    if (v instanceof Data_List_Types.Cons && v.value0 instanceof Data_List_Types.Cons) {\n        return new Data_List_Types.Cons(new Data_List_Types.Cons(v.value0.value0, mapMaybe(head)(v.value1)), transpose(new Data_List_Types.Cons(v.value0.value1, mapMaybe(tail)(v.value1))));\n    };\n    throw new Error(\"Failed pattern match at Data.List (line 813, column 1 - line 813, column 54): \" + [ v.constructor.name ]);\n};\nvar groupBy = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Nil) {\n            return Data_List_Types.Nil.value;\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            var v2 = span(v(v1.value0))(v1.value1);\n            return new Data_List_Types.Cons(new Data_NonEmpty.NonEmpty(v1.value0, v2.init), groupBy(v)(v2.rest));\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 609, column 1 - line 609, column 80): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar groupAllBy = function (p) {\n    var $447 = groupBy(function (x) {\n        return function (y) {\n            return eq(p(x)(y))(Data_Ordering.EQ.value);\n        };\n    });\n    var $448 = sortBy(p);\n    return function ($449) {\n        return $447($448($449));\n    };\n};\nvar group = function (dictEq) {\n    return groupBy(Data_Eq.eq(dictEq));\n};\nvar groupAll = function (dictOrd) {\n    var $450 = group(dictOrd.Eq0());\n    var $451 = sort(dictOrd);\n    return function ($452) {\n        return $450($451($452));\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);\n};\nvar foldM = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_List_Types.Nil) {\n                    return pure(v1);\n                };\n                if (v2 instanceof Data_List_Types.Cons) {\n                    return bind1(v(v1)(v2.value0))(function (b$prime) {\n                        return foldM(dictMonad)(v)(b$prime)(v2.value1);\n                    });\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 824, column 1 - line 824, column 72): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    };\n};\nvar findIndex = function (fn) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Cons) {\n                    if (fn(v1.value0)) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v);\n                    };\n                    if (Data_Boolean.otherwise) {\n                        $tco_var_v = v + 1 | 0;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                };\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 301, column 3 - line 301, column 35): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(0);\n};\nvar findLastIndex = function (fn) {\n    return function (xs) {\n        return map(function (v) {\n            return (length(xs) - 1 | 0) - v | 0;\n        })(findIndex(fn)(reverse(xs)));\n    };\n};\nvar filterM = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    return function (v) {\n        return function (v1) {\n            if (v1 instanceof Data_List_Types.Nil) {\n                return pure(Data_List_Types.Nil.value);\n            };\n            if (v1 instanceof Data_List_Types.Cons) {\n                return bind1(v(v1.value0))(function (b) {\n                    return bind1(filterM(dictMonad)(v)(v1.value1))(function (xs$prime) {\n                        return pure((function () {\n                            if (b) {\n                                return new Data_List_Types.Cons(v1.value0, xs$prime);\n                            };\n                            return xs$prime;\n                        })());\n                    });\n                });\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 403, column 1 - line 403, column 75): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar filter = function (p) {\n    var go = function ($copy_v) {\n        return function ($copy_v1) {\n            var $tco_var_v = $copy_v;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v, v1) {\n                if (v1 instanceof Data_List_Types.Nil) {\n                    $tco_done = true;\n                    return reverse(v);\n                };\n                if (v1 instanceof Data_List_Types.Cons) {\n                    if (p(v1.value0)) {\n                        $tco_var_v = new Data_List_Types.Cons(v1.value0, v);\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                    if (Data_Boolean.otherwise) {\n                        $tco_var_v = v;\n                        $copy_v1 = v1.value1;\n                        return;\n                    };\n                };\n                throw new Error(\"Failed pattern match at Data.List (line 390, column 3 - line 390, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_v, $copy_v1);\n            };\n            return $tco_result;\n        };\n    };\n    return go(Data_List_Types.Nil.value);\n};\nvar intersectBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v1 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            if (v2 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            return filter(function (x) {\n                return any(v(x))(v2);\n            })(v1);\n        };\n    };\n};\nvar intersect = function (dictEq) {\n    return intersectBy(Data_Eq.eq(dictEq));\n};\nvar nubByEq = function (v) {\n    return function (v1) {\n        if (v1 instanceof Data_List_Types.Nil) {\n            return Data_List_Types.Nil.value;\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            return new Data_List_Types.Cons(v1.value0, nubByEq(v)(filter(function (y) {\n                return !v(v1.value0)(y);\n            })(v1.value1)));\n        };\n        throw new Error(\"Failed pattern match at Data.List (line 705, column 1 - line 705, column 61): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar nubEq = function (dictEq) {\n    return nubByEq(Data_Eq.eq(dictEq));\n};\nvar eqPattern = function (dictEq) {\n    var eq2 = Data_Eq.eq(Data_List_Types.eqList(dictEq));\n    return {\n        eq: function (x) {\n            return function (y) {\n                return eq2(x)(y);\n            };\n        }\n    };\n};\nvar ordPattern = function (dictOrd) {\n    var compare = Data_Ord.compare(Data_List_Types.ordList(dictOrd));\n    var eqPattern1 = eqPattern(dictOrd.Eq0());\n    return {\n        compare: function (x) {\n            return function (y) {\n                return compare(x)(y);\n            };\n        },\n        Eq0: function () {\n            return eqPattern1;\n        }\n    };\n};\nvar elemLastIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findLastIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar elemIndex = function (dictEq) {\n    var eq2 = Data_Eq.eq(dictEq);\n    return function (x) {\n        return findIndex(function (v) {\n            return eq2(v)(x);\n        });\n    };\n};\nvar dropWhile = function (p) {\n    var go = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Data_List_Types.Cons && p(v.value0)) {\n                $copy_v = v.value1;\n                return;\n            };\n            $tco_done = true;\n            return v;\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    return go;\n};\nvar dropEnd = function (n) {\n    return function (xs) {\n        return take(length(xs) - n | 0)(xs);\n    };\n};\nvar drop = function ($copy_v) {\n    return function ($copy_v1) {\n        var $tco_var_v = $copy_v;\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v, v1) {\n            if (v < 1) {\n                $tco_done = true;\n                return v1;\n            };\n            if (v1 instanceof Data_List_Types.Nil) {\n                $tco_done = true;\n                return Data_List_Types.Nil.value;\n            };\n            if (v1 instanceof Data_List_Types.Cons) {\n                $tco_var_v = v - 1 | 0;\n                $copy_v1 = v1.value1;\n                return;\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 536, column 1 - line 536, column 42): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($tco_var_v, $copy_v1);\n        };\n        return $tco_result;\n    };\n};\nvar slice = function (start) {\n    return function (end) {\n        return function (xs) {\n            return take(end - start | 0)(drop(start)(xs));\n        };\n    };\n};\nvar takeEnd = function (n) {\n    return function (xs) {\n        return drop(length(xs) - n | 0)(xs);\n    };\n};\nvar deleteBy = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Data_List_Types.Nil) {\n                return Data_List_Types.Nil.value;\n            };\n            if (v2 instanceof Data_List_Types.Cons && v(v1)(v2.value0)) {\n                return v2.value1;\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return new Data_List_Types.Cons(v2.value0, deleteBy(v)(v1)(v2.value1));\n            };\n            throw new Error(\"Failed pattern match at Data.List (line 732, column 1 - line 732, column 67): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar unionBy = function (eq2) {\n    return function (xs) {\n        return function (ys) {\n            return append1(xs)(foldl(Data_Function.flip(deleteBy(eq2)))(nubByEq(eq2)(ys))(xs));\n        };\n    };\n};\nvar union = function (dictEq) {\n    return unionBy(Data_Eq.eq(dictEq));\n};\nvar deleteAt = function (v) {\n    return function (v1) {\n        if (v === 0 && v1 instanceof Data_List_Types.Cons) {\n            return new Data_Maybe.Just(v1.value1);\n        };\n        if (v1 instanceof Data_List_Types.Cons) {\n            return map(function (v2) {\n                return new Data_List_Types.Cons(v1.value0, v2);\n            })(deleteAt(v - 1 | 0)(v1.value1));\n        };\n        return Data_Maybe.Nothing.value;\n    };\n};\nvar $$delete = function (dictEq) {\n    return deleteBy(Data_Eq.eq(dictEq));\n};\nvar difference = function (dictEq) {\n    return foldl(Data_Function.flip($$delete(dictEq)));\n};\nvar concatMap = /* #__PURE__ */ Data_Function.flip(bind);\nvar concat = function (v) {\n    return bind(v)(identity);\n};\nvar catMaybes = /* #__PURE__ */ mapMaybe(identity);\nvar alterAt = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v === 0 && v2 instanceof Data_List_Types.Cons) {\n                return new Data_Maybe.Just((function () {\n                    var v3 = v1(v2.value0);\n                    if (v3 instanceof Data_Maybe.Nothing) {\n                        return v2.value1;\n                    };\n                    if (v3 instanceof Data_Maybe.Just) {\n                        return new Data_List_Types.Cons(v3.value0, v2.value1);\n                    };\n                    throw new Error(\"Failed pattern match at Data.List (line 352, column 3 - line 354, column 23): \" + [ v3.constructor.name ]);\n                })());\n            };\n            if (v2 instanceof Data_List_Types.Cons) {\n                return map(function (v3) {\n                    return new Data_List_Types.Cons(v2.value0, v3);\n                })(alterAt(v - 1 | 0)(v1)(v2.value1));\n            };\n            return Data_Maybe.Nothing.value;\n        };\n    };\n};\nvar modifyAt = function (n) {\n    return function (f) {\n        return alterAt(n)(function ($453) {\n            return Data_Maybe.Just.create(f($453));\n        });\n    };\n};\nexport {\n    toUnfoldable,\n    fromFoldable,\n    singleton,\n    range,\n    some,\n    someRec,\n    many,\n    manyRec,\n    $$null as null,\n    length,\n    snoc,\n    insert,\n    insertBy,\n    head,\n    last,\n    tail,\n    init,\n    uncons,\n    unsnoc,\n    index,\n    elemIndex,\n    elemLastIndex,\n    findIndex,\n    findLastIndex,\n    insertAt,\n    deleteAt,\n    updateAt,\n    modifyAt,\n    alterAt,\n    reverse,\n    concat,\n    concatMap,\n    filter,\n    filterM,\n    mapMaybe,\n    catMaybes,\n    sort,\n    sortBy,\n    Pattern,\n    stripPrefix,\n    slice,\n    take,\n    takeEnd,\n    takeWhile,\n    drop,\n    dropEnd,\n    dropWhile,\n    span,\n    group,\n    groupAll,\n    groupBy,\n    groupAllBy,\n    partition,\n    nub,\n    nubBy,\n    nubEq,\n    nubByEq,\n    union,\n    unionBy,\n    $$delete as delete,\n    deleteBy,\n    difference,\n    intersect,\n    intersectBy,\n    zipWith,\n    zipWithA,\n    zip,\n    unzip,\n    transpose,\n    foldM,\n    eqPattern,\n    ordPattern,\n    newtypePattern,\n    showPattern\n};\nexport {\n    all,\n    any,\n    elem,\n    find,\n    findMap,\n    fold,\n    foldMap,\n    foldl,\n    foldr,\n    intercalate,\n    notElem\n} from \"../Data.Foldable/index.js\";\nexport {\n    Cons,\n    Nil\n} from \"../Data.List.Types/index.js\";\nexport {\n    scanl,\n    scanr\n} from \"../Data.Traversable/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar abs = /* #__PURE__ */ Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt);\nvar Leaf = /* #__PURE__ */ (function () {\n    function Leaf() {\n\n    };\n    Leaf.value = new Leaf();\n    return Leaf;\n})();\nvar Node = /* #__PURE__ */ (function () {\n    function Node(value0, value1, value2, value3, value4, value5) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n        this.value3 = value3;\n        this.value4 = value4;\n        this.value5 = value5;\n    };\n    Node.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return function (value3) {\n                    return function (value4) {\n                        return function (value5) {\n                            return new Node(value0, value1, value2, value3, value4, value5);\n                        };\n                    };\n                };\n            };\n        };\n    };\n    return Node;\n})();\nvar IterLeaf = /* #__PURE__ */ (function () {\n    function IterLeaf() {\n\n    };\n    IterLeaf.value = new IterLeaf();\n    return IterLeaf;\n})();\nvar IterEmit = /* #__PURE__ */ (function () {\n    function IterEmit(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    IterEmit.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new IterEmit(value0, value1, value2);\n            };\n        };\n    };\n    return IterEmit;\n})();\nvar IterNode = /* #__PURE__ */ (function () {\n    function IterNode(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    IterNode.create = function (value0) {\n        return function (value1) {\n            return new IterNode(value0, value1);\n        };\n    };\n    return IterNode;\n})();\nvar IterDone = /* #__PURE__ */ (function () {\n    function IterDone() {\n\n    };\n    IterDone.value = new IterDone();\n    return IterDone;\n})();\nvar IterNext = /* #__PURE__ */ (function () {\n    function IterNext(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    IterNext.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new IterNext(value0, value1, value2);\n            };\n        };\n    };\n    return IterNext;\n})();\nvar Split = /* #__PURE__ */ (function () {\n    function Split(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    Split.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new Split(value0, value1, value2);\n            };\n        };\n    };\n    return Split;\n})();\nvar SplitLast = /* #__PURE__ */ (function () {\n    function SplitLast(value0, value1, value2) {\n        this.value0 = value0;\n        this.value1 = value1;\n        this.value2 = value2;\n    };\n    SplitLast.create = function (value0) {\n        return function (value1) {\n            return function (value2) {\n                return new SplitLast(value0, value1, value2);\n            };\n        };\n    };\n    return SplitLast;\n})();\nvar unsafeNode = function (k, v, l, r) {\n    if (l instanceof Leaf) {\n        if (r instanceof Leaf) {\n            return new Node(1, 1, k, v, l, r);\n        };\n        if (r instanceof Node) {\n            return new Node(1 + r.value0 | 0, 1 + r.value1 | 0, k, v, l, r);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 680, column 5 - line 684, column 39): \" + [ r.constructor.name ]);\n    };\n    if (l instanceof Node) {\n        if (r instanceof Leaf) {\n            return new Node(1 + l.value0 | 0, 1 + l.value1 | 0, k, v, l, r);\n        };\n        if (r instanceof Node) {\n            return new Node(1 + (function () {\n                var $277 = l.value0 > r.value0;\n                if ($277) {\n                    return l.value0;\n                };\n                return r.value0;\n            })() | 0, (1 + l.value1 | 0) + r.value1 | 0, k, v, l, r);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 686, column 5 - line 690, column 68): \" + [ r.constructor.name ]);\n    };\n    throw new Error(\"Failed pattern match at Data.Map.Internal (line 678, column 32 - line 690, column 68): \" + [ l.constructor.name ]);\n};\nvar toMapIter = /* #__PURE__ */ (function () {\n    return Data_Function.flip(IterNode.create)(IterLeaf.value);\n})();\nvar stepWith = function (f) {\n    return function (next) {\n        return function (done) {\n            var go = function ($copy_v) {\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(v) {\n                    if (v instanceof IterLeaf) {\n                        $tco_done = true;\n                        return done(Data_Unit.unit);\n                    };\n                    if (v instanceof IterEmit) {\n                        $tco_done = true;\n                        return next(v.value0, v.value1, v.value2);\n                    };\n                    if (v instanceof IterNode) {\n                        $copy_v = f(v.value1)(v.value0);\n                        return;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 918, column 8 - line 924, column 20): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($copy_v);\n                };\n                return $tco_result;\n            };\n            return go;\n        };\n    };\n};\nvar size = function (v) {\n    if (v instanceof Leaf) {\n        return 0;\n    };\n    if (v instanceof Node) {\n        return v.value1;\n    };\n    throw new Error(\"Failed pattern match at Data.Map.Internal (line 616, column 8 - line 618, column 24): \" + [ v.constructor.name ]);\n};\nvar singleton = function (k) {\n    return function (v) {\n        return new Node(1, 1, k, v, Leaf.value, Leaf.value);\n    };\n};\nvar unsafeBalancedNode = /* #__PURE__ */ (function () {\n    var height = function (v) {\n        if (v instanceof Leaf) {\n            return 0;\n        };\n        if (v instanceof Node) {\n            return v.value0;\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 735, column 12 - line 737, column 26): \" + [ v.constructor.name ]);\n    };\n    var rotateLeft = function (k, v, l, rk, rv, rl, rr) {\n        if (rl instanceof Node && rl.value0 > height(rr)) {\n            return unsafeNode(rl.value2, rl.value3, unsafeNode(k, v, l, rl.value4), unsafeNode(rk, rv, rl.value5, rr));\n        };\n        return unsafeNode(rk, rv, unsafeNode(k, v, l, rl), rr);\n    };\n    var rotateRight = function (k, v, lk, lv, ll, lr, r) {\n        if (lr instanceof Node && height(ll) <= lr.value0) {\n            return unsafeNode(lr.value2, lr.value3, unsafeNode(lk, lv, ll, lr.value4), unsafeNode(k, v, lr.value5, r));\n        };\n        return unsafeNode(lk, lv, ll, unsafeNode(k, v, lr, r));\n    };\n    return function (k, v, l, r) {\n        if (l instanceof Leaf) {\n            if (r instanceof Leaf) {\n                return singleton(k)(v);\n            };\n            if (r instanceof Node && r.value0 > 1) {\n                return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);\n            };\n            return unsafeNode(k, v, l, r);\n        };\n        if (l instanceof Node) {\n            if (r instanceof Node) {\n                if (r.value0 > (l.value0 + 1 | 0)) {\n                    return rotateLeft(k, v, l, r.value2, r.value3, r.value4, r.value5);\n                };\n                if (l.value0 > (r.value0 + 1 | 0)) {\n                    return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);\n                };\n            };\n            if (r instanceof Leaf && l.value0 > 1) {\n                return rotateRight(k, v, l.value2, l.value3, l.value4, l.value5, r);\n            };\n            return unsafeNode(k, v, l, r);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 695, column 40 - line 716, column 34): \" + [ l.constructor.name ]);\n    };\n})();\nvar $lazy_unsafeSplit = /* #__PURE__ */ $runtime_lazy(\"unsafeSplit\", \"Data.Map.Internal\", function () {\n    return function (comp, k, m) {\n        if (m instanceof Leaf) {\n            return new Split(Data_Maybe.Nothing.value, Leaf.value, Leaf.value);\n        };\n        if (m instanceof Node) {\n            var v = comp(k)(m.value2);\n            if (v instanceof Data_Ordering.LT) {\n                var v1 = $lazy_unsafeSplit(771)(comp, k, m.value4);\n                return new Split(v1.value0, v1.value1, unsafeBalancedNode(m.value2, m.value3, v1.value2, m.value5));\n            };\n            if (v instanceof Data_Ordering.GT) {\n                var v1 = $lazy_unsafeSplit(774)(comp, k, m.value5);\n                return new Split(v1.value0, unsafeBalancedNode(m.value2, m.value3, m.value4, v1.value1), v1.value2);\n            };\n            if (v instanceof Data_Ordering.EQ) {\n                return new Split(new Data_Maybe.Just(m.value3), m.value4, m.value5);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 769, column 5 - line 777, column 30): \" + [ v.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 765, column 34 - line 777, column 30): \" + [ m.constructor.name ]);\n    };\n});\nvar unsafeSplit = /* #__PURE__ */ $lazy_unsafeSplit(764);\nvar $lazy_unsafeSplitLast = /* #__PURE__ */ $runtime_lazy(\"unsafeSplitLast\", \"Data.Map.Internal\", function () {\n    return function (k, v, l, r) {\n        if (r instanceof Leaf) {\n            return new SplitLast(k, v, l);\n        };\n        if (r instanceof Node) {\n            var v1 = $lazy_unsafeSplitLast(757)(r.value2, r.value3, r.value4, r.value5);\n            return new SplitLast(v1.value0, v1.value1, unsafeBalancedNode(k, v, l, v1.value2));\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 754, column 37 - line 758, column 57): \" + [ r.constructor.name ]);\n    };\n});\nvar unsafeSplitLast = /* #__PURE__ */ $lazy_unsafeSplitLast(753);\nvar unsafeJoinNodes = function (v, v1) {\n    if (v instanceof Leaf) {\n        return v1;\n    };\n    if (v instanceof Node) {\n        var v2 = unsafeSplitLast(v.value2, v.value3, v.value4, v.value5);\n        return unsafeBalancedNode(v2.value0, v2.value1, v2.value2, v1);\n    };\n    throw new Error(\"Failed pattern match at Data.Map.Internal (line 742, column 25 - line 746, column 38): \" + [ v.constructor.name, v1.constructor.name ]);\n};\nvar $lazy_unsafeDifference = /* #__PURE__ */ $runtime_lazy(\"unsafeDifference\", \"Data.Map.Internal\", function () {\n    return function (comp, l, r) {\n        if (l instanceof Leaf) {\n            return Leaf.value;\n        };\n        if (r instanceof Leaf) {\n            return Leaf.value;\n        };\n        if (r instanceof Node) {\n            var v = unsafeSplit(comp, r.value2, l);\n            var l$prime = $lazy_unsafeDifference(819)(comp, v.value1, r.value4);\n            var r$prime = $lazy_unsafeDifference(820)(comp, v.value2, r.value5);\n            return unsafeJoinNodes(l$prime, r$prime);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 814, column 39 - line 821, column 33): \" + [ l.constructor.name, r.constructor.name ]);\n    };\n});\nvar unsafeDifference = /* #__PURE__ */ $lazy_unsafeDifference(813);\nvar $lazy_unsafeIntersectionWith = /* #__PURE__ */ $runtime_lazy(\"unsafeIntersectionWith\", \"Data.Map.Internal\", function () {\n    return function (comp, app, l, r) {\n        if (l instanceof Leaf) {\n            return Leaf.value;\n        };\n        if (r instanceof Leaf) {\n            return Leaf.value;\n        };\n        if (r instanceof Node) {\n            var v = unsafeSplit(comp, r.value2, l);\n            var l$prime = $lazy_unsafeIntersectionWith(803)(comp, app, v.value1, r.value4);\n            var r$prime = $lazy_unsafeIntersectionWith(804)(comp, app, v.value2, r.value5);\n            if (v.value0 instanceof Data_Maybe.Just) {\n                return unsafeBalancedNode(r.value2, app(v.value0.value0)(r.value3), l$prime, r$prime);\n            };\n            if (v.value0 instanceof Data_Maybe.Nothing) {\n                return unsafeJoinNodes(l$prime, r$prime);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 805, column 5 - line 809, column 37): \" + [ v.value0.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 798, column 49 - line 809, column 37): \" + [ l.constructor.name, r.constructor.name ]);\n    };\n});\nvar unsafeIntersectionWith = /* #__PURE__ */ $lazy_unsafeIntersectionWith(797);\nvar $lazy_unsafeUnionWith = /* #__PURE__ */ $runtime_lazy(\"unsafeUnionWith\", \"Data.Map.Internal\", function () {\n    return function (comp, app, l, r) {\n        if (l instanceof Leaf) {\n            return r;\n        };\n        if (r instanceof Leaf) {\n            return l;\n        };\n        if (r instanceof Node) {\n            var v = unsafeSplit(comp, r.value2, l);\n            var l$prime = $lazy_unsafeUnionWith(787)(comp, app, v.value1, r.value4);\n            var r$prime = $lazy_unsafeUnionWith(788)(comp, app, v.value2, r.value5);\n            if (v.value0 instanceof Data_Maybe.Just) {\n                return unsafeBalancedNode(r.value2, app(v.value0.value0)(r.value3), l$prime, r$prime);\n            };\n            if (v.value0 instanceof Data_Maybe.Nothing) {\n                return unsafeBalancedNode(r.value2, r.value3, l$prime, r$prime);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 789, column 5 - line 793, column 46): \" + [ v.value0.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 782, column 42 - line 793, column 46): \" + [ l.constructor.name, r.constructor.name ]);\n    };\n});\nvar unsafeUnionWith = /* #__PURE__ */ $lazy_unsafeUnionWith(781);\nvar unionWith = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (app) {\n        return function (m1) {\n            return function (m2) {\n                return unsafeUnionWith(compare, app, m1, m2);\n            };\n        };\n    };\n};\nvar union = function (dictOrd) {\n    return unionWith(dictOrd)(Data_Function[\"const\"]);\n};\nvar update = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (f) {\n        return function (k) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return Leaf.value;\n                };\n                if (v instanceof Node) {\n                    var v1 = compare(k)(v.value2);\n                    if (v1 instanceof Data_Ordering.LT) {\n                        return unsafeBalancedNode(v.value2, v.value3, go(v.value4), v.value5);\n                    };\n                    if (v1 instanceof Data_Ordering.GT) {\n                        return unsafeBalancedNode(v.value2, v.value3, v.value4, go(v.value5));\n                    };\n                    if (v1 instanceof Data_Ordering.EQ) {\n                        var v2 = f(v.value3);\n                        if (v2 instanceof Data_Maybe.Nothing) {\n                            return unsafeJoinNodes(v.value4, v.value5);\n                        };\n                        if (v2 instanceof Data_Maybe.Just) {\n                            return new Node(v.value0, v.value1, v.value2, v2.value0, v.value4, v.value5);\n                        };\n                        throw new Error(\"Failed pattern match at Data.Map.Internal (line 529, column 11 - line 533, column 38): \" + [ v2.constructor.name ]);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 525, column 7 - line 533, column 38): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 522, column 8 - line 533, column 38): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    };\n};\nvar showTree = function (dictShow) {\n    var show1 = Data_Show.show(dictShow);\n    return function (dictShow1) {\n        var show2 = Data_Show.show(dictShow1);\n        var go = function (ind) {\n            return function (v) {\n                if (v instanceof Leaf) {\n                    return ind + \"Leaf\";\n                };\n                if (v instanceof Node) {\n                    return ind + (\"[\" + (show(v.value0) + (\"] \" + (show1(v.value2) + (\" => \" + (show2(v.value3) + \"\\x0a\")))))) + (go(ind + \"    \")(v.value4) + \"\\x0a\" + go(ind + \"    \")(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 231, column 12 - line 236, column 34): \" + [ v.constructor.name ]);\n            };\n        };\n        return go(\"\");\n    };\n};\nvar semigroupMap = function () {\n    return function (dictOrd) {\n        var unionWith1 = unionWith(dictOrd);\n        return function (dictSemigroup) {\n            return {\n                append: unionWith1(Data_Semigroup.append(dictSemigroup))\n            };\n        };\n    };\n};\nvar semigroupMap1 = /* #__PURE__ */ semigroupMap();\nvar pop = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        return function (m) {\n            var v = unsafeSplit(compare, k, m);\n            return map(function (a) {\n                return new Data_Tuple.Tuple(a, unsafeJoinNodes(v.value1, v.value2));\n            })(v.value0);\n        };\n    };\n};\nvar member = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function ($copy_v) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return false;\n                };\n                if (v instanceof Node) {\n                    var v1 = compare(k)(v.value2);\n                    if (v1 instanceof Data_Ordering.LT) {\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.GT) {\n                        $copy_v = v.value5;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.EQ) {\n                        $tco_done = true;\n                        return true;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 457, column 7 - line 460, column 19): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 454, column 8 - line 460, column 19): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_v);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar mapMaybeWithKey = function (dictOrd) {\n    return function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                var v2 = f(v.value2)(v.value3);\n                if (v2 instanceof Data_Maybe.Just) {\n                    return unsafeBalancedNode(v.value2, v2.value0, go(v.value4), go(v.value5));\n                };\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return unsafeJoinNodes(go(v.value4), go(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 659, column 7 - line 663, column 47): \" + [ v2.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 656, column 8 - line 663, column 47): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar mapMaybe = function (dictOrd) {\n    var $763 = mapMaybeWithKey(dictOrd);\n    return function ($764) {\n        return $763(Data_Function[\"const\"]($764));\n    };\n};\nvar lookupLE = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    return go(v.value4);\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    var v2 = go(v.value5);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value2,\n                        value: v.value3\n                    });\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 293, column 7 - line 300, column 38): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 290, column 8 - line 300, column 38): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar lookupGE = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    var v2 = go(v.value4);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    return go(v.value5);\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return new Data_Maybe.Just({\n                        key: v.value2,\n                        value: v.value3\n                    });\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 325, column 7 - line 331, column 42): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 322, column 8 - line 331, column 42): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar lookup = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function ($copy_v) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return Data_Maybe.Nothing.value;\n                };\n                if (v instanceof Node) {\n                    var v1 = compare(k)(v.value2);\n                    if (v1 instanceof Data_Ordering.LT) {\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.GT) {\n                        $copy_v = v.value5;\n                        return;\n                    };\n                    if (v1 instanceof Data_Ordering.EQ) {\n                        $tco_done = true;\n                        return new Data_Maybe.Just(v.value3);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 281, column 7 - line 284, column 22): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 278, column 8 - line 284, column 22): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_v);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar iterMapU = function (iter) {\n    return function (v) {\n        if (v instanceof Leaf) {\n            return iter;\n        };\n        if (v instanceof Node) {\n            if (v.value4 instanceof Leaf) {\n                if (v.value5 instanceof Leaf) {\n                    return new IterEmit(v.value2, v.value3, iter);\n                };\n                return new IterEmit(v.value2, v.value3, new IterNode(v.value5, iter));\n            };\n            if (v.value5 instanceof Leaf) {\n                return new IterEmit(v.value2, v.value3, new IterNode(v.value4, iter));\n            };\n            return new IterEmit(v.value2, v.value3, new IterNode(v.value4, new IterNode(v.value5, iter)));\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 951, column 17 - line 966, column 56): \" + [ v.constructor.name ]);\n    };\n};\nvar stepUnorderedCps = /* #__PURE__ */ stepWith(iterMapU);\nvar stepUnfoldrUnordered = /* #__PURE__ */ (function () {\n    var step = function (k, v, next) {\n        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(k, v), next));\n    };\n    return stepUnorderedCps(step)(function (v) {\n        return Data_Maybe.Nothing.value;\n    });\n})();\nvar toUnfoldableUnordered = function (dictUnfoldable) {\n    var $765 = Data_Unfoldable.unfoldr(dictUnfoldable)(stepUnfoldrUnordered);\n    return function ($766) {\n        return $765(toMapIter($766));\n    };\n};\nvar stepUnordered = /* #__PURE__ */ (function () {\n    return stepUnorderedCps(function (k, v, next) {\n        return new IterNext(k, v, next);\n    })(Data_Function[\"const\"](IterDone.value));\n})();\nvar iterMapR = /* #__PURE__ */ (function () {\n    var go = function ($copy_iter) {\n        return function ($copy_v) {\n            var $tco_var_iter = $copy_iter;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(iter, v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return iter;\n                };\n                if (v instanceof Node) {\n                    if (v.value5 instanceof Leaf) {\n                        $tco_var_iter = new IterEmit(v.value2, v.value3, iter);\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    $tco_var_iter = new IterEmit(v.value2, v.value3, new IterNode(v.value4, iter));\n                    $copy_v = v.value5;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 941, column 13 - line 948, column 48): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_iter, $copy_v);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n})();\nvar stepDescCps = /* #__PURE__ */ stepWith(iterMapR);\nvar stepDesc = /* #__PURE__ */ (function () {\n    return stepDescCps(function (k, v, next) {\n        return new IterNext(k, v, next);\n    })(Data_Function[\"const\"](IterDone.value));\n})();\nvar iterMapL = /* #__PURE__ */ (function () {\n    var go = function ($copy_iter) {\n        return function ($copy_v) {\n            var $tco_var_iter = $copy_iter;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(iter, v) {\n                if (v instanceof Leaf) {\n                    $tco_done = true;\n                    return iter;\n                };\n                if (v instanceof Node) {\n                    if (v.value5 instanceof Leaf) {\n                        $tco_var_iter = new IterEmit(v.value2, v.value3, iter);\n                        $copy_v = v.value4;\n                        return;\n                    };\n                    $tco_var_iter = new IterEmit(v.value2, v.value3, new IterNode(v.value5, iter));\n                    $copy_v = v.value4;\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 929, column 13 - line 936, column 48): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_iter, $copy_v);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n})();\nvar stepAscCps = /* #__PURE__ */ stepWith(iterMapL);\nvar stepAsc = /* #__PURE__ */ (function () {\n    return stepAscCps(function (k, v, next) {\n        return new IterNext(k, v, next);\n    })(Data_Function[\"const\"](IterDone.value));\n})();\nvar eqMapIter = function (dictEq) {\n    var eq1 = Data_Eq.eq(dictEq);\n    return function (dictEq1) {\n        var eq2 = Data_Eq.eq(dictEq1);\n        return {\n            eq: (function () {\n                var go = function ($copy_a) {\n                    return function ($copy_b) {\n                        var $tco_var_a = $copy_a;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(a, b) {\n                            var v = stepAsc(a);\n                            if (v instanceof IterNext) {\n                                var v2 = stepAsc(b);\n                                if (v2 instanceof IterNext && (eq1(v.value0)(v2.value0) && eq2(v.value1)(v2.value1))) {\n                                    $tco_var_a = v.value2;\n                                    $copy_b = v2.value2;\n                                    return;\n                                };\n                                $tco_done = true;\n                                return false;\n                            };\n                            if (v instanceof IterDone) {\n                                $tco_done = true;\n                                return true;\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 837, column 14 - line 846, column 13): \" + [ v.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_a, $copy_b);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go;\n            })()\n        };\n    };\n};\nvar ordMapIter = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    var eqMapIter1 = eqMapIter(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare(dictOrd1);\n        var eqMapIter2 = eqMapIter1(dictOrd1.Eq0());\n        return {\n            compare: (function () {\n                var go = function ($copy_a) {\n                    return function ($copy_b) {\n                        var $tco_var_a = $copy_a;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(a, b) {\n                            var v = stepAsc(b);\n                            var v1 = stepAsc(a);\n                            if (v1 instanceof IterNext && v instanceof IterNext) {\n                                var v3 = compare(v1.value0)(v.value0);\n                                if (v3 instanceof Data_Ordering.EQ) {\n                                    var v4 = compare1(v1.value1)(v.value1);\n                                    if (v4 instanceof Data_Ordering.EQ) {\n                                        $tco_var_a = v1.value2;\n                                        $copy_b = v.value2;\n                                        return;\n                                    };\n                                    $tco_done = true;\n                                    return v4;\n                                };\n                                $tco_done = true;\n                                return v3;\n                            };\n                            if (v1 instanceof IterDone) {\n                                if (v instanceof IterDone) {\n                                    $tco_done = true;\n                                    return Data_Ordering.EQ.value;\n                                };\n                                $tco_done = true;\n                                return Data_Ordering.LT.value;\n                            };\n                            if (v instanceof IterDone) {\n                                $tco_done = true;\n                                return Data_Ordering.GT.value;\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 851, column 14 - line 869, column 11): \" + [ v1.constructor.name, v.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_a, $copy_b);\n                        };\n                        return $tco_result;\n                    };\n                };\n                return go;\n            })(),\n            Eq0: function () {\n                return eqMapIter2;\n            }\n        };\n    };\n};\nvar stepUnfoldr = /* #__PURE__ */ (function () {\n    var step = function (k, v, next) {\n        return new Data_Maybe.Just(new Data_Tuple.Tuple(new Data_Tuple.Tuple(k, v), next));\n    };\n    return stepAscCps(step)(function (v) {\n        return Data_Maybe.Nothing.value;\n    });\n})();\nvar toUnfoldable = function (dictUnfoldable) {\n    var $767 = Data_Unfoldable.unfoldr(dictUnfoldable)(stepUnfoldr);\n    return function ($768) {\n        return $767(toMapIter($768));\n    };\n};\nvar toUnfoldable1 = /* #__PURE__ */ toUnfoldable(Data_Unfoldable.unfoldableArray);\nvar showMap = function (dictShow) {\n    var showTuple = Data_Tuple.showTuple(dictShow);\n    return function (dictShow1) {\n        var show1 = Data_Show.show(Data_Show.showArray(showTuple(dictShow1)));\n        return {\n            show: function (as) {\n                return \"(fromFoldable \" + (show1(toUnfoldable1(as)) + \")\");\n            }\n        };\n    };\n};\nvar isSubmap = function (dictOrd) {\n    var lookup1 = lookup(dictOrd);\n    return function (dictEq) {\n        var eq1 = Data_Eq.eq(dictEq);\n        var go = function (m1) {\n            return function (m2) {\n                if (m1 instanceof Leaf) {\n                    return true;\n                };\n                if (m1 instanceof Node) {\n                    var v1 = lookup1(m1.value2)(m2);\n                    if (v1 instanceof Data_Maybe.Nothing) {\n                        return false;\n                    };\n                    if (v1 instanceof Data_Maybe.Just) {\n                        return eq1(m1.value3)(v1.value0) && (go(m1.value4)(m2) && go(m1.value5)(m2));\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 609, column 7 - line 612, column 40): \" + [ v1.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 606, column 14 - line 612, column 40): \" + [ m1.constructor.name ]);\n            };\n        };\n        return go;\n    };\n};\nvar isEmpty = function (v) {\n    if (v instanceof Leaf) {\n        return true;\n    };\n    return false;\n};\nvar intersectionWith = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (app) {\n        return function (m1) {\n            return function (m2) {\n                return unsafeIntersectionWith(compare, app, m1, m2);\n            };\n        };\n    };\n};\nvar intersection = function (dictOrd) {\n    return intersectionWith(dictOrd)(Data_Function[\"const\"]);\n};\nvar insertWith = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (app) {\n        return function (k) {\n            return function (v) {\n                var go = function (v1) {\n                    if (v1 instanceof Leaf) {\n                        return singleton(k)(v);\n                    };\n                    if (v1 instanceof Node) {\n                        var v2 = compare(k)(v1.value2);\n                        if (v2 instanceof Data_Ordering.LT) {\n                            return unsafeBalancedNode(v1.value2, v1.value3, go(v1.value4), v1.value5);\n                        };\n                        if (v2 instanceof Data_Ordering.GT) {\n                            return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go(v1.value5));\n                        };\n                        if (v2 instanceof Data_Ordering.EQ) {\n                            return new Node(v1.value0, v1.value1, k, app(v1.value3)(v), v1.value4, v1.value5);\n                        };\n                        throw new Error(\"Failed pattern match at Data.Map.Internal (line 484, column 7 - line 487, column 44): \" + [ v2.constructor.name ]);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 481, column 8 - line 487, column 44): \" + [ v1.constructor.name ]);\n                };\n                return go;\n            };\n        };\n    };\n};\nvar insert = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        return function (v) {\n            var go = function (v1) {\n                if (v1 instanceof Leaf) {\n                    return singleton(k)(v);\n                };\n                if (v1 instanceof Node) {\n                    var v2 = compare(k)(v1.value2);\n                    if (v2 instanceof Data_Ordering.LT) {\n                        return unsafeBalancedNode(v1.value2, v1.value3, go(v1.value4), v1.value5);\n                    };\n                    if (v2 instanceof Data_Ordering.GT) {\n                        return unsafeBalancedNode(v1.value2, v1.value3, v1.value4, go(v1.value5));\n                    };\n                    if (v2 instanceof Data_Ordering.EQ) {\n                        return new Node(v1.value0, v1.value1, k, v, v1.value4, v1.value5);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 469, column 7 - line 472, column 35): \" + [ v2.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 466, column 8 - line 472, column 35): \" + [ v1.constructor.name ]);\n            };\n            return go;\n        };\n    };\n};\nvar functorMap = {\n    map: function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                return new Node(v.value0, v.value1, v.value2, f(v.value3), go(v.value4), go(v.value5));\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 145, column 10 - line 148, column 39): \" + [ v.constructor.name ]);\n        };\n        return go;\n    }\n};\nvar functorWithIndexMap = {\n    mapWithIndex: function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                return new Node(v.value0, v.value1, v.value2, f(v.value2)(v.value3), go(v.value4), go(v.value5));\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 153, column 10 - line 156, column 41): \" + [ v.constructor.name ]);\n        };\n        return go;\n    },\n    Functor0: function () {\n        return functorMap;\n    }\n};\nvar foldableMap = {\n    foldr: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (m$prime, z$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(170)(m$prime.value4, f(m$prime.value3)($lazy_go(170)(m$prime.value5, z$prime)));\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 167, column 26 - line 170, column 43): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(167);\n            return function (m) {\n                return go(m, z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (z$prime, m$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(176)(f($lazy_go(176)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 173, column 26 - line 176, column 43): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(173);\n            return function (m) {\n                return go(z, m);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return mempty;\n                };\n                if (v instanceof Node) {\n                    return append1(go(v.value4))(append1(f(v.value3))(go(v.value5)));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 179, column 10 - line 182, column 28): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    }\n};\nvar foldableWithIndexMap = {\n    foldrWithIndex: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (m$prime, z$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(190)(m$prime.value4, f(m$prime.value2)(m$prime.value3)($lazy_go(190)(m$prime.value5, z$prime)));\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 187, column 26 - line 190, column 45): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(187);\n            return function (m) {\n                return go(m, z);\n            };\n        };\n    },\n    foldlWithIndex: function (f) {\n        return function (z) {\n            var $lazy_go = $runtime_lazy(\"go\", \"Data.Map.Internal\", function () {\n                return function (z$prime, m$prime) {\n                    if (m$prime instanceof Leaf) {\n                        return z$prime;\n                    };\n                    if (m$prime instanceof Node) {\n                        return $lazy_go(196)(f(m$prime.value2)($lazy_go(196)(z$prime, m$prime.value4))(m$prime.value3), m$prime.value5);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 193, column 26 - line 196, column 45): \" + [ m$prime.constructor.name ]);\n                };\n            });\n            var go = $lazy_go(193);\n            return function (m) {\n                return go(z, m);\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        var mempty = Data_Monoid.mempty(dictMonoid);\n        var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return mempty;\n                };\n                if (v instanceof Node) {\n                    return append1(go(v.value4))(append1(f(v.value2)(v.value3))(go(v.value5)));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 199, column 10 - line 202, column 30): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    },\n    Foldable0: function () {\n        return foldableMap;\n    }\n};\nvar keys = /* #__PURE__ */ (function () {\n    return Data_FoldableWithIndex.foldrWithIndex(foldableWithIndexMap)(function (k) {\n        return function (v) {\n            return function (acc) {\n                return new Data_List_Types.Cons(k, acc);\n            };\n        };\n    })(Data_List_Types.Nil.value);\n})();\nvar traversableMap = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return pure(Leaf.value);\n                };\n                if (v instanceof Node) {\n                    return apply(apply(map1(function (l$prime) {\n                        return function (v$prime) {\n                            return function (r$prime) {\n                                return new Node(v.value0, v.value1, v.value2, v$prime, l$prime, r$prime);\n                            };\n                        };\n                    })(go(v.value4)))(f(v.value3)))(go(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 207, column 10 - line 213, column 19): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableMap)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorMap;\n    },\n    Foldable1: function () {\n        return foldableMap;\n    }\n};\nvar traversableWithIndexMap = {\n    traverseWithIndex: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        return function (f) {\n            var go = function (v) {\n                if (v instanceof Leaf) {\n                    return pure(Leaf.value);\n                };\n                if (v instanceof Node) {\n                    return apply(apply(map1(function (l$prime) {\n                        return function (v$prime) {\n                            return function (r$prime) {\n                                return new Node(v.value0, v.value1, v.value2, v$prime, l$prime, r$prime);\n                            };\n                        };\n                    })(go(v.value4)))(f(v.value2)(v.value3)))(go(v.value5));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 219, column 10 - line 225, column 19): \" + [ v.constructor.name ]);\n            };\n            return go;\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexMap;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexMap;\n    },\n    Traversable2: function () {\n        return traversableMap;\n    }\n};\nvar values = /* #__PURE__ */ (function () {\n    return Data_Foldable.foldr(foldableMap)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);\n})();\nvar foldSubmapBy = function (dictOrd) {\n    var lessThan1 = Data_Ord.lessThan(dictOrd);\n    var greaterThan1 = Data_Ord.greaterThan(dictOrd);\n    var lessThanOrEq1 = Data_Ord.lessThanOrEq(dictOrd);\n    return function (appendFn) {\n        return function (memptyValue) {\n            return function (kmin) {\n                return function (kmax) {\n                    return function (f) {\n                        var tooSmall = (function () {\n                            if (kmin instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThan1(k)(kmin.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](false);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 387, column 7 - line 391, column 22): \" + [ kmin.constructor.name ]);\n                        })();\n                        var tooLarge = (function () {\n                            if (kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return greaterThan1(k)(kmax.value0);\n                                };\n                            };\n                            if (kmax instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](false);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 394, column 7 - line 398, column 22): \" + [ kmax.constructor.name ]);\n                        })();\n                        var inBounds = (function () {\n                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThanOrEq1(kmin.value0)(k) && lessThanOrEq1(k)(kmax.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {\n                                return function (k) {\n                                    return lessThanOrEq1(kmin.value0)(k);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {\n                                return function (k) {\n                                    return lessThanOrEq1(k)(kmax.value0);\n                                };\n                            };\n                            if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {\n                                return Data_Function[\"const\"](true);\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 401, column 7 - line 409, column 21): \" + [ kmin.constructor.name, kmax.constructor.name ]);\n                        })();\n                        var go = function (v) {\n                            if (v instanceof Leaf) {\n                                return memptyValue;\n                            };\n                            if (v instanceof Node) {\n                                return appendFn(appendFn((function () {\n                                    var $640 = tooSmall(v.value2);\n                                    if ($640) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value4);\n                                })())((function () {\n                                    var $641 = inBounds(v.value2);\n                                    if ($641) {\n                                        return f(v.value2)(v.value3);\n                                    };\n                                    return memptyValue;\n                                })()))((function () {\n                                    var $642 = tooLarge(v.value2);\n                                    if ($642) {\n                                        return memptyValue;\n                                    };\n                                    return go(v.value5);\n                                })());\n                            };\n                            throw new Error(\"Failed pattern match at Data.Map.Internal (line 411, column 10 - line 417, column 66): \" + [ v.constructor.name ]);\n                        };\n                        return go;\n                    };\n                };\n            };\n        };\n    };\n};\nvar foldSubmap = function (dictOrd) {\n    var foldSubmapBy1 = foldSubmapBy(dictOrd);\n    return function (dictMonoid) {\n        return foldSubmapBy1(Data_Semigroup.append(dictMonoid.Semigroup0()))(Data_Monoid.mempty(dictMonoid));\n    };\n};\nvar findMin = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v instanceof Leaf) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v instanceof Node) {\n            if (v.value4 instanceof Leaf) {\n                $tco_done = true;\n                return new Data_Maybe.Just({\n                    key: v.value2,\n                    value: v.value3\n                });\n            };\n            $copy_v = v.value4;\n            return;\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 359, column 11 - line 364, column 21): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar lookupGT = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    var v2 = go(v.value4);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    return go(v.value5);\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return findMin(v.value5);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 340, column 7 - line 346, column 25): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 337, column 8 - line 346, column 25): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar findMax = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v instanceof Leaf) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v instanceof Node) {\n            if (v.value5 instanceof Leaf) {\n                $tco_done = true;\n                return new Data_Maybe.Just({\n                    key: v.value2,\n                    value: v.value3\n                });\n            };\n            $copy_v = v.value5;\n            return;\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 350, column 11 - line 355, column 21): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar lookupLT = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    return go(v.value4);\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    var v2 = go(v.value5);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Maybe.Just({\n                            key: v.value2,\n                            value: v.value3\n                        });\n                    };\n                    return v2;\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return findMax(v.value4);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 309, column 7 - line 316, column 21): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 306, column 8 - line 316, column 21): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar filterWithKey = function (dictOrd) {\n    return function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                if (f(v.value2)(v.value3)) {\n                    return unsafeBalancedNode(v.value2, v.value3, go(v.value4), go(v.value5));\n                };\n                if (Data_Boolean.otherwise) {\n                    return unsafeJoinNodes(go(v.value4), go(v.value5));\n                };\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 625, column 8 - line 631, column 47): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar filterKeys = function (dictOrd) {\n    return function (f) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                if (f(v.value2)) {\n                    return unsafeBalancedNode(v.value2, v.value3, go(v.value4), go(v.value5));\n                };\n                if (Data_Boolean.otherwise) {\n                    return unsafeJoinNodes(go(v.value4), go(v.value5));\n                };\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 638, column 8 - line 644, column 47): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar filter = function (dictOrd) {\n    var $769 = filterWithKey(dictOrd);\n    return function ($770) {\n        return $769(Data_Function[\"const\"]($770));\n    };\n};\nvar eqMap = function (dictEq) {\n    var eqMapIter1 = eqMapIter(dictEq);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq(eqMapIter1(dictEq1));\n        return {\n            eq: function (xs) {\n                return function (ys) {\n                    if (xs instanceof Leaf) {\n                        if (ys instanceof Leaf) {\n                            return true;\n                        };\n                        return false;\n                    };\n                    if (xs instanceof Node) {\n                        if (ys instanceof Node && xs.value1 === ys.value1) {\n                            return eq1(toMapIter(xs))(toMapIter(ys));\n                        };\n                        return false;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Map.Internal (line 92, column 14 - line 103, column 16): \" + [ xs.constructor.name ]);\n                };\n            }\n        };\n    };\n};\nvar ordMap = function (dictOrd) {\n    var ordMapIter1 = ordMapIter(dictOrd);\n    var eqMap1 = eqMap(dictOrd.Eq0());\n    return function (dictOrd1) {\n        var compare = Data_Ord.compare(ordMapIter1(dictOrd1));\n        var eqMap2 = eqMap1(dictOrd1.Eq0());\n        return {\n            compare: function (xs) {\n                return function (ys) {\n                    if (xs instanceof Leaf) {\n                        if (ys instanceof Leaf) {\n                            return Data_Ordering.EQ.value;\n                        };\n                        return Data_Ordering.LT.value;\n                    };\n                    if (ys instanceof Leaf) {\n                        return Data_Ordering.GT.value;\n                    };\n                    return compare(toMapIter(xs))(toMapIter(ys));\n                };\n            },\n            Eq0: function () {\n                return eqMap2;\n            }\n        };\n    };\n};\nvar eq1Map = function (dictEq) {\n    var eqMap1 = eqMap(dictEq);\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqMap1(dictEq1));\n        }\n    };\n};\nvar ord1Map = function (dictOrd) {\n    var ordMap1 = ordMap(dictOrd);\n    var eq1Map1 = eq1Map(dictOrd.Eq0());\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordMap1(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Map1;\n        }\n    };\n};\nvar empty = /* #__PURE__ */ (function () {\n    return Leaf.value;\n})();\nvar fromFoldable = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (dictFoldable) {\n        return Data_Foldable.foldl(dictFoldable)(function (m) {\n            return function (v) {\n                return insert1(v.value0)(v.value1)(m);\n            };\n        })(empty);\n    };\n};\nvar fromFoldableWith = function (dictOrd) {\n    var insertWith1 = insertWith(dictOrd);\n    return function (dictFoldable) {\n        var foldl = Data_Foldable.foldl(dictFoldable);\n        return function (f) {\n            var f$prime = insertWith1(Data_Function.flip(f));\n            return foldl(function (m) {\n                return function (v) {\n                    return f$prime(v.value0)(v.value1)(m);\n                };\n            })(empty);\n        };\n    };\n};\nvar fromFoldableWithIndex = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (dictFoldableWithIndex) {\n        return Data_FoldableWithIndex.foldlWithIndex(dictFoldableWithIndex)(function (k) {\n            return function (m) {\n                return function (v) {\n                    return insert1(k)(v)(m);\n                };\n            };\n        })(empty);\n    };\n};\nvar monoidSemigroupMap = function () {\n    return function (dictOrd) {\n        var semigroupMap2 = semigroupMap1(dictOrd);\n        return function (dictSemigroup) {\n            var semigroupMap3 = semigroupMap2(dictSemigroup);\n            return {\n                mempty: empty,\n                Semigroup0: function () {\n                    return semigroupMap3;\n                }\n            };\n        };\n    };\n};\nvar submap = function (dictOrd) {\n    var foldSubmapBy1 = foldSubmapBy(dictOrd);\n    var union1 = union(dictOrd);\n    return function (kmin) {\n        return function (kmax) {\n            return foldSubmapBy1(union1)(empty)(kmin)(kmax)(singleton);\n        };\n    };\n};\nvar unions = function (dictOrd) {\n    var union1 = union(dictOrd);\n    return function (dictFoldable) {\n        return Data_Foldable.foldl(dictFoldable)(union1)(empty);\n    };\n};\nvar difference = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (m1) {\n        return function (m2) {\n            return unsafeDifference(compare, m1, m2);\n        };\n    };\n};\nvar $$delete = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (k) {\n        var go = function (v) {\n            if (v instanceof Leaf) {\n                return Leaf.value;\n            };\n            if (v instanceof Node) {\n                var v1 = compare(k)(v.value2);\n                if (v1 instanceof Data_Ordering.LT) {\n                    return unsafeBalancedNode(v.value2, v.value3, go(v.value4), v.value5);\n                };\n                if (v1 instanceof Data_Ordering.GT) {\n                    return unsafeBalancedNode(v.value2, v.value3, v.value4, go(v.value5));\n                };\n                if (v1 instanceof Data_Ordering.EQ) {\n                    return unsafeJoinNodes(v.value4, v.value5);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 496, column 7 - line 499, column 43): \" + [ v1.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 493, column 8 - line 499, column 43): \" + [ v.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar checkValid = function (dictOrd) {\n    var greaterThan1 = Data_Ord.greaterThan(dictOrd);\n    var lessThan1 = Data_Ord.lessThan(dictOrd);\n    var go = function (v) {\n        if (v instanceof Leaf) {\n            return true;\n        };\n        if (v instanceof Node) {\n            if (v.value4 instanceof Leaf) {\n                if (v.value5 instanceof Leaf) {\n                    return true;\n                };\n                if (v.value5 instanceof Node) {\n                    return v.value0 === 2 && (v.value5.value0 === 1 && (v.value1 > v.value5.value1 && (greaterThan1(v.value5.value2)(v.value2) && go(v.value5))));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 262, column 11 - line 266, column 60): \" + [ v.value5.constructor.name ]);\n            };\n            if (v.value4 instanceof Node) {\n                if (v.value5 instanceof Leaf) {\n                    return v.value0 === 2 && (v.value4.value0 === 1 && (v.value1 > v.value4.value1 && (lessThan1(v.value4.value2)(v.value2) && go(v.value4))));\n                };\n                if (v.value5 instanceof Node) {\n                    return v.value0 > v.value5.value0 && (greaterThan1(v.value5.value2)(v.value2) && (v.value0 > v.value4.value0 && (lessThan1(v.value4.value2)(v.value2) && (abs(v.value5.value0 - v.value4.value0 | 0) < 2 && (((v.value5.value1 + v.value4.value1 | 0) + 1 | 0) === v.value1 && (go(v.value4) && go(v.value5)))))));\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 268, column 11 - line 272, column 108): \" + [ v.value5.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Map.Internal (line 260, column 7 - line 272, column 108): \" + [ v.value4.constructor.name ]);\n        };\n        throw new Error(\"Failed pattern match at Data.Map.Internal (line 257, column 8 - line 272, column 108): \" + [ v.constructor.name ]);\n    };\n    return go;\n};\nvar catMaybes = function (dictOrd) {\n    return mapMaybe(dictOrd)(identity);\n};\nvar applyMap = function (dictOrd) {\n    return {\n        apply: intersectionWith(dictOrd)(identity),\n        Functor0: function () {\n            return functorMap;\n        }\n    };\n};\nvar bindMap = function (dictOrd) {\n    var mapMaybeWithKey1 = mapMaybeWithKey(dictOrd);\n    var lookup1 = lookup(dictOrd);\n    var applyMap1 = applyMap(dictOrd);\n    return {\n        bind: function (m) {\n            return function (f) {\n                return mapMaybeWithKey1(function (k) {\n                    var $771 = lookup1(k);\n                    return function ($772) {\n                        return $771(f($772));\n                    };\n                })(m);\n            };\n        },\n        Apply0: function () {\n            return applyMap1;\n        }\n    };\n};\nvar alter = function (dictOrd) {\n    var compare = Data_Ord.compare(dictOrd);\n    return function (f) {\n        return function (k) {\n            return function (m) {\n                var v = unsafeSplit(compare, k, m);\n                var v2 = f(v.value0);\n                if (v2 instanceof Data_Maybe.Nothing) {\n                    return unsafeJoinNodes(v.value1, v.value2);\n                };\n                if (v2 instanceof Data_Maybe.Just) {\n                    return unsafeBalancedNode(k, v2.value0, v.value1, v.value2);\n                };\n                throw new Error(\"Failed pattern match at Data.Map.Internal (line 512, column 3 - line 516, column 41): \" + [ v2.constructor.name ]);\n            };\n        };\n    };\n};\nvar altMap = function (dictOrd) {\n    return {\n        alt: union(dictOrd),\n        Functor0: function () {\n            return functorMap;\n        }\n    };\n};\nvar plusMap = function (dictOrd) {\n    var altMap1 = altMap(dictOrd);\n    return {\n        empty: empty,\n        Alt0: function () {\n            return altMap1;\n        }\n    };\n};\nexport {\n    Leaf,\n    Node,\n    showTree,\n    empty,\n    isEmpty,\n    singleton,\n    checkValid,\n    insert,\n    insertWith,\n    lookup,\n    lookupLE,\n    lookupLT,\n    lookupGE,\n    lookupGT,\n    findMin,\n    findMax,\n    foldSubmap,\n    submap,\n    fromFoldable,\n    fromFoldableWith,\n    fromFoldableWithIndex,\n    toUnfoldable,\n    toUnfoldableUnordered,\n    $$delete as delete,\n    pop,\n    member,\n    alter,\n    update,\n    keys,\n    values,\n    union,\n    unionWith,\n    unions,\n    intersection,\n    intersectionWith,\n    difference,\n    isSubmap,\n    size,\n    filterWithKey,\n    filterKeys,\n    filter,\n    mapMaybeWithKey,\n    mapMaybe,\n    catMaybes,\n    IterDone,\n    IterNext,\n    toMapIter,\n    stepAsc,\n    stepAscCps,\n    stepDesc,\n    stepDescCps,\n    stepUnordered,\n    stepUnorderedCps,\n    unsafeNode,\n    unsafeBalancedNode,\n    unsafeJoinNodes,\n    unsafeSplit,\n    Split,\n    eq1Map,\n    eqMap,\n    ord1Map,\n    ordMap,\n    showMap,\n    semigroupMap,\n    monoidSemigroupMap,\n    altMap,\n    plusMap,\n    functorMap,\n    functorWithIndexMap,\n    applyMap,\n    bindMap,\n    foldableMap,\n    foldableWithIndexMap,\n    traversableMap,\n    traversableWithIndexMap,\n    eqMapIter,\n    ordMapIter\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Compactable from \"../Data.Compactable/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_List_Types.foldableList);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableArray);\nvar not = /* #__PURE__ */ Data_HeytingAlgebra.not(/* #__PURE__ */ Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean));\nvar toUnfoldable = /* #__PURE__ */ Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList);\nvar partitionMapDefault = function (dictFilterable) {\n    var separate = Data_Compactable.separate(dictFilterable.Compactable0());\n    var map = Data_Functor.map(dictFilterable.Functor1());\n    return function (p) {\n        var $117 = map(p);\n        return function ($118) {\n            return separate($117($118));\n        };\n    };\n};\nvar partitionMap = function (dict) {\n    return dict.partitionMap;\n};\nvar partition = function (dict) {\n    return dict.partition;\n};\nvar maybeBool = function (p) {\n    return function (x) {\n        var $66 = p(x);\n        if ($66) {\n            return new Data_Maybe.Just(x);\n        };\n        return Data_Maybe.Nothing.value;\n    };\n};\nvar filterableList = {\n    partitionMap: function (p) {\n        return function (xs) {\n            var select = function (x) {\n                return function (v) {\n                    var v1 = p(x);\n                    if (v1 instanceof Data_Either.Left) {\n                        return {\n                            left: new Data_List_Types.Cons(v1.value0, v.left),\n                            right: v.right\n                        };\n                    };\n                    if (v1 instanceof Data_Either.Right) {\n                        return {\n                            left: v.left,\n                            right: new Data_List_Types.Cons(v1.value0, v.right)\n                        };\n                    };\n                    throw new Error(\"Failed pattern match at Data.Filterable (line 190, column 36 - line 192, column 83): \" + [ v1.constructor.name ]);\n                };\n            };\n            return foldr(select)({\n                left: Data_List_Types.Nil.value,\n                right: Data_List_Types.Nil.value\n            })(xs);\n        };\n    },\n    partition: function (p) {\n        return function (xs) {\n            var select = function (x) {\n                return function (v) {\n                    var $76 = p(x);\n                    if ($76) {\n                        return {\n                            no: v.no,\n                            yes: new Data_List_Types.Cons(x, v.yes)\n                        };\n                    };\n                    return {\n                        no: new Data_List_Types.Cons(x, v.no),\n                        yes: v.yes\n                    };\n                };\n            };\n            return foldr(select)({\n                no: Data_List_Types.Nil.value,\n                yes: Data_List_Types.Nil.value\n            })(xs);\n        };\n    },\n    filterMap: function (p) {\n        return Data_List.mapMaybe(p);\n    },\n    filter: Data_List.filter,\n    Compactable0: function () {\n        return Data_Compactable.compactableList;\n    },\n    Functor1: function () {\n        return Data_List_Types.functorList;\n    }\n};\nvar filterableArray = {\n    partitionMap: function (p) {\n        var go = function (acc) {\n            return function (x) {\n                var v = p(x);\n                if (v instanceof Data_Either.Left) {\n                    return {\n                        left: append(acc.left)([ v.value0 ]),\n                        right: acc.right\n                    };\n                };\n                if (v instanceof Data_Either.Right) {\n                    return {\n                        right: append(acc.right)([ v.value0 ]),\n                        left: acc.left\n                    };\n                };\n                throw new Error(\"Failed pattern match at Data.Filterable (line 149, column 16 - line 151, column 50): \" + [ v.constructor.name ]);\n            };\n        };\n        return foldl(go)({\n            left: [  ],\n            right: [  ]\n        });\n    },\n    partition: Data_Array.partition,\n    filterMap: Data_Array.mapMaybe,\n    filter: Data_Array.filter,\n    Compactable0: function () {\n        return Data_Compactable.compactableArray;\n    },\n    Functor1: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar filterMapDefault = function (dictFilterable) {\n    var compact = Data_Compactable.compact(dictFilterable.Compactable0());\n    var map = Data_Functor.map(dictFilterable.Functor1());\n    return function (p) {\n        var $119 = map(p);\n        return function ($120) {\n            return compact($119($120));\n        };\n    };\n};\nvar filterMap = function (dict) {\n    return dict.filterMap;\n};\nvar partitionDefaultFilterMap = function (dictFilterable) {\n    var filterMap1 = filterMap(dictFilterable);\n    return function (p) {\n        return function (xs) {\n            return {\n                yes: filterMap1(maybeBool(p))(xs),\n                no: filterMap1(maybeBool(not(p)))(xs)\n            };\n        };\n    };\n};\nvar filterDefaultPartition = function (dictFilterable) {\n    var partition1 = partition(dictFilterable);\n    return function (p) {\n        return function (xs) {\n            return (partition1(p)(xs)).yes;\n        };\n    };\n};\nvar filterDefault = function (dictFilterable) {\n    var $121 = filterMap(dictFilterable);\n    return function ($122) {\n        return $121(maybeBool($122));\n    };\n};\nvar filter = function (dict) {\n    return dict.filter;\n};\nvar partitionDefaultFilter = function (dictFilterable) {\n    var filter1 = filter(dictFilterable);\n    return function (p) {\n        return function (xs) {\n            return {\n                yes: filter1(p)(xs),\n                no: filter1(not(p))(xs)\n            };\n        };\n    };\n};\nvar eitherBool = function (p) {\n    return function (x) {\n        var $84 = p(x);\n        if ($84) {\n            return new Data_Either.Right(x);\n        };\n        return new Data_Either.Left(x);\n    };\n};\nvar filterDefaultPartitionMap = function (dictFilterable) {\n    var partitionMap1 = partitionMap(dictFilterable);\n    return function (p) {\n        return function (xs) {\n            return (partitionMap1(eitherBool(p))(xs)).right;\n        };\n    };\n};\nvar partitionDefault = function (dictFilterable) {\n    var partitionMap1 = partitionMap(dictFilterable);\n    return function (p) {\n        return function (xs) {\n            var o = partitionMap1(eitherBool(p))(xs);\n            return {\n                no: o.left,\n                yes: o.right\n            };\n        };\n    };\n};\nvar filterableEither = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var compactableEither = Data_Compactable.compactableEither(dictMonoid);\n    return {\n        partitionMap: function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return {\n                        left: new Data_Either.Left(v1.value0),\n                        right: new Data_Either.Left(v1.value0)\n                    };\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    var v2 = v(v1.value0);\n                    if (v2 instanceof Data_Either.Left) {\n                        return {\n                            left: new Data_Either.Right(v2.value0),\n                            right: new Data_Either.Left(mempty)\n                        };\n                    };\n                    if (v2 instanceof Data_Either.Right) {\n                        return {\n                            left: new Data_Either.Left(mempty),\n                            right: new Data_Either.Right(v2.value0)\n                        };\n                    };\n                    throw new Error(\"Failed pattern match at Data.Filterable (line 173, column 30 - line 175, column 53): \" + [ v2.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Filterable (line 171, column 1 - line 184, column 29): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        },\n        partition: function (p) {\n            return partitionDefault(filterableEither(dictMonoid))(p);\n        },\n        filterMap: function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return new Data_Either.Left(v1.value0);\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    var v2 = v(v1.value0);\n                    if (v2 instanceof Data_Maybe.Nothing) {\n                        return new Data_Either.Left(mempty);\n                    };\n                    if (v2 instanceof Data_Maybe.Just) {\n                        return new Data_Either.Right(v2.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Filterable (line 180, column 27 - line 182, column 22): \" + [ v2.constructor.name ]);\n                };\n                throw new Error(\"Failed pattern match at Data.Filterable (line 171, column 1 - line 184, column 29): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        },\n        filter: function (p) {\n            return filterDefault(filterableEither(dictMonoid))(p);\n        },\n        Compactable0: function () {\n            return compactableEither;\n        },\n        Functor1: function () {\n            return Data_Either.functorEither;\n        }\n    };\n};\nvar filterableMap = function (dictOrd) {\n    var insert = Data_Map_Internal.insert(dictOrd);\n    var alter = Data_Map_Internal.alter(dictOrd);\n    var compactableMap = Data_Compactable.compactableMap(dictOrd);\n    return {\n        partitionMap: function (p) {\n            return function (xs) {\n                var select = function (v) {\n                    return function (v1) {\n                        var v2 = p(v.value1);\n                        if (v2 instanceof Data_Either.Left) {\n                            return {\n                                left: insert(v.value0)(v2.value0)(v1.left),\n                                right: v1.right\n                            };\n                        };\n                        if (v2 instanceof Data_Either.Right) {\n                            return {\n                                left: v1.left,\n                                right: insert(v.value0)(v2.value0)(v1.right)\n                            };\n                        };\n                        throw new Error(\"Failed pattern match at Data.Filterable (line 215, column 44 - line 217, column 57): \" + [ v2.constructor.name ]);\n                    };\n                };\n                return foldr(select)({\n                    left: Data_Map_Internal.empty,\n                    right: Data_Map_Internal.empty\n                })(toUnfoldable(xs));\n            };\n        },\n        partition: function (p) {\n            return partitionDefault(filterableMap(dictOrd))(p);\n        },\n        filterMap: function (p) {\n            return function (xs) {\n                var select = function (v) {\n                    return function (m) {\n                        return alter(Data_Function[\"const\"](p(v.value1)))(v.value0)(m);\n                    };\n                };\n                return foldr(select)(Data_Map_Internal.empty)(toUnfoldable(xs));\n            };\n        },\n        filter: function (p) {\n            return filterDefault(filterableMap(dictOrd))(p);\n        },\n        Compactable0: function () {\n            return compactableMap;\n        },\n        Functor1: function () {\n            return Data_Map_Internal.functorMap;\n        }\n    };\n};\nvar filterableMaybe = {\n    partitionMap: function (v) {\n        return function (v1) {\n            if (v1 instanceof Data_Maybe.Nothing) {\n                return {\n                    left: Data_Maybe.Nothing.value,\n                    right: Data_Maybe.Nothing.value\n                };\n            };\n            if (v1 instanceof Data_Maybe.Just) {\n                var v2 = v(v1.value0);\n                if (v2 instanceof Data_Either.Left) {\n                    return {\n                        left: new Data_Maybe.Just(v2.value0),\n                        right: Data_Maybe.Nothing.value\n                    };\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return {\n                        left: Data_Maybe.Nothing.value,\n                        right: new Data_Maybe.Just(v2.value0)\n                    };\n                };\n                throw new Error(\"Failed pattern match at Data.Filterable (line 161, column 29 - line 163, column 48): \" + [ v2.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Filterable (line 159, column 1 - line 169, column 29): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    partition: function (p) {\n        return partitionDefault(filterableMaybe)(p);\n    },\n    filterMap: /* #__PURE__ */ Control_Bind.bindFlipped(Data_Maybe.bindMaybe),\n    filter: function (p) {\n        return filterDefault(filterableMaybe)(p);\n    },\n    Compactable0: function () {\n        return Data_Compactable.compactableMaybe;\n    },\n    Functor1: function () {\n        return Data_Maybe.functorMaybe;\n    }\n};\nvar cleared = function (dictFilterable) {\n    return filterMap(dictFilterable)(Data_Function[\"const\"](Data_Maybe.Nothing.value));\n};\nexport {\n    partitionMap,\n    partition,\n    filterMap,\n    filter,\n    eitherBool,\n    partitionDefault,\n    partitionDefaultFilter,\n    partitionDefaultFilterMap,\n    partitionMapDefault,\n    maybeBool,\n    filterDefault,\n    filterDefaultPartition,\n    filterDefaultPartitionMap,\n    filterMapDefault,\n    cleared,\n    filterableArray,\n    filterableMaybe,\n    filterableEither,\n    filterableList,\n    filterableMap\n};\nexport {\n    compact,\n    separate\n} from \"../Data.Compactable/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar foldMap = /* #__PURE__ */ Data_Foldable.foldMap(Data_List_Types.foldableList);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_List_Types.foldableList);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_List_Types.foldableList);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar $$Set = function (x) {\n    return x;\n};\nvar union = function (dictOrd) {\n    return coerce(Data_Map_Internal.union(dictOrd));\n};\nvar toggle = function (dictOrd) {\n    var alter = Data_Map_Internal.alter(dictOrd);\n    return function (a) {\n        return function (v) {\n            return alter(Data_Maybe.maybe(new Data_Maybe.Just(Data_Unit.unit))(function (v1) {\n                return Data_Maybe.Nothing.value;\n            }))(a)(v);\n        };\n    };\n};\nvar toMap = function (v) {\n    return v;\n};\nvar toList = function (v) {\n    return Data_Map_Internal.keys(v);\n};\nvar toUnfoldable = function (dictUnfoldable) {\n    var $96 = Data_List.toUnfoldable(dictUnfoldable);\n    return function ($97) {\n        return $96(toList($97));\n    };\n};\nvar toUnfoldable1 = /* #__PURE__ */ toUnfoldable(Data_Unfoldable.unfoldableArray);\nvar size = /* #__PURE__ */ coerce(Data_Map_Internal.size);\nvar singleton = function (a) {\n    return Data_Map_Internal.singleton(a)(Data_Unit.unit);\n};\nvar showSet = function (dictShow) {\n    var show = Data_Show.show(Data_Show.showArray(dictShow));\n    return {\n        show: function (s) {\n            return \"(fromFoldable \" + (show(toUnfoldable1(s)) + \")\");\n        }\n    };\n};\nvar semigroupSet = function (dictOrd) {\n    return {\n        append: union(dictOrd)\n    };\n};\nvar member = function (dictOrd) {\n    return coerce(Data_Map_Internal.member(dictOrd));\n};\nvar isEmpty = /* #__PURE__ */ coerce(Data_Map_Internal.isEmpty);\nvar intersection = function (dictOrd) {\n    return coerce(Data_Map_Internal.intersection(dictOrd));\n};\nvar insert = function (dictOrd) {\n    var insert1 = Data_Map_Internal.insert(dictOrd);\n    return function (a) {\n        return function (v) {\n            return insert1(a)(Data_Unit.unit)(v);\n        };\n    };\n};\nvar fromMap = $$Set;\nvar foldableSet = {\n    foldMap: function (dictMonoid) {\n        var foldMap1 = foldMap(dictMonoid);\n        return function (f) {\n            var $98 = foldMap1(f);\n            return function ($99) {\n                return $98(toList($99));\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (x) {\n            var $100 = foldl(f)(x);\n            return function ($101) {\n                return $100(toList($101));\n            };\n        };\n    },\n    foldr: function (f) {\n        return function (x) {\n            var $102 = foldr(f)(x);\n            return function ($103) {\n                return $102(toList($103));\n            };\n        };\n    }\n};\nvar foldl1 = /* #__PURE__ */ Data_Foldable.foldl(foldableSet);\nvar foldr1 = /* #__PURE__ */ Data_Foldable.foldr(foldableSet);\nvar findMin = function (v) {\n    return map1(function (v1) {\n        return v1.key;\n    })(Data_Map_Internal.findMin(v));\n};\nvar findMax = function (v) {\n    return map1(function (v1) {\n        return v1.key;\n    })(Data_Map_Internal.findMax(v));\n};\nvar filter = function (dictOrd) {\n    return coerce(Data_Map_Internal.filterKeys(dictOrd));\n};\nvar eqSet = function (dictEq) {\n    var eq = Data_Eq.eq(Data_Map_Internal.eqMap(dictEq)(Data_Eq.eqUnit));\n    return {\n        eq: function (v) {\n            return function (v1) {\n                return eq(v)(v1);\n            };\n        }\n    };\n};\nvar ordSet = function (dictOrd) {\n    var compare = Data_Ord.compare(Data_List_Types.ordList(dictOrd));\n    var eqSet1 = eqSet(dictOrd.Eq0());\n    return {\n        compare: function (s1) {\n            return function (s2) {\n                return compare(toList(s1))(toList(s2));\n            };\n        },\n        Eq0: function () {\n            return eqSet1;\n        }\n    };\n};\nvar eq1Set = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqSet(dictEq));\n    }\n};\nvar ord1Set = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordSet(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Set;\n    }\n};\nvar empty = Data_Map_Internal.empty;\nvar fromFoldable = function (dictFoldable) {\n    var foldl2 = Data_Foldable.foldl(dictFoldable);\n    return function (dictOrd) {\n        var insert1 = insert(dictOrd);\n        return foldl2(function (m) {\n            return function (a) {\n                return insert1(a)(m);\n            };\n        })(empty);\n    };\n};\nvar map = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (f) {\n        return foldl1(function (m) {\n            return function (a) {\n                return insert1(f(a))(m);\n            };\n        })(empty);\n    };\n};\nvar mapMaybe = function (dictOrd) {\n    var insert1 = insert(dictOrd);\n    return function (f) {\n        return foldr1(function (a) {\n            return function (acc) {\n                return Data_Maybe.maybe(acc)(function (b) {\n                    return insert1(b)(acc);\n                })(f(a));\n            };\n        })(empty);\n    };\n};\nvar monoidSet = function (dictOrd) {\n    var semigroupSet1 = semigroupSet(dictOrd);\n    return {\n        mempty: empty,\n        Semigroup0: function () {\n            return semigroupSet1;\n        }\n    };\n};\nvar unions = function (dictFoldable) {\n    var foldl2 = Data_Foldable.foldl(dictFoldable);\n    return function (dictOrd) {\n        return foldl2(union(dictOrd))(empty);\n    };\n};\nvar difference = function (dictOrd) {\n    return coerce(Data_Map_Internal.difference(dictOrd));\n};\nvar subset = function (dictOrd) {\n    var difference1 = difference(dictOrd);\n    return function (s1) {\n        return function (s2) {\n            return isEmpty(difference1(s1)(s2));\n        };\n    };\n};\nvar properSubset = function (dictOrd) {\n    var subset1 = subset(dictOrd);\n    return function (s1) {\n        return function (s2) {\n            return size(s1) !== size(s2) && subset1(s1)(s2);\n        };\n    };\n};\nvar $$delete = function (dictOrd) {\n    return coerce(Data_Map_Internal[\"delete\"](dictOrd));\n};\nvar checkValid = function (dictOrd) {\n    return coerce(Data_Map_Internal.checkValid(dictOrd));\n};\nvar catMaybes = function (dictOrd) {\n    return mapMaybe(dictOrd)(identity);\n};\nexport {\n    fromFoldable,\n    toUnfoldable,\n    empty,\n    isEmpty,\n    singleton,\n    map,\n    checkValid,\n    insert,\n    member,\n    $$delete as delete,\n    toggle,\n    size,\n    findMin,\n    findMax,\n    union,\n    unions,\n    difference,\n    subset,\n    properSubset,\n    intersection,\n    filter,\n    mapMaybe,\n    catMaybes,\n    toMap,\n    fromMap,\n    eqSet,\n    eq1Set,\n    showSet,\n    ordSet,\n    ord1Set,\n    monoidSet,\n    semigroupSet,\n    foldableSet\n};\n", "/* no-redeclare global exports */\nexport function setTimeoutImpl(ms) {\n  return function (fn) {\n    return function () {\n      return setTimeout(fn, ms);\n    };\n  };\n}\n\nexport function clearTimeoutImpl(id) {\n  return function () {\n    clearTimeout(id);\n  };\n}\n\nexport function setIntervalImpl(ms) {\n  return function (fn) {\n    return function () {\n      return setInterval(fn, ms);\n    };\n  };\n}\n\nexport function clearIntervalImpl(id) {\n  return function () {\n    clearInterval(id);\n  };\n}\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nvar compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar TimeoutId = function (x) {\n    return x;\n};\nvar IntervalId = function (x) {\n    return x;\n};\nvar setTimeout = $foreign.setTimeoutImpl;\nvar setInterval = $foreign.setIntervalImpl;\nvar eqTimeoutId = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar ordTimeoutId = {\n    compare: function (x) {\n        return function (y) {\n            return compare(x)(y);\n        };\n    },\n    Eq0: function () {\n        return eqTimeoutId;\n    }\n};\nvar eqIntervalId = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar ordIntervalId = {\n    compare: function (x) {\n        return function (y) {\n            return compare(x)(y);\n        };\n    },\n    Eq0: function () {\n        return eqIntervalId;\n    }\n};\nvar clearTimeout = $foreign.clearTimeoutImpl;\nvar clearInterval = $foreign.clearIntervalImpl;\nexport {\n    setTimeout,\n    clearTimeout,\n    setInterval,\n    clearInterval,\n    eqTimeoutId,\n    ordTimeoutId,\n    eqIntervalId,\n    ordIntervalId\n};\n", "export const mkEffectFn1 = function mkEffectFn1(fn) {\n  return function(x) {\n    return fn(x)();\n  };\n};\n\nexport const mkEffectFn2 = function mkEffectFn2(fn) {\n  return function(a, b) {\n    return fn(a)(b)();\n  };\n};\n\nexport const mkEffectFn3 = function mkEffectFn3(fn) {\n  return function(a, b, c) {\n    return fn(a)(b)(c)();\n  };\n};\n\nexport const mkEffectFn4 = function mkEffectFn4(fn) {\n  return function(a, b, c, d) {\n    return fn(a)(b)(c)(d)();\n  };\n};\n\nexport const mkEffectFn5 = function mkEffectFn5(fn) {\n  return function(a, b, c, d, e) {\n    return fn(a)(b)(c)(d)(e)();\n  };\n};\n\nexport const mkEffectFn6 = function mkEffectFn6(fn) {\n  return function(a, b, c, d, e, f) {\n    return fn(a)(b)(c)(d)(e)(f)();\n  };\n};\n\nexport const mkEffectFn7 = function mkEffectFn7(fn) {\n  return function(a, b, c, d, e, f, g) {\n    return fn(a)(b)(c)(d)(e)(f)(g)();\n  };\n};\n\nexport const mkEffectFn8 = function mkEffectFn8(fn) {\n  return function(a, b, c, d, e, f, g, h) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)();\n  };\n};\n\nexport const mkEffectFn9 = function mkEffectFn9(fn) {\n  return function(a, b, c, d, e, f, g, h, i) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)();\n  };\n};\n\nexport const mkEffectFn10 = function mkEffectFn10(fn) {\n  return function(a, b, c, d, e, f, g, h, i, j) {\n    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)();\n  };\n};\n\nexport const runEffectFn1 = function runEffectFn1(fn) {\n  return function(a) {\n    return function() {\n      return fn(a);\n    };\n  };\n};\n\nexport const runEffectFn2 = function runEffectFn2(fn) {\n  return function(a) {\n    return function(b) {\n      return function() {\n        return fn(a, b);\n      };\n    };\n  };\n};\n\nexport const runEffectFn3 = function runEffectFn3(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function() {\n          return fn(a, b, c);\n        };\n      };\n    };\n  };\n};\n\nexport const runEffectFn4 = function runEffectFn4(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function() {\n            return fn(a, b, c, d);\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runEffectFn5 = function runEffectFn5(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function() {\n              return fn(a, b, c, d, e);\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runEffectFn6 = function runEffectFn6(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function() {\n                return fn(a, b, c, d, e, f);\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runEffectFn7 = function runEffectFn7(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function() {\n                  return fn(a, b, c, d, e, f, g);\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runEffectFn8 = function runEffectFn8(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function() {\n                    return fn(a, b, c, d, e, f, g, h);\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runEffectFn9 = function runEffectFn9(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function(i) {\n                    return function() {\n                      return fn(a, b, c, d, e, f, g, h, i);\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const runEffectFn10 = function runEffectFn10(fn) {\n  return function(a) {\n    return function(b) {\n      return function(c) {\n        return function(d) {\n          return function(e) {\n            return function(f) {\n              return function(g) {\n                return function(h) {\n                  return function(i) {\n                    return function(j) {\n                      return function() {\n                        return fn(a, b, c, d, e, f, g, h, i, j);\n                      };\n                    };\n                  };\n                };\n              };\n            };\n          };\n        };\n      };\n    };\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar semigroupEffectFn9 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn9(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return function (d) {\n                                return function (e) {\n                                    return function (f) {\n                                        return function (g) {\n                                            return function (h) {\n                                                return function (i) {\n                                                    return append($foreign.runEffectFn9(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i))($foreign.runEffectFn9(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i));\n                                                };\n                                            };\n                                        };\n                                    };\n                                };\n                            };\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn8 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn8(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return function (d) {\n                                return function (e) {\n                                    return function (f) {\n                                        return function (g) {\n                                            return function (h) {\n                                                return append($foreign.runEffectFn8(f1)(a)(b)(c)(d)(e)(f)(g)(h))($foreign.runEffectFn8(f2)(a)(b)(c)(d)(e)(f)(g)(h));\n                                            };\n                                        };\n                                    };\n                                };\n                            };\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn7 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn7(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return function (d) {\n                                return function (e) {\n                                    return function (f) {\n                                        return function (g) {\n                                            return append($foreign.runEffectFn7(f1)(a)(b)(c)(d)(e)(f)(g))($foreign.runEffectFn7(f2)(a)(b)(c)(d)(e)(f)(g));\n                                        };\n                                    };\n                                };\n                            };\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn6 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn6(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return function (d) {\n                                return function (e) {\n                                    return function (f) {\n                                        return append($foreign.runEffectFn6(f1)(a)(b)(c)(d)(e)(f))($foreign.runEffectFn6(f2)(a)(b)(c)(d)(e)(f));\n                                    };\n                                };\n                            };\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn5 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn5(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return function (d) {\n                                return function (e) {\n                                    return append($foreign.runEffectFn5(f1)(a)(b)(c)(d)(e))($foreign.runEffectFn5(f2)(a)(b)(c)(d)(e));\n                                };\n                            };\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn4 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn4(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return function (d) {\n                                return append($foreign.runEffectFn4(f1)(a)(b)(c)(d))($foreign.runEffectFn4(f2)(a)(b)(c)(d));\n                            };\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn3 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn3(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return append($foreign.runEffectFn3(f1)(a)(b)(c))($foreign.runEffectFn3(f2)(a)(b)(c));\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn2 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn2(function (a) {\n                    return function (b) {\n                        return append($foreign.runEffectFn2(f1)(a)(b))($foreign.runEffectFn2(f2)(a)(b));\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn10 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn10(function (a) {\n                    return function (b) {\n                        return function (c) {\n                            return function (d) {\n                                return function (e) {\n                                    return function (f) {\n                                        return function (g) {\n                                            return function (h) {\n                                                return function (i) {\n                                                    return function (j) {\n                                                        return append($foreign.runEffectFn10(f1)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j))($foreign.runEffectFn10(f2)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j));\n                                                    };\n                                                };\n                                            };\n                                        };\n                                    };\n                                };\n                            };\n                        };\n                    };\n                });\n            };\n        }\n    };\n};\nvar semigroupEffectFn1 = function (dictSemigroup) {\n    var append = Data_Semigroup.append(Effect.semigroupEffect(dictSemigroup));\n    return {\n        append: function (f1) {\n            return function (f2) {\n                return $foreign.mkEffectFn1(function (a) {\n                    return append($foreign.runEffectFn1(f1)(a))($foreign.runEffectFn1(f2)(a));\n                });\n            };\n        }\n    };\n};\nvar monoidEffectFn9 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn91 = semigroupEffectFn9(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn9(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return function (v3) {\n                        return function (v4) {\n                            return function (v5) {\n                                return function (v6) {\n                                    return function (v7) {\n                                        return function (v8) {\n                                            return mempty;\n                                        };\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn91;\n        }\n    };\n};\nvar monoidEffectFn8 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn81 = semigroupEffectFn8(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn8(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return function (v3) {\n                        return function (v4) {\n                            return function (v5) {\n                                return function (v6) {\n                                    return function (v7) {\n                                        return mempty;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn81;\n        }\n    };\n};\nvar monoidEffectFn7 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn71 = semigroupEffectFn7(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn7(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return function (v3) {\n                        return function (v4) {\n                            return function (v5) {\n                                return function (v6) {\n                                    return mempty;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn71;\n        }\n    };\n};\nvar monoidEffectFn6 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn61 = semigroupEffectFn6(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn6(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return function (v3) {\n                        return function (v4) {\n                            return function (v5) {\n                                return mempty;\n                            };\n                        };\n                    };\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn61;\n        }\n    };\n};\nvar monoidEffectFn5 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn51 = semigroupEffectFn5(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn5(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return function (v3) {\n                        return function (v4) {\n                            return mempty;\n                        };\n                    };\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn51;\n        }\n    };\n};\nvar monoidEffectFn4 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn41 = semigroupEffectFn4(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn4(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return function (v3) {\n                        return mempty;\n                    };\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn41;\n        }\n    };\n};\nvar monoidEffectFn3 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn31 = semigroupEffectFn3(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn3(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return mempty;\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn31;\n        }\n    };\n};\nvar monoidEffectFn2 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn21 = semigroupEffectFn2(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn2(function (v) {\n            return function (v1) {\n                return mempty;\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn21;\n        }\n    };\n};\nvar monoidEffectFn10 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn101 = semigroupEffectFn10(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn10(function (v) {\n            return function (v1) {\n                return function (v2) {\n                    return function (v3) {\n                        return function (v4) {\n                            return function (v5) {\n                                return function (v6) {\n                                    return function (v7) {\n                                        return function (v8) {\n                                            return function (v9) {\n                                                return mempty;\n                                            };\n                                        };\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn101;\n        }\n    };\n};\nvar monoidEffectFn1 = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(Effect.monoidEffect(dictMonoid));\n    var semigroupEffectFn11 = semigroupEffectFn1(dictMonoid.Semigroup0());\n    return {\n        mempty: $foreign.mkEffectFn1(function (v) {\n            return mempty;\n        }),\n        Semigroup0: function () {\n            return semigroupEffectFn11;\n        }\n    };\n};\nexport {\n    mkEffectFn1,\n    mkEffectFn2,\n    mkEffectFn3,\n    mkEffectFn4,\n    mkEffectFn5,\n    mkEffectFn6,\n    mkEffectFn7,\n    mkEffectFn8,\n    mkEffectFn9,\n    mkEffectFn10,\n    runEffectFn1,\n    runEffectFn2,\n    runEffectFn3,\n    runEffectFn4,\n    runEffectFn5,\n    runEffectFn6,\n    runEffectFn7,\n    runEffectFn8,\n    runEffectFn9,\n    runEffectFn10\n} from \"./foreign.js\";\nexport {\n    semigroupEffectFn1,\n    semigroupEffectFn2,\n    semigroupEffectFn3,\n    semigroupEffectFn4,\n    semigroupEffectFn5,\n    semigroupEffectFn6,\n    semigroupEffectFn7,\n    semigroupEffectFn8,\n    semigroupEffectFn9,\n    semigroupEffectFn10,\n    monoidEffectFn1,\n    monoidEffectFn2,\n    monoidEffectFn3,\n    monoidEffectFn4,\n    monoidEffectFn5,\n    monoidEffectFn6,\n    monoidEffectFn7,\n    monoidEffectFn8,\n    monoidEffectFn9,\n    monoidEffectFn10\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Compactable from \"../Data.Compactable/index.js\";\nimport * as Data_Filterable from \"../Data.Filterable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_Maybe.applicativeMaybe);\nvar sampleOnRight = function (dict) {\n    return dict.sampleOnRight;\n};\nvar sampleOnRightOp = function (dictIsEvent) {\n    var sampleOnRight1 = sampleOnRight(dictIsEvent);\n    var map1 = Data_Functor.map((dictIsEvent.Filterable1()).Functor1());\n    return function (ef) {\n        return function (ea) {\n            return sampleOnRight1(ef)(map1(Data_Function.applyFlipped)(ea));\n        };\n    };\n};\nvar sampleOnRight_ = function (dictIsEvent) {\n    var sampleOnRight1 = sampleOnRight(dictIsEvent);\n    var map1 = Data_Functor.map((dictIsEvent.Filterable1()).Functor1());\n    return function (a) {\n        return function (b) {\n            return sampleOnRight1(a)(map1(Data_Function[\"const\"](identity))(b));\n        };\n    };\n};\nvar sampleOnLeft = function (dict) {\n    return dict.sampleOnLeft;\n};\nvar sampleOnLeftOp = function (dictIsEvent) {\n    var sampleOnLeft1 = sampleOnLeft(dictIsEvent);\n    var map1 = Data_Functor.map((dictIsEvent.Filterable1()).Functor1());\n    return function (ef) {\n        return function (ea) {\n            return sampleOnLeft1(ef)(map1(Data_Function.applyFlipped)(ea));\n        };\n    };\n};\nvar sampleOnLeft_ = function (dictIsEvent) {\n    var sampleOnLeft1 = sampleOnLeft(dictIsEvent);\n    var map1 = Data_Functor.map((dictIsEvent.Filterable1()).Functor1());\n    return function (a) {\n        return function (b) {\n            return sampleOnLeft1(a)(map1(Data_Function[\"const\"])(b));\n        };\n    };\n};\nvar keepLatest = function (dict) {\n    return dict.keepLatest;\n};\nvar gateBy = function (dictIsEvent) {\n    var Filterable1 = dictIsEvent.Filterable1();\n    var compact = Data_Compactable.compact(Filterable1.Compactable0());\n    var sampleOnRightOp1 = sampleOnRightOp(dictIsEvent);\n    var map1 = Data_Functor.map(Filterable1.Functor1());\n    var Alternative0 = dictIsEvent.Alternative0();\n    var alt = Control_Alt.alt((Alternative0.Plus1()).Alt0());\n    var pure1 = Control_Applicative.pure(Alternative0.Applicative0());\n    return function (f) {\n        return function (sampled) {\n            return function (sampler) {\n                return compact(sampleOnRightOp1(map1(function (p) {\n                    return function (x) {\n                        var $80 = f(p)(x);\n                        if ($80) {\n                            return new Data_Maybe.Just(x);\n                        };\n                        return Data_Maybe.Nothing.value;\n                    };\n                })(alt(pure1(Data_Maybe.Nothing.value))(map1(Data_Maybe.Just.create)(sampled))))(sampler));\n            };\n        };\n    };\n};\nvar gate = function (dictIsEvent) {\n    return gateBy(dictIsEvent)(function (x) {\n        return function (v) {\n            return Data_Maybe.fromMaybe(false)(x);\n        };\n    });\n};\nvar fix = function (dict) {\n    return dict.fix;\n};\nvar fold = function (dictIsEvent) {\n    var fix1 = fix(dictIsEvent);\n    var sampleOnRight1 = sampleOnRight(dictIsEvent);\n    var Alternative0 = dictIsEvent.Alternative0();\n    var alt = Control_Alt.alt((Alternative0.Plus1()).Alt0());\n    var pure1 = Control_Applicative.pure(Alternative0.Applicative0());\n    var map1 = Data_Functor.map((dictIsEvent.Filterable1()).Functor1());\n    return function (f) {\n        return function (b) {\n            return function (e) {\n                return fix1(function (i) {\n                    return sampleOnRight1(alt(i)(pure1(b)))(map1(Data_Function.flip(f))(e));\n                });\n            };\n        };\n    };\n};\nvar folded = function (dictIsEvent) {\n    var fold1 = fold(dictIsEvent);\n    return function (dictMonoid) {\n        return fold1(Data_Semigroup.append(dictMonoid.Semigroup0()))(Data_Monoid.mempty(dictMonoid));\n    };\n};\nvar mapAccum = function (dictIsEvent) {\n    var filterMap = Data_Filterable.filterMap(dictIsEvent.Filterable1());\n    var fold1 = fold(dictIsEvent);\n    return function (f) {\n        return function (acc) {\n            return function (xs) {\n                return filterMap(Data_Tuple.snd)(fold1(function (v) {\n                    return function (b) {\n                        return map(pure)(f(v.value0)(b));\n                    };\n                })(new Data_Tuple.Tuple(acc, Data_Maybe.Nothing.value))(xs));\n            };\n        };\n    };\n};\nvar withLast = function (dictIsEvent) {\n    var filterMap = Data_Filterable.filterMap(dictIsEvent.Filterable1());\n    var fold1 = fold(dictIsEvent);\n    return function (e) {\n        var step = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just({\n                        now: v1,\n                        last: Data_Maybe.Nothing.value\n                    });\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just({\n                        now: v1,\n                        last: new Data_Maybe.Just(v.value0.now)\n                    });\n                };\n                throw new Error(\"Failed pattern match at FRP.Event.Class (line 83, column 3 - line 83, column 50): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return filterMap(identity)(fold1(step)(Data_Maybe.Nothing.value)(e));\n    };\n};\nvar count = function (dictIsEvent) {\n    return fold(dictIsEvent)(function (n) {\n        return function (v) {\n            return n + 1 | 0;\n        };\n    })(0);\n};\nvar applyOp = function (dictApplicative) {\n    var Apply0 = dictApplicative.Apply0();\n    var apply = Control_Apply.apply(Apply0);\n    var map1 = Data_Functor.map(Apply0.Functor0());\n    return function (ea) {\n        return function (ef) {\n            return apply(map1(Data_Function.applyFlipped)(ea))(ef);\n        };\n    };\n};\nexport {\n    fold,\n    folded,\n    count,\n    mapAccum,\n    withLast,\n    sampleOnRight,\n    sampleOnRightOp,\n    sampleOnRight_,\n    sampleOnLeft,\n    sampleOnLeftOp,\n    sampleOnLeft_,\n    applyOp,\n    keepLatest,\n    fix,\n    gate,\n    gateBy\n};\nexport {\n    filterMap\n} from \"../Data.Filterable/index.js\";\n", "export function reallyUnsafeRefEq(a) {\n  return function (b) {\n    return a === b;\n  };\n}\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nvar UnsafeRefEqFallback = function (x) {\n    return x;\n};\nvar UnsafeRefEq = function (x) {\n    return x;\n};\nvar unsafeRefEq = $foreign.reallyUnsafeRefEq;\nvar eqUnsafeRefEqFallback = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return {\n        eq: function (v) {\n            return function (v1) {\n                return unsafeRefEq(v)(v1) || eq(v)(v1);\n            };\n        }\n    };\n};\nvar eqUnsafeRefEq = {\n    eq: function (v) {\n        return function (v1) {\n            return unsafeRefEq(v)(v1);\n        };\n    }\n};\nexport {\n    reallyUnsafeRefEq\n} from \"./foreign.js\";\nexport {\n    unsafeRefEq,\n    UnsafeRefEq,\n    UnsafeRefEqFallback,\n    eqUnsafeRefEq,\n    eqUnsafeRefEqFallback\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_ST_Class from \"../Control.Monad.ST.Class/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Array_ST from \"../Data.Array.ST/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Filterable from \"../Data.Filterable/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Set from \"../Data.Set/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Effect_Timer from \"../Effect.Timer/index.js\";\nimport * as Effect_Uncurried from \"../Effect.Uncurried/index.js\";\nimport * as FRP_Event_Class from \"../FRP.Event.Class/index.js\";\nimport * as Unsafe_Reference from \"../Unsafe.Reference/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Effect.applicativeEffect);\nvar for_1 = /* #__PURE__ */ for_(Data_Foldable.foldableMaybe);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar liftST = /* #__PURE__ */ Control_Monad_ST_Class.liftST(Control_Monad_ST_Class.monadSTEffect);\nvar monoidEffect = /* #__PURE__ */ Effect.monoidEffect(Data_Monoid.monoidUnit);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(/* #__PURE__ */ Effect_Uncurried.monoidEffectFn1(Data_Monoid.monoidUnit));\nvar mempty1 = /* #__PURE__ */ Data_Monoid.mempty(/* #__PURE__ */ Data_Set.monoidSet(Effect_Timer.ordTimeoutId));\nvar $$delete = /* #__PURE__ */ Data_Set[\"delete\"](Effect_Timer.ordTimeoutId);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(/* #__PURE__ */ Data_Set.semigroupSet(Effect_Timer.ordTimeoutId));\nvar for_2 = /* #__PURE__ */ for_(Data_Set.foldableSet);\nvar apply = /* #__PURE__ */ Control_Apply.apply(Effect.applyEffect);\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar Event = function (x) {\n    return x;\n};\nvar Hot = function (x) {\n    return x;\n};\nvar Mailbox = function (x) {\n    return x;\n};\nvar Mailboxed = function (x) {\n    return x;\n};\nvar MakeEventO = function (x) {\n    return x;\n};\nvar MakeEvent = function (x) {\n    return x;\n};\nvar MakeLemmingEvent = function (x) {\n    return x;\n};\nvar MakePureEvent = function (x) {\n    return x;\n};\nvar Memoize = function (x) {\n    return x;\n};\nvar SubscribeO = function (x) {\n    return x;\n};\nvar SubscribePureO = function (x) {\n    return x;\n};\nvar SubscribePure = function (x) {\n    return x;\n};\nvar Subscribe = function (x) {\n    return x;\n};\nvar Subscriber = function (x) {\n    return x;\n};\nvar MakeLemmingEventO = function (x) {\n    return x;\n};\nvar Delay = function (x) {\n    return x;\n};\nvar CreatePureO = function (x) {\n    return x;\n};\nvar CreatePure = function (x) {\n    return x;\n};\nvar CreateO = function (x) {\n    return x;\n};\nvar Create = function (x) {\n    return x;\n};\nvar Bus = function (x) {\n    return x;\n};\nvar sampleOnRight = function (v) {\n    return function (v1) {\n        return function (b, k) {\n            var latest = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n            var c1 = v(b, function (a) {\n                return Effect_Ref.write(new Data_Maybe.Just(a))(latest)();\n            });\n            var c2 = v1(b, function (f) {\n                var o = Effect_Ref.read(latest)();\n                return for_1(o)(function (a) {\n                    return function () {\n                        return k(f(a));\n                    };\n                })();\n            });\n            return function __do() {\n                c1();\n                return c2();\n            };\n        };\n    };\n};\nvar sampleOnLeft = function (v) {\n    return function (v1) {\n        return function (b, k) {\n            var latest = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n            var c1 = v(b, function (a) {\n                var o = Effect_Ref.read(latest)();\n                return for_1(o)(function (f) {\n                    return function () {\n                        return k(f(a));\n                    };\n                })();\n            });\n            var c2 = v1(b, function (f) {\n                return Effect_Ref.write(new Data_Maybe.Just(f))(latest)();\n            });\n            return function __do() {\n                c1();\n                return c2();\n            };\n        };\n    };\n};\nvar merge = function (dictFoldable) {\n    var foldMap = Data_Foldable.foldMap(dictFoldable)(monoidEffect);\n    return function (f) {\n        return function (tf, k) {\n            var a = liftST(Data_Array_ST[\"new\"])();\n            foldMap(function (v) {\n                return function __do() {\n                    var u = v(tf, k);\n                    return $$void(liftST(Data_Array_ST.push(u)(a)))();\n                };\n            })(f)();\n            return function __do() {\n                var o = liftST(Data_Array_ST.freeze(a))();\n                return $foreign.fastForeachThunk(o);\n            };\n        };\n    };\n};\nvar mailbox$prime = function (dictOrd) {\n    var alter = Data_Map_Internal.alter(dictOrd);\n    var lookup = Data_Map_Internal.lookup(dictOrd);\n    return function __do() {\n        var r = Effect_Ref[\"new\"](Data_Map_Internal.empty)();\n        return {\n            event: function (a) {\n                return function (v, k2) {\n                    $$void(Effect_Ref.modify(alter(function (v1) {\n                        if (v1 instanceof Data_Maybe.Nothing) {\n                            return new Data_Maybe.Just([ k2 ]);\n                        };\n                        if (v1 instanceof Data_Maybe.Just) {\n                            return new Data_Maybe.Just(append(v1.value0)([ k2 ]));\n                        };\n                        throw new Error(\"Failed pattern match at FRP.Event (line 568, column 17 - line 570, column 51): \" + [ v1.constructor.name ]);\n                    })(a))(r))();\n                    return $$void(Effect_Ref.modify(alter(function (v1) {\n                        if (v1 instanceof Data_Maybe.Nothing) {\n                            return Data_Maybe.Nothing.value;\n                        };\n                        if (v1 instanceof Data_Maybe.Just) {\n                            return new Data_Maybe.Just(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k2)(v1.value0));\n                        };\n                        throw new Error(\"Failed pattern match at FRP.Event (line 577, column 17 - line 579, column 65): \" + [ v1.constructor.name ]);\n                    })(a))(r));\n                };\n            },\n            push: function (v) {\n                var o = Effect_Ref.read(r)();\n                var v1 = lookup(v.address)(o);\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return Data_Unit.unit;\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return $foreign.fastForeachE(v1.value0, function (i) {\n                        return i(v.payload);\n                    });\n                };\n                throw new Error(\"Failed pattern match at FRP.Event (line 586, column 9 - line 588, column 95): \" + [ v1.constructor.name ]);\n            }\n        };\n    };\n};\nvar keepLatest = function (v) {\n    return function (tf, k) {\n        var cancelInner = Effect_Ref[\"new\"](pure(Data_Unit.unit))();\n        var cancelOuter = v(tf, function (v1) {\n            var ci = Effect_Ref.read(cancelInner)();\n            ci();\n            var c = v1(tf, k);\n            return Effect_Ref.write(c)(cancelInner)();\n        });\n        return function __do() {\n            var ci = Effect_Ref.read(cancelInner)();\n            ci();\n            return cancelOuter();\n        };\n    };\n};\nvar functorEvent = {\n    map: function (f) {\n        return function (v) {\n            return function (b, k) {\n                return v(b, function (a) {\n                    return k(f(a));\n                });\n            };\n        };\n    }\n};\nvar map1 = /* #__PURE__ */ Data_Functor.map(functorEvent);\nvar filter = function (p) {\n    return function (v) {\n        return function (tf, k) {\n            return v(tf, function (a) {\n                var v1 = p(a);\n                if (v1 instanceof Data_Maybe.Just) {\n                    return k(v1.value0);\n                };\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return Data_Unit.unit;\n                };\n                throw new Error(\"Failed pattern match at FRP.Event (line 225, column 31 - line 227, column 35): \" + [ v1.constructor.name ]);\n            });\n        };\n    };\n};\nvar filter$prime = function (f) {\n    return filter(function (a) {\n        var v = f(a);\n        if (v) {\n            return new Data_Maybe.Just(a);\n        };\n        if (!v) {\n            return Data_Maybe.Nothing.value;\n        };\n        throw new Error(\"Failed pattern match at FRP.Event (line 141, column 13 - line 143, column 25): \" + [ v.constructor.name ]);\n    });\n};\nvar create$prime = function __do() {\n    var subscribers = $foreign.objHack();\n    var idx = Effect_Ref[\"new\"](0)();\n    return {\n        event: function (v, k) {\n            var rk = Effect_Ref[\"new\"](k)();\n            var ix = Effect_Ref.read(idx)();\n            $foreign.insertObjHack(ix, rk, subscribers);\n            Effect_Ref.modify_(function (v1) {\n                return v1 + 1 | 0;\n            })(idx)();\n            return function __do() {\n                Effect_Ref.write(mempty)(rk)();\n                $foreign.deleteObjHack(ix, subscribers);\n                return Data_Unit.unit;\n            };\n        },\n        push: function (a) {\n            return $foreign.fastForeachOhE(subscribers, function (rk) {\n                var k = Effect_Ref.read(rk)();\n                return k(a);\n            });\n        }\n    };\n};\nvar fix = function (f) {\n    return function (tf, k) {\n        var v = create$prime();\n        var v1 = f(v.event);\n        var c2 = v.event(tf, k);\n        var c1 = v1(tf, v.push);\n        return function __do() {\n            c1();\n            return c2();\n        };\n    };\n};\nvar compactableEvent = {\n    compact: /* #__PURE__ */ filter(/* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn)),\n    separate: function (xs) {\n        return {\n            left: filter(function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return new Data_Maybe.Just(v.value0);\n                };\n                if (v instanceof Data_Either.Right) {\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at FRP.Event (line 124, column 13 - line 126, column 33): \" + [ v.constructor.name ]);\n            })(xs),\n            right: filter(function (v) {\n                if (v instanceof Data_Either.Right) {\n                    return new Data_Maybe.Just(v.value0);\n                };\n                if (v instanceof Data_Either.Left) {\n                    return Data_Maybe.Nothing.value;\n                };\n                throw new Error(\"Failed pattern match at FRP.Event (line 131, column 13 - line 133, column 32): \" + [ v.constructor.name ]);\n            })(xs)\n        };\n    }\n};\nvar filterableEvent = {\n    filter: filter$prime,\n    filterMap: filter,\n    partition: function (p) {\n        return function (xs) {\n            return {\n                yes: filter$prime(p)(xs),\n                no: filter$prime(function ($232) {\n                    return !p($232);\n                })(xs)\n            };\n        };\n    },\n    partitionMap: function (f) {\n        return function (xs) {\n            return {\n                left: Data_Filterable.filterMap(filterableEvent)((function () {\n                    var $233 = Data_Either.either(Data_Maybe.Just.create)(Data_Function[\"const\"](Data_Maybe.Nothing.value));\n                    return function ($234) {\n                        return $233(f($234));\n                    };\n                })())(xs),\n                right: Data_Filterable.filterMap(filterableEvent)(function ($235) {\n                    return Data_Either.hush(f($235));\n                })(xs)\n            };\n        };\n    },\n    Compactable0: function () {\n        return compactableEvent;\n    },\n    Functor1: function () {\n        return functorEvent;\n    }\n};\nvar biSampleOn = function (v) {\n    return function (v1) {\n        return function (tf, k) {\n            var latest1 = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n            var replay1 = liftST(Data_Array_ST[\"new\"])();\n            var latest2 = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n            var replay2 = liftST(Data_Array_ST[\"new\"])();\n            var capturing = Effect_Ref[\"new\"](true)();\n            var c1 = v(tf, function (a) {\n                var o = Effect_Ref.read(capturing)();\n                if (o) {\n                    return $$void(liftST(Data_Array_ST.push(a)(replay1)))();\n                };\n                Effect_Ref.write(new Data_Maybe.Just(a))(latest1)();\n                var res = Effect_Ref.read(latest2)();\n                return for_1(res)(function (f) {\n                    return function () {\n                        return k(f(a));\n                    };\n                })();\n            });\n            var c2 = v1(tf, function (f) {\n                var o = Effect_Ref.read(capturing)();\n                if (o) {\n                    return $$void(liftST(Data_Array_ST.push(f)(replay2)))();\n                };\n                Effect_Ref.write(new Data_Maybe.Just(f))(latest2)();\n                var res = Effect_Ref.read(latest1)();\n                return for_1(res)(function (a) {\n                    return function () {\n                        return k(f(a));\n                    };\n                })();\n            });\n            Effect_Ref.write(false)(capturing)();\n            var samples1 = liftST(Data_Array_ST.freeze(replay1))();\n            var samples2 = liftST(Data_Array_ST.freeze(replay2))();\n            (function () {\n                if (samples1.length === 0) {\n                    return Effect_Ref.write(Data_Array.last(samples2))(latest2)();\n                };\n                return $foreign.fastForeachE(samples1, function (a) {\n                    Effect_Ref.write(new Data_Maybe.Just(a))(latest1)();\n                    return $foreign.fastForeachE(samples2, function (f) {\n                        Effect_Ref.write(new Data_Maybe.Just(f))(latest2)();\n                        return k(f(a));\n                    });\n                });\n            })();\n            liftST(Data_Array_ST.splice(0)(Data_Array.length(samples1))([  ])(replay1))();\n            liftST(Data_Array_ST.splice(0)(Data_Array.length(samples2))([  ])(replay2))();\n            return function __do() {\n                c1();\n                return c2();\n            };\n        };\n    };\n};\nvar subscribe = function (i) {\n    return (function (v) {\n        return v;\n    })(($lazy_backdoor(345)).subscribe)(i);\n};\nvar $lazy_backdoor = /* #__PURE__ */ $runtime_lazy(\"backdoor\", \"FRP.Event\", function () {\n    var create_ = function __do() {\n        var subscribers = $foreign.objHack();\n        var idx = Effect_Ref[\"new\"](0)();\n        return {\n            event: function (v, k) {\n                var rk = Effect_Ref[\"new\"](k)();\n                var ix = Effect_Ref.read(idx)();\n                $foreign.insertObjHack(ix, rk, subscribers);\n                Effect_Ref.modify_(function (v1) {\n                    return v1 + 1 | 0;\n                })(idx)();\n                return function __do() {\n                    Effect_Ref.write(mempty)(rk)();\n                    $foreign.deleteObjHack(ix, subscribers);\n                    return Data_Unit.unit;\n                };\n            },\n            push: function (a) {\n                return function () {\n                    return $foreign.fastForeachOhE(subscribers, function (rk) {\n                        var k = Effect_Ref.read(rk)();\n                        return k(a);\n                    });\n                };\n            }\n        };\n    };\n    return {\n        createO: create$prime,\n        makeEvent: (function () {\n            var makeEvent_ = function (e) {\n                return function (tf, k) {\n                    if (tf) {\n                        return pure(Data_Unit.unit);\n                    };\n                    return e(function (a) {\n                        return function () {\n                            return k(a);\n                        };\n                    })();\n                };\n            };\n            return makeEvent_;\n        })(),\n        makeEventO: (function () {\n            var makeEventO_ = function (e) {\n                return function (tf, k) {\n                    if (tf) {\n                        return pure(Data_Unit.unit);\n                    };\n                    return e(k);\n                };\n            };\n            return makeEventO_;\n        })(),\n        makePureEvent: (function () {\n            var makePureEvent_ = function (e) {\n                return function (v, k) {\n                    return e(function (a) {\n                        return function () {\n                            return k(a);\n                        };\n                    })();\n                };\n            };\n            return makePureEvent_;\n        })(),\n        makeLemmingEvent: (function () {\n            var makeLemmingEvent_ = function (e) {\n                return function (tf, k) {\n                    var o = function (v) {\n                        return function (kx) {\n                            return function () {\n                                return v(tf, Effect_Uncurried.mkEffectFn1(kx));\n                            };\n                        };\n                    };\n                    return e(o)(function (a) {\n                        return function () {\n                            return k(a);\n                        };\n                    })();\n                };\n            };\n            return makeLemmingEvent_;\n        })(),\n        makeLemmingEventO: (function () {\n            var makeLemmingEventO_ = function (e) {\n                return function (tf, k) {\n                    var o = function (v, kx) {\n                        return v(tf, kx);\n                    };\n                    return e(o, k);\n                };\n            };\n            return makeLemmingEventO_;\n        })(),\n        create: create_,\n        createPure: create_,\n        createPureO: create$prime,\n        subscribe: (function () {\n            var subscribe_ = function (v) {\n                return function (k) {\n                    return function () {\n                        return v(false, Effect_Uncurried.mkEffectFn1(k));\n                    };\n                };\n            };\n            return subscribe_;\n        })(),\n        subscribeO: (function () {\n            var subscribeO_ = function (v, k) {\n                return v(false, k);\n            };\n            return subscribeO_;\n        })(),\n        subscribePureO: (function () {\n            var subscribePureO_ = function (v, k) {\n                return v(true, k);\n            };\n            return subscribePureO_;\n        })(),\n        subscribePure: (function () {\n            var subscribePure_ = (function () {\n                var o = function (v) {\n                    return function (k) {\n                        return function () {\n                            return v(true, Effect_Uncurried.mkEffectFn1(k));\n                        };\n                    };\n                };\n                return o;\n            })();\n            return subscribePure_;\n        })(),\n        bus: (function () {\n            var bus_ = function (f) {\n                return function (v, k) {\n                    var v1 = $lazy_create(819)();\n                    k(f(v1.push)(v1.event));\n                    return pure(Data_Unit.unit);\n                };\n            };\n            return bus_;\n        })(),\n        memoize: (function () {\n            var memoize_ = function (v) {\n                return function (f) {\n                    return function (b, k) {\n                        var v1 = create$prime();\n                        k(f(v1.event));\n                        return v(b, v1.push);\n                    };\n                };\n            };\n            return memoize_;\n        })(),\n        hot: (function () {\n            var hot_ = function (e) {\n                return function __do() {\n                    var v = $lazy_create(837)();\n                    var unsubscribe = subscribe(e)(v.push)();\n                    return {\n                        event: v.event,\n                        unsubscribe: unsubscribe\n                    };\n                };\n            };\n            return hot_;\n        })(),\n        mailbox: (function () {\n            var mailbox_ = function (dictOrd) {\n                return function __do() {\n                    var v = mailbox$prime(dictOrd)();\n                    return {\n                        event: v.event,\n                        push: function (k) {\n                            return function () {\n                                return v.push(k);\n                            };\n                        }\n                    };\n                };\n            };\n            return mailbox_;\n        })(),\n        mailboxed: (function () {\n            var mailboxed_ = function (dictOrd) {\n                var mailbox$prime1 = mailbox$prime(dictOrd);\n                return function (v) {\n                    return function (f) {\n                        return function (b, k) {\n                            var v1 = mailbox$prime1();\n                            k(f(v1.event));\n                            return v(b, v1.push);\n                        };\n                    };\n                };\n            };\n            return mailboxed_;\n        })(),\n        delay: (function () {\n            var delay_ = function (n) {\n                return function (v) {\n                    return function (tf, k) {\n                        var tid = Effect_Ref[\"new\"](mempty1)();\n                        var canceler = v(tf, function (a) {\n                            var localId = Effect_Ref[\"new\"](Data_Maybe.Nothing.value)();\n                            var id = Effect_Timer.setTimeout(n)(function __do() {\n                                k(a);\n                                var lid = Effect_Ref.read(localId)();\n                                return Data_Maybe.maybe(pure(Data_Unit.unit))(function (id) {\n                                    return Effect_Ref.modify_($$delete(id))(tid);\n                                })(lid)();\n                            })();\n                            Effect_Ref.write(new Data_Maybe.Just(id))(localId)();\n                            return Effect_Ref.modify_(append1(Data_Set.singleton(id)))(tid)();\n                        });\n                        return function __do() {\n                            var ids = Effect_Ref.read(tid)();\n                            for_2(ids)(Effect_Timer.clearTimeout)();\n                            return canceler();\n                        };\n                    };\n                };\n            };\n            return delay_;\n        })()\n    };\n});\nvar $lazy_create = /* #__PURE__ */ $runtime_lazy(\"create\", \"FRP.Event\", function () {\n    return function __do() {\n        Data_Unit.unit;\n        return (function (v) {\n            return v;\n        })(($lazy_backdoor(461)).create)();\n    };\n});\nvar backdoor = /* #__PURE__ */ $lazy_backdoor(678);\nvar create = /* #__PURE__ */ $lazy_create(458);\nvar bus = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.bus)(i);\n};\nvar createO = function __do() {\n    Data_Unit.unit;\n    return backdoor.createO();\n};\nvar createPure = function __do() {\n    Data_Unit.unit;\n    return backdoor.createPure();\n};\nvar createPureO = function __do() {\n    Data_Unit.unit;\n    return backdoor.createPureO();\n};\nvar delay = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.delay)(i);\n};\nvar hot = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.hot)(i);\n};\nvar mailbox = function (dictOrd) {\n    return function __do() {\n        Data_Unit.unit;\n        return backdoor.mailbox(dictOrd)();\n    };\n};\nvar mailboxed = function (dictOrd) {\n    return function (i) {\n        return (function (v) {\n            return v(dictOrd);\n        })(backdoor.mailboxed)(i);\n    };\n};\nvar makeEvent = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.makeEvent)(i);\n};\nvar makeEventO = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.makeEventO)(i);\n};\nvar makeLemmingEvent = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.makeLemmingEvent)(i);\n};\nvar makeLemmingEventO = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.makeLemmingEventO)(i);\n};\nvar makePureEvent = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.makePureEvent)(i);\n};\nvar memoize = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.memoize)(i);\n};\nvar subscribeO = /* #__PURE__ */ (function () {\n    return (function (v) {\n        return v;\n    })(backdoor.subscribeO);\n})();\nvar subscribePure = function (i) {\n    return (function (v) {\n        return v;\n    })(backdoor.subscribePure)(i);\n};\nvar subscribePureO = /* #__PURE__ */ (function () {\n    return (function (v) {\n        return v;\n    })(backdoor.subscribePureO);\n})();\nvar applyEvent = {\n    apply: function (a) {\n        return function (b) {\n            return biSampleOn(a)(map1(Data_Function.applyFlipped)(b));\n        };\n    },\n    Functor0: function () {\n        return functorEvent;\n    }\n};\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(applyEvent);\nvar semigroupEvent = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar applicativeEvent = {\n    pure: function (a) {\n        return function (v, k) {\n            k(a);\n            return pure(Data_Unit.unit);\n        };\n    },\n    Apply0: function () {\n        return applyEvent;\n    }\n};\nvar pure2 = /* #__PURE__ */ Control_Applicative.pure(applicativeEvent);\nvar heytingAlgebraEvent = function (dictHeytingAlgebra) {\n    return {\n        tt: pure2(Data_HeytingAlgebra.tt(dictHeytingAlgebra)),\n        ff: pure2(Data_HeytingAlgebra.ff(dictHeytingAlgebra)),\n        not: map1(Data_HeytingAlgebra.not(dictHeytingAlgebra)),\n        implies: lift2(Data_HeytingAlgebra.implies(dictHeytingAlgebra)),\n        conj: lift2(Data_HeytingAlgebra.conj(dictHeytingAlgebra)),\n        disj: lift2(Data_HeytingAlgebra.disj(dictHeytingAlgebra))\n    };\n};\nvar monoidEvent = function (dictMonoid) {\n    var semigroupEvent1 = semigroupEvent(dictMonoid.Semigroup0());\n    return {\n        mempty: pure2(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupEvent1;\n        }\n    };\n};\nvar semiringEvent = function (dictSemiring) {\n    return {\n        zero: pure2(Data_Semiring.zero(dictSemiring)),\n        one: pure2(Data_Semiring.one(dictSemiring)),\n        add: lift2(Data_Semiring.add(dictSemiring)),\n        mul: lift2(Data_Semiring.mul(dictSemiring))\n    };\n};\nvar ringEvent = function (dictRing) {\n    var semiringEvent1 = semiringEvent(dictRing.Semiring0());\n    return {\n        sub: lift2(Data_Ring.sub(dictRing)),\n        Semiring0: function () {\n            return semiringEvent1;\n        }\n    };\n};\nvar altEvent = {\n    alt: function (v) {\n        return function (v1) {\n            return function (tf, k) {\n                return apply(map(function (v2) {\n                    return function (v3) {\n                        return function __do() {\n                            v2();\n                            return v3();\n                        };\n                    };\n                })(function () {\n                    return v(tf, k);\n                }))(function () {\n                    return v1(tf, k);\n                })();\n            };\n        };\n    },\n    Functor0: function () {\n        return functorEvent;\n    }\n};\nvar alt = /* #__PURE__ */ Control_Alt.alt(altEvent);\nvar burning = function (i) {\n    return function (v) {\n        return function __do() {\n            var r = Effect_Ref[\"new\"](i)();\n            var v1 = create$prime();\n            var unsubscribe = v(true, function (x) {\n                Effect_Ref.write(x)(r)();\n                return v1.push(x);\n            });\n            return {\n                event: alt(v1.event)(function (v2, k) {\n                    var o = Effect_Ref.read(r)();\n                    k(o);\n                    return pure(Data_Unit.unit);\n                }),\n                unsubscribe: unsubscribe\n            };\n        };\n    };\n};\nvar plusEvent = {\n    empty: function (v, v1) {\n        return pure(Data_Unit.unit);\n    },\n    Alt0: function () {\n        return altEvent;\n    }\n};\nvar alternativeEvent = {\n    Applicative0: function () {\n        return applicativeEvent;\n    },\n    Plus1: function () {\n        return plusEvent;\n    }\n};\nvar eventIsEvent = {\n    keepLatest: keepLatest,\n    sampleOnRight: sampleOnRight,\n    sampleOnLeft: sampleOnLeft,\n    fix: fix,\n    Alternative0: function () {\n        return alternativeEvent;\n    },\n    Filterable1: function () {\n        return filterableEvent;\n    }\n};\nexport {\n    Bus,\n    Create,\n    CreateO,\n    CreatePure,\n    CreatePureO,\n    Delay,\n    Hot,\n    Mailbox,\n    Mailboxed,\n    MakeEvent,\n    MakeEventO,\n    MakeLemmingEvent,\n    MakeLemmingEventO,\n    MakePureEvent,\n    Memoize,\n    Subscribe,\n    SubscribeO,\n    SubscribePure,\n    SubscribePureO,\n    Subscriber,\n    backdoor,\n    burning,\n    bus,\n    merge,\n    create,\n    createO,\n    createPure,\n    createPureO,\n    delay,\n    hot,\n    mailbox,\n    mailboxed,\n    makeEvent,\n    makeEventO,\n    makeLemmingEvent,\n    makeLemmingEventO,\n    makePureEvent,\n    memoize,\n    subscribe,\n    subscribeO,\n    subscribePure,\n    subscribePureO,\n    functorEvent,\n    compactableEvent,\n    filterableEvent,\n    altEvent,\n    plusEvent,\n    applyEvent,\n    applicativeEvent,\n    alternativeEvent,\n    eventIsEvent,\n    semigroupEvent,\n    monoidEvent,\n    heytingAlgebraEvent,\n    semiringEvent,\n    ringEvent\n};\nexport {\n    count,\n    filterMap,\n    fix,\n    fold,\n    folded,\n    gate,\n    gateBy,\n    keepLatest,\n    mapAccum,\n    sampleOnRight,\n    sampleOnRight_,\n    withLast\n} from \"../FRP.Event.Class/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Record_Unsafe_Union from \"../Record.Unsafe.Union/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar union = function () {\n    return function (l) {\n        return function (r) {\n            return Record_Unsafe_Union.unsafeUnionFn(l, r);\n        };\n    };\n};\nvar set = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function () {\n            return function (l) {\n                return function (b) {\n                    return function (r) {\n                        return Record_Unsafe.unsafeSet(reflectSymbol(l))(b)(r);\n                    };\n                };\n            };\n        };\n    };\n};\nvar nub = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nvar merge = function () {\n    return function () {\n        return function (l) {\n            return function (r) {\n                return Record_Unsafe_Union.unsafeUnionFn(l, r);\n            };\n        };\n    };\n};\nvar insert = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function () {\n            return function (l) {\n                return function (a) {\n                    return function (r) {\n                        return Record_Unsafe.unsafeSet(reflectSymbol(l))(a)(r);\n                    };\n                };\n            };\n        };\n    };\n};\nvar get = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function (l) {\n            return function (r) {\n                return Record_Unsafe.unsafeGet(reflectSymbol(l))(r);\n            };\n        };\n    };\n};\nvar modify = function (dictIsSymbol) {\n    var set1 = set(dictIsSymbol)()();\n    var get1 = get(dictIsSymbol)();\n    return function () {\n        return function () {\n            return function (l) {\n                return function (f) {\n                    return function (r) {\n                        return set1(l)(f(get1(l)(r)))(r);\n                    };\n                };\n            };\n        };\n    };\n};\nvar equalFieldsNil = {\n    equalFields: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return true;\n            };\n        };\n    }\n};\nvar equalFields = function (dict) {\n    return dict.equalFields;\n};\nvar equalFieldsCons = function (dictIsSymbol) {\n    var get1 = get(dictIsSymbol)();\n    return function (dictEq) {\n        var eq = Data_Eq.eq(dictEq);\n        return function () {\n            return function (dictEqualFields) {\n                var equalFields1 = equalFields(dictEqualFields);\n                return {\n                    equalFields: function (v) {\n                        return function (a) {\n                            return function (b) {\n                                var get$prime = get1(Type_Proxy[\"Proxy\"].value);\n                                var equalRest = equalFields1(Type_Proxy[\"Proxy\"].value);\n                                return eq(get$prime(a))(get$prime(b)) && equalRest(a)(b);\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nvar equal = function () {\n    return function (dictEqualFields) {\n        var equalFields1 = equalFields(dictEqualFields);\n        return function (a) {\n            return function (b) {\n                return equalFields1(Type_Proxy[\"Proxy\"].value)(a)(b);\n            };\n        };\n    };\n};\nvar disjointUnion = function () {\n    return function () {\n        return function (l) {\n            return function (r) {\n                return Record_Unsafe_Union.unsafeUnionFn(l, r);\n            };\n        };\n    };\n};\nvar $$delete = function (dictIsSymbol) {\n    var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n    return function () {\n        return function () {\n            return function (l) {\n                return function (r) {\n                    return Record_Unsafe.unsafeDelete(reflectSymbol(l))(r);\n                };\n            };\n        };\n    };\n};\nvar rename = function (dictIsSymbol) {\n    var get1 = get(dictIsSymbol)();\n    var delete1 = $$delete(dictIsSymbol)()();\n    return function (dictIsSymbol1) {\n        var insert1 = insert(dictIsSymbol1)()();\n        return function () {\n            return function () {\n                return function () {\n                    return function () {\n                        return function (prev) {\n                            return function (next) {\n                                return function (record) {\n                                    return insert1(next)(get1(prev)(record))(delete1(prev)(record));\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    get,\n    set,\n    modify,\n    insert,\n    $$delete as delete,\n    rename,\n    equal,\n    merge,\n    union,\n    disjointUnion,\n    nub,\n    equalFields,\n    equalFieldsCons,\n    equalFieldsNil\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as FRP_Event_VBus from \"../FRP.Event.VBus/index.js\";\nvar compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordString);\nvar vbus = /* #__PURE__ */ FRP_Event_VBus.vbus();\nvar Local = /* #__PURE__ */ (function () {\n    function Local(value0) {\n        this.value0 = value0;\n    };\n    Local.create = function (value0) {\n        return new Local(value0);\n    };\n    return Local;\n})();\nvar Global = /* #__PURE__ */ (function () {\n    function Global() {\n\n    };\n    Global.value = new Global();\n    return Global;\n})();\nvar Element = function (x) {\n    return x;\n};\nvar Insert = /* #__PURE__ */ (function () {\n    function Insert(value0) {\n        this.value0 = value0;\n    };\n    Insert.create = function (value0) {\n        return new Insert(value0);\n    };\n    return Insert;\n})();\nvar Remove = /* #__PURE__ */ (function () {\n    function Remove() {\n\n    };\n    Remove.value = new Remove();\n    return Remove;\n})();\nvar Logic = /* #__PURE__ */ (function () {\n    function Logic(value0) {\n        this.value0 = value0;\n    };\n    Logic.create = function (value0) {\n        return new Logic(value0);\n    };\n    return Logic;\n})();\nvar DynamicChildren$prime = /* #__PURE__ */ (function () {\n    function DynamicChildren$prime(value0) {\n        this.value0 = value0;\n    };\n    DynamicChildren$prime.create = function (value0) {\n        return new DynamicChildren$prime(value0);\n    };\n    return DynamicChildren$prime;\n})();\nvar FixedChildren$prime = /* #__PURE__ */ (function () {\n    function FixedChildren$prime(value0) {\n        this.value0 = value0;\n    };\n    FixedChildren$prime.create = function (value0) {\n        return new FixedChildren$prime(value0);\n    };\n    return FixedChildren$prime;\n})();\nvar EventfulElement$prime = /* #__PURE__ */ (function () {\n    function EventfulElement$prime(value0) {\n        this.value0 = value0;\n    };\n    EventfulElement$prime.create = function (value0) {\n        return new EventfulElement$prime(value0);\n    };\n    return EventfulElement$prime;\n})();\nvar Element$prime = /* #__PURE__ */ (function () {\n    function Element$prime(value0) {\n        this.value0 = value0;\n    };\n    Element$prime.create = function (value0) {\n        return new Element$prime(value0);\n    };\n    return Element$prime;\n})();\nvar DynamicChildren = function (x) {\n    return x;\n};\nvar FixedChildren = function (x) {\n    return x;\n};\nvar EventfulElement = function (x) {\n    return x;\n};\nvar eqScope = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof Local && y instanceof Local) {\n                return x.value0 === y.value0;\n            };\n            if (x instanceof Global && y instanceof Global) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar ordScope = {\n    compare: function (x) {\n        return function (y) {\n            if (x instanceof Local && y instanceof Local) {\n                return compare(x.value0)(y.value0);\n            };\n            if (x instanceof Local) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Local) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Global && y instanceof Global) {\n                return Data_Ordering.EQ.value;\n            };\n            throw new Error(\"Failed pattern match at Bolson.Core (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return eqScope;\n    }\n};\nvar vbussed = function () {\n    return function (dictVBus) {\n        var vbus1 = vbus(dictVBus);\n        return function (px) {\n            return function (f) {\n                return new EventfulElement$prime(vbus1(px)(f));\n            };\n        };\n    };\n};\nvar fixed = function (a) {\n    return new FixedChildren$prime(a);\n};\nvar envy = function (a) {\n    return new EventfulElement$prime(a);\n};\nvar dyn = function (a) {\n    return new DynamicChildren$prime(a);\n};\nvar bussed = function (f) {\n    return new EventfulElement$prime(FRP_Event.bus(f));\n};\nexport {\n    Element,\n    Insert,\n    Remove,\n    Logic,\n    DynamicChildren,\n    FixedChildren,\n    EventfulElement,\n    Local,\n    Global,\n    DynamicChildren$prime,\n    FixedChildren$prime,\n    EventfulElement$prime,\n    Element$prime,\n    fixed,\n    dyn,\n    envy,\n    bussed,\n    vbussed,\n    eqScope,\n    ordScope\n};\n", "export const foldr1Impl = function (f, xs) {\n  var acc = xs[xs.length - 1];\n  for (var i = xs.length - 2; i >= 0; i--) {\n    acc = f(xs[i])(acc);\n  }\n  return acc;\n};\n\nexport const foldl1Impl = function (f, xs) {\n  var acc = xs[0];\n  var len = xs.length;\n  for (var i = 1; i < len; i++) {\n    acc = f(acc)(xs[i]);\n  }\n  return acc;\n};\n\nexport const traverse1Impl = function () {\n  function Cont(fn) {\n    this.fn = fn;\n  }\n\n  var emptyList = {};\n\n  var ConsCell = function (head, tail) {\n    this.head = head;\n    this.tail = tail;\n  };\n\n  function finalCell(head) {\n    return new ConsCell(head, emptyList);\n  }\n\n  function consList(x) {\n    return function (xs) {\n      return new ConsCell(x, xs);\n    };\n  }\n\n  function listToArray(list) {\n    var arr = [];\n    var xs = list;\n    while (xs !== emptyList) {\n      arr.push(xs.head);\n      xs = xs.tail;\n    }\n    return arr;\n  }\n\n  return function (apply, map, f) {\n    var buildFrom = function (x, ys) {\n      return apply(map(consList)(f(x)))(ys);\n    };\n\n    var go = function (acc, currentLen, xs) {\n      if (currentLen === 0) {\n        return acc;\n      } else {\n        var last = xs[currentLen - 1];\n        return new Cont(function () {\n          var built = go(buildFrom(last, acc), currentLen - 1, xs);\n          return built;\n        });\n      }\n    };\n\n    return function (array) {\n      var acc = map(finalCell)(f(array[array.length - 1]));\n      var result = go(acc, array.length - 1, array);\n      while (result instanceof Cont) {\n        result = result.fn();\n      }\n\n      return map(listToArray)(result);\n    };\n  };\n}();\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar reifiableString = {};\nvar reifiableOrdering = {};\nvar reifiableInt = {};\nvar reifiableBoolean = {};\nvar reifyType = function () {\n    return function (s) {\n        return function (f) {\n            return $foreign.unsafeCoerce(function (dictReflectable) {\n                return f(dictReflectable);\n            })({\n                reflectType: function (v) {\n                    return s;\n                }\n            })(Type_Proxy[\"Proxy\"].value);\n        };\n    };\n};\nvar reflectType = function (dict) {\n    return dict.reflectType;\n};\nexport {\n    reflectType,\n    reifyType,\n    reifiableBoolean,\n    reifiableInt,\n    reifiableOrdering,\n    reifiableString\n};\n", "export function _copyST(m) {\n  return function () {\n    var r = {};\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k)) {\n        r[k] = m[k];\n      }\n    }\n    return r;\n  };\n}\n\nexport const empty = {};\n\nexport function runST(f) {\n  return f();\n}\n\nexport function _fmapObject(m0, f) {\n  var m = {};\n  for (var k in m0) {\n    if (hasOwnProperty.call(m0, k)) {\n      m[k] = f(m0[k]);\n    }\n  }\n  return m;\n}\n\nexport function _mapWithKey(m0, f) {\n  var m = {};\n  for (var k in m0) {\n    if (hasOwnProperty.call(m0, k)) {\n      m[k] = f(k)(m0[k]);\n    }\n  }\n  return m;\n}\n\nexport function _foldM(bind) {\n  return function (f) {\n    return function (mz) {\n      return function (m) {\n        var acc = mz;\n        function g(k) {\n          return function (z) {\n            return f(z)(k)(m[k]);\n          };\n        }\n        for (var k in m) {\n          if (hasOwnProperty.call(m, k)) {\n            acc = bind(acc)(g(k));\n          }\n        }\n        return acc;\n      };\n    };\n  };\n}\n\nexport function _foldSCObject(m, z, f, fromMaybe) {\n  var acc = z;\n  for (var k in m) {\n    if (hasOwnProperty.call(m, k)) {\n      var maybeR = f(acc)(k)(m[k]);\n      var r = fromMaybe(null)(maybeR);\n      if (r === null) return acc;\n      else acc = r;\n    }\n  }\n  return acc;\n}\n\nexport function all(f) {\n  return function (m) {\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k) && !f(k)(m[k])) return false;\n    }\n    return true;\n  };\n}\n\nexport function size(m) {\n  var s = 0;\n  for (var k in m) {\n    if (hasOwnProperty.call(m, k)) {\n      ++s;\n    }\n  }\n  return s;\n}\n\nexport function _lookup(no, yes, k, m) {\n  return k in m ? yes(m[k]) : no;\n}\n\nexport function _lookupST(no, yes, k, m) {\n  return function () {\n    return k in m ? yes(m[k]) : no;\n  };\n}\n\nexport function toArrayWithKey(f) {\n  return function (m) {\n    var r = [];\n    for (var k in m) {\n      if (hasOwnProperty.call(m, k)) {\n        r.push(f(k)(m[k]));\n      }\n    }\n    return r;\n  };\n}\n\nexport const keys = Object.keys || toArrayWithKey(function (k) {\n  return function () { return k; };\n});\n", "const newImpl = function () {\n  return {};\n};\nexport { newImpl as new };\n\nexport function peekImpl(just) {\n  return function (nothing) {\n    return function (k) {\n      return function (m) {\n        return function () {\n          return {}.hasOwnProperty.call(m, k) ? just(m[k]) : nothing;\n        };\n      };\n    };\n  };\n}\n\nexport function poke(k) {\n  return function (v) {\n    return function (m) {\n      return function () {\n        m[k] = v;\n        return m;\n      };\n    };\n  };\n}\n\nconst deleteImpl = function (k) {\n  return function (m) {\n    return function () {\n      delete m[k];\n      return m;\n    };\n  };\n};\nexport { deleteImpl as delete };\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_FoldableWithIndex from \"../Data.FoldableWithIndex/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Function_Uncurried from \"../Data.Function.Uncurried/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_TraversableWithIndex from \"../Data.TraversableWithIndex/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Foreign_Object_ST from \"../Foreign.Object.ST/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar sortWith = /* #__PURE__ */ Data_Array.sortWith(Data_Ord.ordString);\nvar bindFlipped = /* #__PURE__ */ Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST);\nvar showTuple = /* #__PURE__ */ Data_Tuple.showTuple(Data_Show.showString);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar forWithIndex_ = /* #__PURE__ */ Data_FoldableWithIndex.forWithIndex_(Control_Monad_ST_Internal.applicativeST);\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ordTuple = /* #__PURE__ */ Data_Tuple.ordTuple(Data_Ord.ordString);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Maybe.functorMaybe);\nvar values = /* #__PURE__ */ $foreign.toArrayWithKey(function (v) {\n    return function (v1) {\n        return v1;\n    };\n});\nvar toUnfoldable = function (dictUnfoldable) {\n    var $89 = Data_Array.toUnfoldable(dictUnfoldable);\n    var $90 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n    return function ($91) {\n        return $89($90($91));\n    };\n};\nvar toAscUnfoldable = function (dictUnfoldable) {\n    var $92 = Data_Array.toUnfoldable(dictUnfoldable);\n    var $93 = sortWith(Data_Tuple.fst);\n    var $94 = $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n    return function ($95) {\n        return $92($93($94($95)));\n    };\n};\nvar toAscArray = /* #__PURE__ */ toAscUnfoldable(Data_Unfoldable.unfoldableArray);\nvar toArray = /* #__PURE__ */ (function () {\n    return $foreign.toArrayWithKey(Data_Tuple.Tuple.create);\n})();\nvar thawST = $foreign[\"_copyST\"];\nvar singleton = function (k) {\n    return function (v) {\n        return $foreign.runST(bindFlipped(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST[\"new\"]));\n    };\n};\nvar showObject = function (dictShow) {\n    var show = Data_Show.show(Data_Show.showArray(showTuple(dictShow)));\n    return {\n        show: function (m) {\n            return \"(fromFoldable \" + (show(toArray(m)) + \")\");\n        }\n    };\n};\nvar mutate = function (f) {\n    return function (m) {\n        return $foreign.runST(function __do() {\n            var s = thawST(m)();\n            f(s)();\n            return s;\n        });\n    };\n};\nvar member = /* #__PURE__ */ Data_Function_Uncurried.runFn4($foreign[\"_lookup\"])(false)(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar mapWithKey = function (f) {\n    return function (m) {\n        return $foreign[\"_mapWithKey\"](m, f);\n    };\n};\nvar lookup = /* #__PURE__ */ (function () {\n    return Data_Function_Uncurried.runFn4($foreign[\"_lookup\"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);\n})();\nvar isSubmap = function (dictEq) {\n    var eq = Data_Eq.eq(dictEq);\n    return function (m1) {\n        return function (m2) {\n            var f = function (k) {\n                return function (v) {\n                    return $foreign[\"_lookup\"](false, eq(v), k, m2);\n                };\n            };\n            return $foreign.all(f)(m1);\n        };\n    };\n};\nvar isEmpty = /* #__PURE__ */ $foreign.all(function (v) {\n    return function (v1) {\n        return false;\n    };\n});\nvar insert = function (k) {\n    return function (v) {\n        return mutate(Foreign_Object_ST.poke(k)(v));\n    };\n};\nvar functorObject = {\n    map: function (f) {\n        return function (m) {\n            return $foreign[\"_fmapObject\"](m, f);\n        };\n    }\n};\nvar functorWithIndexObject = {\n    mapWithIndex: mapWithKey,\n    Functor0: function () {\n        return functorObject;\n    }\n};\nvar fromHomogeneous = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nvar fromFoldableWithIndex = function (dictFoldableWithIndex) {\n    var forWithIndex_1 = forWithIndex_(dictFoldableWithIndex);\n    return function (l) {\n        return $foreign.runST(function __do() {\n            var s = Foreign_Object_ST[\"new\"]();\n            forWithIndex_1(l)(function (k) {\n                return function (v) {\n                    return Foreign_Object_ST.poke(k)(v)(s);\n                };\n            })();\n            return s;\n        });\n    };\n};\nvar fromFoldableWith = function (dictFoldable) {\n    var for_1 = for_(dictFoldable);\n    return function (f) {\n        return function (l) {\n            return $foreign.runST(function __do() {\n                var s = Foreign_Object_ST[\"new\"]();\n                for_1(l)(function (v) {\n                    return function __do() {\n                        var v$prime = $foreign[\"_lookupST\"](v.value1, f(v.value1), v.value0, s)();\n                        return Foreign_Object_ST.poke(v.value0)(v$prime)(s)();\n                    };\n                })();\n                return s;\n            });\n        };\n    };\n};\nvar fromFoldable = function (dictFoldable) {\n    var fromFoldable1 = Data_Array.fromFoldable(dictFoldable);\n    return function (l) {\n        return $foreign.runST(function __do() {\n            var s = Foreign_Object_ST[\"new\"]();\n            Control_Monad_ST_Internal.foreach(fromFoldable1(l))(function (v) {\n                return $$void(Foreign_Object_ST.poke(v.value0)(v.value1)(s));\n            })();\n            return s;\n        });\n    };\n};\nvar freezeST = $foreign[\"_copyST\"];\nvar foldMaybe = function (f) {\n    return function (z) {\n        return function (m) {\n            return $foreign[\"_foldSCObject\"](m, z, f, Data_Maybe.fromMaybe);\n        };\n    };\n};\nvar foldM = function (dictMonad) {\n    var bind1 = Control_Bind.bind(dictMonad.Bind1());\n    var pure1 = Control_Applicative.pure(dictMonad.Applicative0());\n    return function (f) {\n        return function (z) {\n            return $foreign[\"_foldM\"](bind1)(f)(pure1(z));\n        };\n    };\n};\nvar foldM1 = /* #__PURE__ */ foldM(Control_Monad_ST_Internal.monadST);\nvar union = function (m) {\n    return mutate(function (s) {\n        return foldM1(function (s$prime) {\n            return function (k) {\n                return function (v) {\n                    return Foreign_Object_ST.poke(k)(v)(s$prime);\n                };\n            };\n        })(s)(m);\n    });\n};\nvar unions = function (dictFoldable) {\n    return Data_Foldable.foldl(dictFoldable)(union)($foreign.empty);\n};\nvar unionWith = function (f) {\n    return function (m1) {\n        return function (m2) {\n            return mutate(function (s1) {\n                return foldM1(function (s2) {\n                    return function (k) {\n                        return function (v1) {\n                            return Foreign_Object_ST.poke(k)($foreign[\"_lookup\"](v1, function (v2) {\n                                return f(v1)(v2);\n                            }, k, m2))(s2);\n                        };\n                    };\n                })(s1)(m1);\n            })(m2);\n        };\n    };\n};\nvar semigroupObject = function (dictSemigroup) {\n    return {\n        append: unionWith(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidObject = function (dictSemigroup) {\n    var semigroupObject1 = semigroupObject(dictSemigroup);\n    return {\n        mempty: $foreign.empty,\n        Semigroup0: function () {\n            return semigroupObject1;\n        }\n    };\n};\nvar fold = /* #__PURE__ */ $foreign[\"_foldM\"](Data_Function.applyFlipped);\nvar foldMap = function (dictMonoid) {\n    var append1 = Data_Semigroup.append(dictMonoid.Semigroup0());\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    return function (f) {\n        return fold(function (acc) {\n            return function (k) {\n                return function (v) {\n                    return append1(acc)(f(k)(v));\n                };\n            };\n        })(mempty);\n    };\n};\nvar foldableObject = {\n    foldl: function (f) {\n        return fold(function (z) {\n            return function (v) {\n                return f(z);\n            };\n        });\n    },\n    foldr: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldr(f)(z)(values(m));\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        var foldMap1 = foldMap(dictMonoid);\n        return function (f) {\n            return foldMap1(Data_Function[\"const\"](f));\n        };\n    }\n};\nvar foldableWithIndexObject = {\n    foldlWithIndex: function (f) {\n        return fold(Data_Function.flip(f));\n    },\n    foldrWithIndex: function (f) {\n        return function (z) {\n            return function (m) {\n                return foldr(Data_Tuple.uncurry(f))(z)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)(m));\n            };\n        };\n    },\n    foldMapWithIndex: function (dictMonoid) {\n        return foldMap(dictMonoid);\n    },\n    Foldable0: function () {\n        return foldableObject;\n    }\n};\nvar traversableWithIndexObject = {\n    traverseWithIndex: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        var pure1 = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            return function (ms) {\n                return fold(function (acc) {\n                    return function (k) {\n                        return function (v) {\n                            return apply(map(Data_Function.flip(insert(k)))(acc))(f(k)(v));\n                        };\n                    };\n                })(pure1($foreign.empty))(ms);\n            };\n        };\n    },\n    FunctorWithIndex0: function () {\n        return functorWithIndexObject;\n    },\n    FoldableWithIndex1: function () {\n        return foldableWithIndexObject;\n    },\n    Traversable2: function () {\n        return traversableObject;\n    }\n};\nvar traversableObject = {\n    traverse: function (dictApplicative) {\n        var $96 = Data_TraversableWithIndex.traverseWithIndex(traversableWithIndexObject)(dictApplicative);\n        return function ($97) {\n            return $96(Data_Function[\"const\"]($97));\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.traverse(traversableObject)(dictApplicative)(identity);\n    },\n    Functor0: function () {\n        return functorObject;\n    },\n    Foldable1: function () {\n        return foldableObject;\n    }\n};\nvar filterWithKey = function (predicate) {\n    return function (m) {\n        var go = (function () {\n            var step = function (acc) {\n                return function (k) {\n                    return function (v) {\n                        var $86 = predicate(k)(v);\n                        if ($86) {\n                            return Foreign_Object_ST.poke(k)(v)(acc);\n                        };\n                        return pure(acc);\n                    };\n                };\n            };\n            return function __do() {\n                var m$prime = Foreign_Object_ST[\"new\"]();\n                return foldM1(step)(m$prime)(m)();\n            };\n        })();\n        return $foreign.runST(go);\n    };\n};\nvar filterKeys = function (predicate) {\n    return filterWithKey(function ($98) {\n        return Data_Function[\"const\"](predicate($98));\n    });\n};\nvar filter = function (predicate) {\n    return filterWithKey(Data_Function[\"const\"](predicate));\n};\nvar eqObject = function (dictEq) {\n    var isSubmap1 = isSubmap(dictEq);\n    return {\n        eq: function (m1) {\n            return function (m2) {\n                return isSubmap1(m1)(m2) && isSubmap1(m2)(m1);\n            };\n        }\n    };\n};\nvar ordObject = function (dictOrd) {\n    var compare = Data_Ord.compare(Data_Ord.ordArray(ordTuple(dictOrd)));\n    var eqObject1 = eqObject(dictOrd.Eq0());\n    return {\n        compare: function (m1) {\n            return function (m2) {\n                return compare(toAscArray(m1))(toAscArray(m2));\n            };\n        },\n        Eq0: function () {\n            return eqObject1;\n        }\n    };\n};\nvar eq1Object = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqObject(dictEq));\n    }\n};\nvar $$delete = function (k) {\n    return mutate(Foreign_Object_ST[\"delete\"](k));\n};\nvar pop = function (k) {\n    return function (m) {\n        return mapFlipped(lookup(k)(m))(function (a) {\n            return new Data_Tuple.Tuple(a, $$delete(k)(m));\n        });\n    };\n};\nvar alter = function (f) {\n    return function (k) {\n        return function (m) {\n            var v = f(lookup(k)(m));\n            if (v instanceof Data_Maybe.Nothing) {\n                return $$delete(k)(m);\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return insert(k)(v.value0)(m);\n            };\n            throw new Error(\"Failed pattern match at Foreign.Object (line 210, column 15 - line 212, column 25): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar update = function (f) {\n    return function (k) {\n        return function (m) {\n            return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);\n        };\n    };\n};\nexport {\n    empty,\n    size,\n    keys,\n    all,\n    runST,\n    toArrayWithKey\n} from \"./foreign.js\";\nexport {\n    isEmpty,\n    singleton,\n    insert,\n    lookup,\n    toUnfoldable,\n    toAscUnfoldable,\n    fromFoldable,\n    fromFoldableWith,\n    fromFoldableWithIndex,\n    fromHomogeneous,\n    $$delete as delete,\n    pop,\n    member,\n    alter,\n    update,\n    mapWithKey,\n    filterWithKey,\n    filterKeys,\n    filter,\n    values,\n    union,\n    unionWith,\n    unions,\n    isSubmap,\n    fold,\n    foldMap,\n    foldM,\n    foldMaybe,\n    thawST,\n    freezeST,\n    functorObject,\n    functorWithIndexObject,\n    foldableObject,\n    foldableWithIndexObject,\n    traversableObject,\n    traversableWithIndexObject,\n    eqObject,\n    eq1Object,\n    ordObject,\n    showObject,\n    semigroupObject,\n    monoidObject\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Bolson_Core from \"../Bolson.Core/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Lazy from \"../Control.Lazy/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_FastVect_FastVect from \"../Data.FastVect.FastVect/index.js\";\nimport * as Data_Filterable from \"../Data.Filterable/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as FRP_Event_Class from \"../FRP.Event.Class/index.js\";\nimport * as Foreign_Object from \"../Foreign.Object/index.js\";\nimport * as Record_Builder from \"../Record.Builder/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar mapAccum = /* #__PURE__ */ FRP_Event_Class.mapAccum(FRP_Event.eventIsEvent);\nvar keepLatest = /* #__PURE__ */ FRP_Event_Class.keepLatest(FRP_Event.eventIsEvent);\nvar map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);\nvar merge = /* #__PURE__ */ FRP_Event.merge(Data_Foldable.foldableArray);\nvar filter = /* #__PURE__ */ Data_Filterable.filter(FRP_Event.filterableEvent);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Data_Eq.eqInt);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Control_Monad_ST_Internal.bindST);\nvar voidLeft = /* #__PURE__ */ Data_Functor.voidLeft(Data_Functor.functorArray);\nvar toArray = /* #__PURE__ */ Data_FastVect_FastVect.toArray();\nvar empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray);\nvar fix = /* #__PURE__ */ Control_Lazy.fix(Control_Lazy.lazyFn);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Control_Monad_ST_Internal.functorST);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_FastVect_FastVect.functorVect);\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST);\nvar for_1 = /* #__PURE__ */ for_(Data_Foldable.foldableMaybe);\nvar composeFlipped = /* #__PURE__ */ Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder);\nvar insert = /* #__PURE__ */ Record_Builder.insert()()({\n    reflectSymbol: function () {\n        return \"id\";\n    }\n});\nvar modify = /* #__PURE__ */ Record_Builder.modify()()({\n    reflectSymbol: function () {\n        return \"parent\";\n    }\n});\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar when = /* #__PURE__ */ Control_Applicative.when(Control_Monad_ST_Internal.applicativeST);\nvar for_2 = /* #__PURE__ */ for_(Data_Foldable.foldableArray);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar map3 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar append = /* #__PURE__ */ Data_Semigroup.append(/* #__PURE__ */ Control_Monad_ST_Internal.semigroupST(Data_Semigroup.semigroupString));\nvar traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(Data_Foldable.foldableArray);\nvar append1 = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Foreign_Object.foldableObject);\nvar applySecond = /* #__PURE__ */ Control_Apply.applySecond(Control_Monad_ST_Internal.applyST);\nvar Begin = /* #__PURE__ */ (function () {\n    function Begin() {\n\n    };\n    Begin.value = new Begin();\n    return Begin;\n})();\nvar Middle = /* #__PURE__ */ (function () {\n    function Middle() {\n\n    };\n    Middle.value = new Middle();\n    return Middle;\n})();\nvar End = /* #__PURE__ */ (function () {\n    function End() {\n\n    };\n    End.value = new End();\n    return End;\n})();\nvar MutAr = function (x) {\n    return x;\n};\nvar switcher = function (f) {\n    return function (event) {\n        var counter = function (ev) {\n            var fn = function (a) {\n                return function (b) {\n                    return new Data_Tuple.Tuple(a + 1 | 0, new Data_Tuple.Tuple(b, a));\n                };\n            };\n            return mapAccum(fn)(0)(ev);\n        };\n        return new Bolson_Core[\"DynamicChildren$prime\"](keepLatest(FRP_Event.memoize(counter(event))(function (cenv) {\n            return map(function (v) {\n                return merge([ map(Data_Function[\"const\"](Bolson_Core.Remove.value))(filter((function () {\n                    var $197 = eq(v.value1 + 1 | 0);\n                    return function ($198) {\n                        return $197(Data_Tuple.snd($198));\n                    };\n                })())(cenv)), pure(new Bolson_Core.Insert(f(v.value0))) ]);\n            })(cenv);\n        })));\n    };\n};\nvar internalPortalComplexSimple = function () {\n    return function () {\n        return function () {\n            return function (isGlobal) {\n                return function (scopeF) {\n                    return function (v) {\n                        return function (toBeam) {\n                            return function (closure) {\n                                var go = function (psr) {\n                                    return function (interpreter) {\n                                        return FRP_Event.makeLemmingEventO(function (v1, k) {\n                                            var av = $foreign.mutAr(voidLeft(toArray(toBeam))({\n                                                id: \"\",\n                                                entity: new Bolson_Core[\"EventfulElement$prime\"](empty)\n                                            }))();\n                                            var actualized = merge(mapWithIndex(function (ix) {\n                                                return fix(function (f) {\n                                                    return function (entity) {\n                                                        if (entity instanceof Bolson_Core[\"Element$prime\"]) {\n                                                            return (function (v2) {\n                                                                return v2((function () {\n                                                                    var $100 = {};\n                                                                    for (var $101 in psr) {\n                                                                        if ({}.hasOwnProperty.call(psr, $101)) {\n                                                                            $100[$101] = psr[$101];\n                                                                        };\n                                                                    };\n                                                                    $100.parent = Data_Maybe.Nothing.value;\n                                                                    $100.scope = scopeF(psr.scope);\n                                                                    $100.raiseId = function (id) {\n                                                                        return $foreign.unsafeUpdateMutAr(ix)({\n                                                                            id: id,\n                                                                            entity: entity\n                                                                        })(av);\n                                                                    };\n                                                                    return $100;\n                                                                })())(interpreter);\n                                                            })(v.toEltO1(entity.value0));\n                                                        };\n                                                        return f(v.wrapElt(entity));\n                                                    };\n                                                });\n                                            })(toArray(toBeam)));\n                                            var u0 = v1(actualized, k);\n                                            var av2 = Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit))();\n                                            var idz = map1(Unsafe_Coerce.unsafeCoerce)($foreign.readAr(av))();\n                                            var injectable = map2(function (v2) {\n                                                return function (specialization) {\n                                                    return new Bolson_Core[\"Element$prime\"](v.fromEltO1(function (psr2) {\n                                                        return function (itp) {\n                                                            return FRP_Event.makeLemmingEventO(function (v3, k2) {\n                                                                psr2.raiseId(v2.id)();\n                                                                for_1(psr2.parent)(function (pt) {\n                                                                    return function () {\n                                                                        return k2(v.giveNewParent(itp)(Record_Builder.build(composeFlipped(insert(Type_Proxy[\"Proxy\"].value)(v2.id))(modify(Type_Proxy[\"Proxy\"].value)(Data_Function[\"const\"](pt))))(psr2))(v2.entity)(specialization));\n                                                                    };\n                                                                })();\n                                                                return pure1(Data_Unit.unit);\n                                                            });\n                                                        };\n                                                    }));\n                                                };\n                                            })(idz);\n                                            var v2 = v.toEltO2(closure(injectable));\n                                            var u = v1(v2(psr)(interpreter), k);\n                                            $$void(Control_Monad_ST_Internal.write(u)(av2))();\n                                            return function __do() {\n                                                u0();\n                                                when(!isGlobal)(for_2(toArray(idz))(function (v3) {\n                                                    return function () {\n                                                        return k(v.deleteFromCache(interpreter)({\n                                                            id: v3.id\n                                                        }));\n                                                    };\n                                                }))();\n                                                var av2c = Control_Monad_ST_Internal.read(av2)();\n                                                return av2c();\n                                            };\n                                        });\n                                    };\n                                };\n                                return v.fromEltO2(go);\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar internalPortalComplexSimple1 = /* #__PURE__ */ internalPortalComplexSimple()()();\nvar portalComplexSimple = function () {\n    return function () {\n        return function () {\n            return function (portalArgs) {\n                return function (toBeam) {\n                    return function (closure) {\n                        return internalPortalComplexSimple1(false)(identity)(portalArgs)(toBeam)(closure);\n                    };\n                };\n            };\n        };\n    };\n};\nvar globalPortalComplexSimple = function () {\n    return function () {\n        return function () {\n            return function (portalArgs) {\n                return function (toBeam) {\n                    return function (closure) {\n                        return internalPortalComplexSimple1(true)(Data_Function[\"const\"](Bolson_Core.Global.value))(portalArgs)(toBeam)(closure);\n                    };\n                };\n            };\n        };\n    };\n};\nvar flatten = function (v) {\n    return function (psr) {\n        return function (interpreter) {\n            var element = function (v1) {\n                return v1(psr)(interpreter);\n            };\n            return function (v1) {\n                if (v1 instanceof Bolson_Core[\"FixedChildren$prime\"]) {\n                    return merge(map3(flatten(v)(psr)(interpreter))(v1.value0));\n                };\n                if (v1 instanceof Bolson_Core[\"EventfulElement$prime\"]) {\n                    return keepLatest(map(flatten(v)(psr)(interpreter))(v1.value0));\n                };\n                if (v1 instanceof Bolson_Core[\"Element$prime\"]) {\n                    return element(v.toElt(v1.value0));\n                };\n                if (v1 instanceof Bolson_Core[\"DynamicChildren$prime\"]) {\n                    return FRP_Event.makeLemmingEventO(function (v2, v3) {\n                        var cancelInner = Control_Monad_ST_Internal[\"new\"](Foreign_Object.empty)();\n                        var cancelOuter = v2(v1.value0, function (inner) {\n                            var myUnsubId = v.ids(interpreter)();\n                            var myUnsub = Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit))();\n                            var eltsUnsubId = v.ids(interpreter)();\n                            var eltsUnsub = Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit))();\n                            var myIds = Control_Monad_ST_Internal[\"new\"]([  ])();\n                            var myImmediateCancellation = Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit))();\n                            var myScope = map1(Bolson_Core.Local.create)((function () {\n                                if (psr.scope instanceof Bolson_Core.Global) {\n                                    return v.ids(interpreter);\n                                };\n                                if (psr.scope instanceof Bolson_Core.Local) {\n                                    return append(pure1(psr.scope.value0))(append(pure1(\"!\"))(v.ids(interpreter)));\n                                };\n                                throw new Error(\"Failed pattern match at Bolson.Control (line 547, column 17 - line 549, column 67): \" + [ psr.scope.constructor.name ]);\n                            })())();\n                            var stageRef = Control_Monad_ST_Internal[\"new\"](Begin.value)();\n                            var c0 = v2(inner, function (kid$prime) {\n                                var stage = Control_Monad_ST_Internal.read(stageRef)();\n                                if (kid$prime instanceof Bolson_Core.Logic && stage instanceof Middle) {\n                                    var curId = Control_Monad_ST_Internal.read(myIds)();\n                                    return traverse_(function (i) {\n                                        return function () {\n                                            return v3(v.doLogic(kid$prime.value0)(interpreter)(i));\n                                        };\n                                    })(curId)();\n                                };\n                                if (kid$prime instanceof Bolson_Core.Remove && stage instanceof Middle) {\n                                    $$void(Control_Monad_ST_Internal.write(End.value)(stageRef))();\n                                    var mic = function __do() {\n                                        var idRef = Control_Monad_ST_Internal.read(myIds)();\n                                        for_2(idRef)(function (old) {\n                                            return for_1(psr.parent)(function (pnt) {\n                                                return function () {\n                                                    return v3(v.disconnectElement(interpreter)({\n                                                        id: old,\n                                                        parent: pnt,\n                                                        scope: myScope\n                                                    }));\n                                                };\n                                            });\n                                        })();\n                                        var myu = Control_Monad_ST_Internal.read(myUnsub)();\n                                        myu();\n                                        var eltu = Control_Monad_ST_Internal.read(eltsUnsub)();\n                                        eltu();\n                                        $$void(Control_Monad_ST_Internal.modify(Foreign_Object[\"delete\"](myUnsubId))(cancelInner))();\n                                        return $$void(Control_Monad_ST_Internal.modify(Foreign_Object[\"delete\"](eltsUnsubId))(cancelInner))();\n                                    };\n                                    $$void(Control_Monad_ST_Internal.write(mic)(myImmediateCancellation))();\n                                    return mic();\n                                };\n                                if (kid$prime instanceof Bolson_Core.Insert && stage instanceof Begin) {\n                                    $$void(Control_Monad_ST_Internal.write(Middle.value)(stageRef))();\n                                    var c1 = v2(flatten(v)((function () {\n                                        var $132 = {};\n                                        for (var $133 in psr) {\n                                            if ({}.hasOwnProperty.call(psr, $133)) {\n                                                $132[$133] = psr[$133];\n                                            };\n                                        };\n                                        $132.scope = myScope;\n                                        $132.raiseId = function (id) {\n                                            return $$void(Control_Monad_ST_Internal.modify(append1([ id ]))(myIds));\n                                        };\n                                        return $132;\n                                    })())(interpreter)(kid$prime.value0), v3);\n                                    $$void(Control_Monad_ST_Internal.modify(Foreign_Object.insert(eltsUnsubId)(c1))(cancelInner))();\n                                    return $$void(Control_Monad_ST_Internal.write(c1)(eltsUnsub))();\n                                };\n                                return Data_Unit.unit;\n                            });\n                            $$void(Control_Monad_ST_Internal.write(c0)(myUnsub))();\n                            $$void(Control_Monad_ST_Internal.modify(Foreign_Object.insert(myUnsubId)(c0))(cancelInner))();\n                            var mican = Control_Monad_ST_Internal.read(myImmediateCancellation)();\n                            return mican();\n                        });\n                        return function __do() {\n                            bind(Control_Monad_ST_Internal.read(cancelInner))(foldl(applySecond)(pure1(Data_Unit.unit)))();\n                            return cancelOuter();\n                        };\n                    });\n                };\n                throw new Error(\"Failed pattern match at Bolson.Control (line 520, column 17 - line 610, column 20): \" + [ v1.constructor.name ]);\n            };\n        };\n    };\n};\nvar internalPortalComplexComplex = function () {\n    return function () {\n        return function () {\n            return function (isGlobal) {\n                return function (scopeF) {\n                    return function (flatArgs) {\n                        return function (v) {\n                            return function (toBeam) {\n                                return function (closure) {\n                                    var go = function (psr) {\n                                        return function (interpreter) {\n                                            return FRP_Event.makeLemmingEventO(function (v1, k) {\n                                                var av = $foreign.mutAr(voidLeft(toArray(toBeam))({\n                                                    id: \"\",\n                                                    entity: new Bolson_Core[\"EventfulElement$prime\"](empty)\n                                                }))();\n                                                var actualized = merge(mapWithIndex(function (ix) {\n                                                    return fix(function (f) {\n                                                        return function (entity) {\n                                                            if (entity instanceof Bolson_Core[\"Element$prime\"]) {\n                                                                return (function (v2) {\n                                                                    return v2((function () {\n                                                                        var $150 = {};\n                                                                        for (var $151 in psr) {\n                                                                            if ({}.hasOwnProperty.call(psr, $151)) {\n                                                                                $150[$151] = psr[$151];\n                                                                            };\n                                                                        };\n                                                                        $150.parent = Data_Maybe.Nothing.value;\n                                                                        $150.scope = scopeF(psr.scope);\n                                                                        $150.raiseId = function (id) {\n                                                                            return $foreign.unsafeUpdateMutAr(ix)({\n                                                                                id: id,\n                                                                                entity: entity\n                                                                            })(av);\n                                                                        };\n                                                                        return $150;\n                                                                    })())(interpreter);\n                                                                })(v.toElt(entity.value0));\n                                                            };\n                                                            return f(v.wrapElt(entity));\n                                                        };\n                                                    });\n                                                })(toArray(toBeam)));\n                                                var u0 = v1(actualized, k);\n                                                var av2 = Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit))();\n                                                var idz = map1(Unsafe_Coerce.unsafeCoerce)($foreign.readAr(av))();\n                                                var injectable = map2(function (v2) {\n                                                    return function (specialization) {\n                                                        return new Bolson_Core[\"Element$prime\"](v.fromEltO1(function (psr2) {\n                                                            return function (itp) {\n                                                                return FRP_Event.makeLemmingEventO(function (v3, k2) {\n                                                                    psr2.raiseId(v2.id)();\n                                                                    for_1(psr2.parent)(function (pt) {\n                                                                        return function () {\n                                                                            return k2(v.giveNewParent(itp)(Record_Builder.build(composeFlipped(insert(Type_Proxy[\"Proxy\"].value)(v2.id))(modify(Type_Proxy[\"Proxy\"].value)(Data_Function[\"const\"](pt))))(psr2))(v2.entity)(specialization));\n                                                                        };\n                                                                    })();\n                                                                    return pure1(Data_Unit.unit);\n                                                                });\n                                                            };\n                                                        }));\n                                                    };\n                                                })(idz);\n                                                var realized = flatten(flatArgs)(psr)(interpreter)(closure(injectable));\n                                                var u = v1(realized, k);\n                                                $$void(Control_Monad_ST_Internal.write(u)(av2))();\n                                                return function __do() {\n                                                    u0();\n                                                    when(!isGlobal)(for_2(toArray(idz))(function (v2) {\n                                                        return function () {\n                                                            return k(v.deleteFromCache(interpreter)({\n                                                                id: v2.id\n                                                            }));\n                                                        };\n                                                    }))();\n                                                    var av2c = Control_Monad_ST_Internal.read(av2)();\n                                                    return av2c();\n                                                };\n                                            });\n                                        };\n                                    };\n                                    return new Bolson_Core[\"Element$prime\"](v.fromEltO2(go));\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar internalPortalComplexComplex1 = /* #__PURE__ */ internalPortalComplexComplex()()();\nvar globalPortalComplexComplex = function () {\n    return function () {\n        return function () {\n            return function (flatArgs) {\n                return function (portalArgs) {\n                    return function (toBeam) {\n                        return function (closure) {\n                            return internalPortalComplexComplex1(true)(Data_Function[\"const\"](Bolson_Core.Global.value))(flatArgs)(portalArgs)(toBeam)(closure);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar portalComplexComplex = function () {\n    return function () {\n        return function () {\n            return function (flatArgs) {\n                return function (portalArgs) {\n                    return function (toBeam) {\n                        return function (closure) {\n                            return internalPortalComplexComplex1(false)(identity)(flatArgs)(portalArgs)(toBeam)(closure);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar internalPortalSimpleComplex = function () {\n    return function () {\n        return function () {\n            return function (isGlobal) {\n                return function (scopeF) {\n                    return function (flatArgs) {\n                        return function (v) {\n                            return function (toBeam) {\n                                return function (closure) {\n                                    var go = function (psr) {\n                                        return function (interpreter) {\n                                            return FRP_Event.makeLemmingEventO(function (v1, k) {\n                                                var av = $foreign.mutAr(voidLeft(toArray(toBeam))({\n                                                    id: \"\",\n                                                    entity: new Bolson_Core[\"EventfulElement$prime\"](empty)\n                                                }))();\n                                                var actualized = merge(mapWithIndex(function (ix) {\n                                                    return function (entity) {\n                                                        return (function (v2) {\n                                                            return v2((function () {\n                                                                var $173 = {};\n                                                                for (var $174 in psr) {\n                                                                    if ({}.hasOwnProperty.call(psr, $174)) {\n                                                                        $173[$174] = psr[$174];\n                                                                    };\n                                                                };\n                                                                $173.parent = Data_Maybe.Nothing.value;\n                                                                $173.scope = scopeF(psr.scope);\n                                                                $173.raiseId = function (id) {\n                                                                    return $foreign.unsafeUpdateMutAr(ix)({\n                                                                        id: id,\n                                                                        entity: new Bolson_Core[\"Element$prime\"](entity)\n                                                                    })(av);\n                                                                };\n                                                                return $173;\n                                                            })())(interpreter);\n                                                        })(v.toElt(entity));\n                                                    };\n                                                })(toArray(toBeam)));\n                                                var u0 = v1(actualized, k);\n                                                var av2 = Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit))();\n                                                var idz = map1(Unsafe_Coerce.unsafeCoerce)($foreign.readAr(av))();\n                                                var injectable = map2(function (v2) {\n                                                    return function (specialization) {\n                                                        return v.fromEltO1(function (psr2) {\n                                                            return function (itp) {\n                                                                return FRP_Event.makeLemmingEventO(function (v3, k2) {\n                                                                    psr2.raiseId(v2.id)();\n                                                                    for_1(psr2.parent)(function (pt) {\n                                                                        return function () {\n                                                                            return k2(v.giveNewParent(itp)(Record_Builder.build(composeFlipped(insert(Type_Proxy[\"Proxy\"].value)(v2.id))(modify(Type_Proxy[\"Proxy\"].value)(Data_Function[\"const\"](pt))))(psr2))(v2.entity)(specialization));\n                                                                        };\n                                                                    })();\n                                                                    return pure1(Data_Unit.unit);\n                                                                });\n                                                            };\n                                                        });\n                                                    };\n                                                })(idz);\n                                                var realized = flatten(flatArgs)(psr)(interpreter)(closure(injectable));\n                                                var u = v1(realized, k);\n                                                $$void(Control_Monad_ST_Internal.write(u)(av2))();\n                                                return function __do() {\n                                                    u0();\n                                                    when(!isGlobal)(for_2(toArray(idz))(function (v2) {\n                                                        return function () {\n                                                            return k(v.deleteFromCache(interpreter)({\n                                                                id: v2.id\n                                                            }));\n                                                        };\n                                                    }))();\n                                                    var av2c = Control_Monad_ST_Internal.read(av2)();\n                                                    return av2c();\n                                                };\n                                            });\n                                        };\n                                    };\n                                    return new Bolson_Core[\"Element$prime\"](v.fromEltO2(go));\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar internalPortalSimpleComplex1 = /* #__PURE__ */ internalPortalSimpleComplex()()();\nvar globalPortalSimpleComplex = function () {\n    return function () {\n        return function () {\n            return function (flatArgs) {\n                return function (portalArgs) {\n                    return function (toBeam) {\n                        return function (closure) {\n                            return internalPortalSimpleComplex1(true)(Data_Function[\"const\"](Bolson_Core.Global.value))(flatArgs)(portalArgs)(toBeam)(closure);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar portalSimpleComplex = function () {\n    return function () {\n        return function () {\n            return function (flatArgs) {\n                return function (portalArgs) {\n                    return function (toBeam) {\n                        return function (closure) {\n                            return internalPortalSimpleComplex1(false)(identity)(flatArgs)(portalArgs)(toBeam)(closure);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar fixComplexComplex = function (flatArgs) {\n    return function (v) {\n        return function (f) {\n            var go = function (i) {\n                return function (interpret) {\n                    return FRP_Event.makeLemmingEventO(function (v1, k) {\n                        var av = Control_Monad_ST_Internal[\"new\"](Data_Maybe.Nothing.value)();\n                        var nn = f(new Bolson_Core[\"Element$prime\"](v.fromElt(function (ii) {\n                            return function (v2) {\n                                return FRP_Event.makeLemmingEventO(function (v3, k0) {\n                                    (function __do() {\n                                        var v4 = Control_Monad_ST_Internal.read(av)();\n                                        if (v4 instanceof Data_Maybe.Nothing) {\n                                            return Data_Unit.unit;\n                                        };\n                                        if (v4 instanceof Data_Maybe.Just) {\n                                            return for_1(ii.parent)(function (p$prime) {\n                                                return when(v4.value0 !== p$prime)(function __do() {\n                                                    ii.raiseId(v4.value0)();\n                                                    return k0(v.connectToParent(interpret)({\n                                                        id: v4.value0,\n                                                        parent: p$prime\n                                                    }));\n                                                });\n                                            })();\n                                        };\n                                        throw new Error(\"Failed pattern match at Bolson.Control (line 635, column 27 - line 643, column 16): \" + [ v4.constructor.name ]);\n                                    })();\n                                    return pure1(Data_Unit.unit);\n                                });\n                            };\n                        })));\n                        return v1(flatten(flatArgs)((function () {\n                            var $192 = {};\n                            for (var $193 in i) {\n                                if ({}.hasOwnProperty.call(i, $193)) {\n                                    $192[$193] = i[$193];\n                                };\n                            };\n                            $192.parent = i.parent;\n                            $192.scope = i.scope;\n                            $192.raiseId = function (s) {\n                                return function __do() {\n                                    i.raiseId(s)();\n                                    return $$void(Control_Monad_ST_Internal.write(new Data_Maybe.Just(s))(av))();\n                                };\n                            };\n                            return $192;\n                        })())(interpret)(nn), k);\n                    });\n                };\n            };\n            return new Bolson_Core[\"Element$prime\"](v.fromElt(go));\n        };\n    };\n};\nexport {\n    flatten,\n    globalPortalComplexComplex,\n    globalPortalSimpleComplex,\n    globalPortalComplexSimple,\n    portalComplexComplex,\n    portalSimpleComplex,\n    portalComplexSimple,\n    fixComplexComplex,\n    switcher\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar map = /* #__PURE__ */ Data_Functor.map(Data_List_Types.functorList);\nvar CatQueue = /* #__PURE__ */ (function () {\n    function CatQueue(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CatQueue.create = function (value0) {\n        return function (value1) {\n            return new CatQueue(value0, value1);\n        };\n    };\n    return CatQueue;\n})();\nvar unsnoc = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v.value1 instanceof Data_List_Types.Cons) {\n            $tco_done = true;\n            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value1.value0, new CatQueue(v.value0, v.value1.value1)));\n        };\n        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v.value1 instanceof Data_List_Types.Nil) {\n            $copy_v = new CatQueue(Data_List_Types.Nil.value, Data_List.reverse(v.value0));\n            return;\n        };\n        throw new Error(\"Failed pattern match at Data.CatQueue (line 92, column 1 - line 92, column 63): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar uncons = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n            $tco_done = true;\n            return Data_Maybe.Nothing.value;\n        };\n        if (v.value0 instanceof Data_List_Types.Nil) {\n            $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);\n            return;\n        };\n        if (v.value0 instanceof Data_List_Types.Cons) {\n            $tco_done = true;\n            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));\n        };\n        throw new Error(\"Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): \" + [ v.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar snoc = function (v) {\n    return function (a) {\n        return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));\n    };\n};\nvar showCatQueue = function (dictShow) {\n    var show = Data_Show.show(Data_List_Types.showList(dictShow));\n    return {\n        show: function (v) {\n            return \"(CatQueue \" + (show(v.value0) + (\" \" + (show(v.value1) + \")\")));\n        }\n    };\n};\nvar $$null = function (v) {\n    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {\n        return true;\n    };\n    return false;\n};\nvar length = function (v) {\n    return Data_List.length(v.value0) + Data_List.length(v.value1) | 0;\n};\nvar functorCatQueue = {\n    map: function (f) {\n        return function (v) {\n            return new CatQueue(map(f)(v.value0), map(f)(v.value1));\n        };\n    }\n};\nvar foldableCatQueue = {\n    foldMap: function (dictMonoid) {\n        return Data_Foldable.foldMapDefaultL(foldableCatQueue)(dictMonoid);\n    },\n    foldr: function (f) {\n        return Data_Foldable.foldrDefault(foldableCatQueue)(f);\n    },\n    foldl: function (f) {\n        var go = function ($copy_acc) {\n            return function ($copy_q) {\n                var $tco_var_acc = $copy_acc;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(acc, q) {\n                    var v = uncons(q);\n                    if (v instanceof Data_Maybe.Just) {\n                        $tco_var_acc = f(acc)(v.value0.value0);\n                        $copy_q = v.value0.value1;\n                        return;\n                    };\n                    if (v instanceof Data_Maybe.Nothing) {\n                        $tco_done = true;\n                        return acc;\n                    };\n                    throw new Error(\"Failed pattern match at Data.CatQueue (line 147, column 16 - line 149, column 22): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_acc, $copy_q);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    }\n};\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(foldableCatQueue);\nvar semigroupCatQueue = {\n    append: /* #__PURE__ */ foldl(snoc)\n};\nvar empty = /* #__PURE__ */ (function () {\n    return new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);\n})();\nvar monoidCatQueue = {\n    mempty: empty,\n    Semigroup0: function () {\n        return semigroupCatQueue;\n    }\n};\nvar singleton = /* #__PURE__ */ snoc(empty);\nvar fromFoldable = function (dictFoldable) {\n    var foldMap = Data_Foldable.foldMap(dictFoldable)(monoidCatQueue);\n    return function (f) {\n        return foldMap(singleton)(f);\n    };\n};\nvar traversableCatQueue = {\n    traverse: function (dictApplicative) {\n        var Apply0 = dictApplicative.Apply0();\n        var map1 = Data_Functor.map(Apply0.Functor0());\n        var lift2 = Control_Apply.lift2(Apply0);\n        var pure = Control_Applicative.pure(dictApplicative);\n        return function (f) {\n            var $123 = map1(foldl(snoc)(empty));\n            var $124 = foldl(function (acc) {\n                var $126 = lift2(snoc)(acc);\n                return function ($127) {\n                    return $126(f($127));\n                };\n            })(pure(empty));\n            return function ($125) {\n                return $123($124($125));\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        return Data_Traversable.sequenceDefault(traversableCatQueue)(dictApplicative);\n    },\n    Functor0: function () {\n        return functorCatQueue;\n    },\n    Foldable1: function () {\n        return foldableCatQueue;\n    }\n};\nvar unfoldable1CatQueue = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return snoc(memo)(v.value0);\n                        };\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = snoc(memo)(v.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatQueue (line 154, column 24 - line 156, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(empty);\n        };\n    }\n};\nvar unfoldableCatQueue = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return memo;\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = snoc(memo)(v.value0.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatQueue (line 161, column 24 - line 163, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(empty);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1CatQueue;\n    }\n};\nvar cqEq = function (dictEq) {\n    var elemEq = Data_Eq.eq(dictEq);\n    var go = function ($copy_xs) {\n        return function ($copy_ys) {\n            var $tco_var_xs = $copy_xs;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(xs, ys) {\n                var v = uncons(ys);\n                var v1 = uncons(xs);\n                if (v1 instanceof Data_Maybe.Just && (v instanceof Data_Maybe.Just && elemEq(v1.value0.value0)(v.value0.value0))) {\n                    $tco_var_xs = v1.value0.value1;\n                    $copy_ys = v.value0.value1;\n                    return;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return true;\n                };\n                $tco_done = true;\n                return false;\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar eqCatQueue = function (dictEq) {\n    return {\n        eq: cqEq(dictEq)\n    };\n};\nvar cqCompare = function (dictOrd) {\n    var elemCompare = Data_Ord.compare(dictOrd);\n    var go = function ($copy_xs) {\n        return function ($copy_ys) {\n            var $tco_var_xs = $copy_xs;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(xs, ys) {\n                var v = uncons(ys);\n                var v1 = uncons(xs);\n                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just) {\n                    var v2 = elemCompare(v1.value0.value0)(v.value0.value0);\n                    if (v2 instanceof Data_Ordering.EQ) {\n                        $tco_var_xs = v1.value0.value1;\n                        $copy_ys = v.value0.value1;\n                        return;\n                    };\n                    $tco_done = true;\n                    return v2;\n                };\n                if (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Ordering.GT.value;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Just) {\n                    $tco_done = true;\n                    return Data_Ordering.LT.value;\n                };\n                if (v1 instanceof Data_Maybe.Nothing && v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return Data_Ordering.EQ.value;\n                };\n                throw new Error(\"Failed pattern match at Data.CatQueue (line 117, column 16 - line 124, column 30): \" + [ v1.constructor.name, v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar ordCatQueue = function (dictOrd) {\n    var eqCatQueue1 = eqCatQueue(dictOrd.Eq0());\n    return {\n        compare: cqCompare(dictOrd),\n        Eq0: function () {\n            return eqCatQueue1;\n        }\n    };\n};\nvar cons = function (a) {\n    return function (v) {\n        return new CatQueue(new Data_List_Types.Cons(a, v.value0), v.value1);\n    };\n};\nvar monadCatQueue = {\n    Applicative0: function () {\n        return applicativeCatQueue;\n    },\n    Bind1: function () {\n        return bindCatQueue;\n    }\n};\nvar bindCatQueue = {\n    bind: /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ Data_Foldable.foldMap(foldableCatQueue)(monoidCatQueue)),\n    Apply0: function () {\n        return $lazy_applyCatQueue(0);\n    }\n};\nvar applicativeCatQueue = {\n    pure: singleton,\n    Apply0: function () {\n        return $lazy_applyCatQueue(0);\n    }\n};\nvar $lazy_applyCatQueue = /* #__PURE__ */ $runtime_lazy(\"applyCatQueue\", \"Data.CatQueue\", function () {\n    return {\n        apply: Control_Monad.ap(monadCatQueue),\n        Functor0: function () {\n            return functorCatQueue;\n        }\n    };\n});\nvar applyCatQueue = /* #__PURE__ */ $lazy_applyCatQueue(174);\nvar altCatQueue = {\n    alt: /* #__PURE__ */ Data_Semigroup.append(semigroupCatQueue),\n    Functor0: function () {\n        return functorCatQueue;\n    }\n};\nvar plusCatQueue = {\n    empty: empty,\n    Alt0: function () {\n        return altCatQueue;\n    }\n};\nvar alternativeCatQueue = {\n    Applicative0: function () {\n        return applicativeCatQueue;\n    },\n    Plus1: function () {\n        return plusCatQueue;\n    }\n};\nvar monadPlusCatQueue = {\n    Monad0: function () {\n        return monadCatQueue;\n    },\n    Alternative1: function () {\n        return alternativeCatQueue;\n    }\n};\nexport {\n    CatQueue,\n    empty,\n    $$null as null,\n    singleton,\n    length,\n    cons,\n    snoc,\n    uncons,\n    unsnoc,\n    fromFoldable,\n    eqCatQueue,\n    ordCatQueue,\n    semigroupCatQueue,\n    monoidCatQueue,\n    showCatQueue,\n    foldableCatQueue,\n    unfoldable1CatQueue,\n    unfoldableCatQueue,\n    traversableCatQueue,\n    functorCatQueue,\n    applyCatQueue,\n    applicativeCatQueue,\n    bindCatQueue,\n    monadCatQueue,\n    altCatQueue,\n    plusCatQueue,\n    alternativeCatQueue,\n    monadPlusCatQueue\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_CatQueue from \"../Data.CatQueue/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar CatNil = /* #__PURE__ */ (function () {\n    function CatNil() {\n\n    };\n    CatNil.value = new CatNil();\n    return CatNil;\n})();\nvar CatCons = /* #__PURE__ */ (function () {\n    function CatCons(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    CatCons.create = function (value0) {\n        return function (value1) {\n            return new CatCons(value0, value1);\n        };\n    };\n    return CatCons;\n})();\nvar showCatList = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        show: function (v) {\n            if (v instanceof CatNil) {\n                return \"CatNil\";\n            };\n            if (v instanceof CatCons) {\n                return \"(CatList \" + (show(v.value0) + (\" \" + (Data_Show.show(Data_CatQueue.showCatQueue(showCatList(dictShow)))(v.value1) + \")\")));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 147, column 1 - line 149, column 71): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar $$null = function (v) {\n    if (v instanceof CatNil) {\n        return true;\n    };\n    return false;\n};\nvar link = function (v) {\n    return function (v1) {\n        if (v instanceof CatNil) {\n            return v1;\n        };\n        if (v1 instanceof CatNil) {\n            return v;\n        };\n        if (v instanceof CatCons) {\n            return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));\n        };\n        throw new Error(\"Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): \" + [ v.constructor.name, v1.constructor.name ]);\n    };\n};\nvar foldr = function (k) {\n    return function (b) {\n        return function (q) {\n            var foldl = function ($copy_v) {\n                return function ($copy_v1) {\n                    return function ($copy_v2) {\n                        var $tco_var_v = $copy_v;\n                        var $tco_var_v1 = $copy_v1;\n                        var $tco_done = false;\n                        var $tco_result;\n                        function $tco_loop(v, v1, v2) {\n                            if (v2 instanceof Data_List_Types.Nil) {\n                                $tco_done = true;\n                                return v1;\n                            };\n                            if (v2 instanceof Data_List_Types.Cons) {\n                                $tco_var_v = v;\n                                $tco_var_v1 = v(v1)(v2.value0);\n                                $copy_v2 = v2.value1;\n                                return;\n                            };\n                            throw new Error(\"Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n                        };\n                        while (!$tco_done) {\n                            $tco_result = $tco_loop($tco_var_v, $tco_var_v1, $copy_v2);\n                        };\n                        return $tco_result;\n                    };\n                };\n            };\n            var go = function ($copy_xs) {\n                return function ($copy_ys) {\n                    var $tco_var_xs = $copy_xs;\n                    var $tco_done1 = false;\n                    var $tco_result;\n                    function $tco_loop(xs, ys) {\n                        var v = Data_CatQueue.uncons(xs);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done1 = true;\n                            return foldl(function (x) {\n                                return function (i) {\n                                    return i(x);\n                                };\n                            })(b)(ys);\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_xs = v.value0.value1;\n                            $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done1) {\n                        $tco_result = $tco_loop($tco_var_xs, $copy_ys);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(q)(Data_List_Types.Nil.value);\n        };\n    };\n};\nvar uncons = function (v) {\n    if (v instanceof CatNil) {\n        return Data_Maybe.Nothing.value;\n    };\n    if (v instanceof CatCons) {\n        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {\n            var $66 = Data_CatQueue[\"null\"](v.value1);\n            if ($66) {\n                return CatNil.value;\n            };\n            return foldr(link)(CatNil.value)(v.value1);\n        })()));\n    };\n    throw new Error(\"Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): \" + [ v.constructor.name ]);\n};\nvar foldableCatList = {\n    foldMap: function (dictMonoid) {\n        return Data_Foldable.foldMapDefaultL(foldableCatList)(dictMonoid);\n    },\n    foldr: function (f) {\n        return function (s) {\n            return function (l) {\n                return Data_Foldable.foldrDefault(foldableCatList)(f)(s)(l);\n            };\n        };\n    },\n    foldl: function (f) {\n        var go = function ($copy_acc) {\n            return function ($copy_q) {\n                var $tco_var_acc = $copy_acc;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(acc, q) {\n                    var v = uncons(q);\n                    if (v instanceof Data_Maybe.Just) {\n                        $tco_var_acc = f(acc)(v.value0.value0);\n                        $copy_q = v.value0.value1;\n                        return;\n                    };\n                    if (v instanceof Data_Maybe.Nothing) {\n                        $tco_done = true;\n                        return acc;\n                    };\n                    throw new Error(\"Failed pattern match at Data.CatList (line 156, column 16 - line 158, column 22): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_acc, $copy_q);\n                };\n                return $tco_result;\n            };\n        };\n        return go;\n    }\n};\nvar length = /* #__PURE__ */ Data_Foldable.length(foldableCatList)(Data_Semiring.semiringInt);\nvar foldMap = function (dictMonoid) {\n    var mempty = Data_Monoid.mempty(dictMonoid);\n    var append2 = Data_Semigroup.append(dictMonoid.Semigroup0());\n    return function (v) {\n        return function (v1) {\n            if (v1 instanceof CatNil) {\n                return mempty;\n            };\n            if (v1 instanceof CatCons) {\n                var d = (function () {\n                    var $75 = Data_CatQueue[\"null\"](v1.value1);\n                    if ($75) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v1.value1);\n                })();\n                return append2(v(v1.value0))(foldMap(dictMonoid)(v)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 134, column 1 - line 134, column 62): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar empty = /* #__PURE__ */ (function () {\n    return CatNil.value;\n})();\nvar append = link;\nvar cons = function (a) {\n    return function (cat) {\n        return append(new CatCons(a, Data_CatQueue.empty))(cat);\n    };\n};\nvar functorCatList = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof CatNil) {\n                return CatNil.value;\n            };\n            if (v1 instanceof CatCons) {\n                var d = (function () {\n                    var $80 = Data_CatQueue[\"null\"](v1.value1);\n                    if ($80) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v1.value1);\n                })();\n                return cons(v(v1.value0))(Data_Functor.map(functorCatList)(v)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 184, column 1 - line 188, column 26): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    }\n};\nvar singleton = function (a) {\n    return cons(a)(CatNil.value);\n};\nvar traversableCatList = {\n    traverse: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof CatNil) {\n                    return pure(CatNil.value);\n                };\n                if (v1 instanceof CatCons) {\n                    var d = (function () {\n                        var $85 = Data_CatQueue[\"null\"](v1.value1);\n                        if ($85) {\n                            return CatNil.value;\n                        };\n                        return foldr(link)(CatNil.value)(v1.value1);\n                    })();\n                    return apply(map(cons)(v(v1.value0)))(Data_Traversable.traverse(traversableCatList)(dictApplicative)(v)(d));\n                };\n                throw new Error(\"Failed pattern match at Data.CatList (line 174, column 1 - line 182, column 33): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    sequence: function (dictApplicative) {\n        var pure = Control_Applicative.pure(dictApplicative);\n        var Apply0 = dictApplicative.Apply0();\n        var apply = Control_Apply.apply(Apply0);\n        var map = Data_Functor.map(Apply0.Functor0());\n        return function (v) {\n            if (v instanceof CatNil) {\n                return pure(CatNil.value);\n            };\n            if (v instanceof CatCons) {\n                var d = (function () {\n                    var $89 = Data_CatQueue[\"null\"](v.value1);\n                    if ($89) {\n                        return CatNil.value;\n                    };\n                    return foldr(link)(CatNil.value)(v.value1);\n                })();\n                return apply(map(cons)(v.value0))(Data_Traversable.sequence(traversableCatList)(dictApplicative)(d));\n            };\n            throw new Error(\"Failed pattern match at Data.CatList (line 174, column 1 - line 182, column 33): \" + [ v.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorCatList;\n    },\n    Foldable1: function () {\n        return foldableCatList;\n    }\n};\nvar semigroupCatList = {\n    append: append\n};\nvar monoidCatList = /* #__PURE__ */ (function () {\n    return {\n        mempty: CatNil.value,\n        Semigroup0: function () {\n            return semigroupCatList;\n        }\n    };\n})();\nvar monadCatList = {\n    Applicative0: function () {\n        return applicativeCatList;\n    },\n    Bind1: function () {\n        return bindCatList;\n    }\n};\nvar bindCatList = {\n    bind: /* #__PURE__ */ Data_Function.flip(/* #__PURE__ */ foldMap(monoidCatList)),\n    Apply0: function () {\n        return $lazy_applyCatList(0);\n    }\n};\nvar applicativeCatList = {\n    pure: singleton,\n    Apply0: function () {\n        return $lazy_applyCatList(0);\n    }\n};\nvar $lazy_applyCatList = /* #__PURE__ */ $runtime_lazy(\"applyCatList\", \"Data.CatList\", function () {\n    return {\n        apply: Control_Monad.ap(monadCatList),\n        Functor0: function () {\n            return functorCatList;\n        }\n    };\n});\nvar applyCatList = /* #__PURE__ */ $lazy_applyCatList(190);\nvar fromFoldable = function (dictFoldable) {\n    var foldMap1 = Data_Foldable.foldMap(dictFoldable)(monoidCatList);\n    return function (f) {\n        return foldMap1(singleton)(f);\n    };\n};\nvar snoc = function (cat) {\n    return function (a) {\n        return append(cat)(new CatCons(a, Data_CatQueue.empty));\n    };\n};\nvar unfoldable1CatList = {\n    unfoldr1: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v.value1 instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return snoc(memo)(v.value0);\n                        };\n                        if (v.value1 instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value1.value0;\n                            $copy_memo = snoc(memo)(v.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 170, column 24 - line 172, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(CatNil.value);\n        };\n    }\n};\nvar unfoldableCatList = {\n    unfoldr: function (f) {\n        return function (b) {\n            var go = function ($copy_source) {\n                return function ($copy_memo) {\n                    var $tco_var_source = $copy_source;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(source, memo) {\n                        var v = f(source);\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return memo;\n                        };\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_source = v.value0.value1;\n                            $copy_memo = snoc(memo)(v.value0.value0);\n                            return;\n                        };\n                        throw new Error(\"Failed pattern match at Data.CatList (line 163, column 24 - line 165, column 57): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_source, $copy_memo);\n                    };\n                    return $tco_result;\n                };\n            };\n            return go(b)(CatNil.value);\n        };\n    },\n    Unfoldable10: function () {\n        return unfoldable1CatList;\n    }\n};\nvar altCatList = {\n    alt: append,\n    Functor0: function () {\n        return functorCatList;\n    }\n};\nvar plusCatList = {\n    empty: empty,\n    Alt0: function () {\n        return altCatList;\n    }\n};\nvar alternativeCatList = {\n    Applicative0: function () {\n        return applicativeCatList;\n    },\n    Plus1: function () {\n        return plusCatList;\n    }\n};\nvar monadPlusCatList = {\n    Monad0: function () {\n        return monadCatList;\n    },\n    Alternative1: function () {\n        return alternativeCatList;\n    }\n};\nexport {\n    CatNil,\n    CatCons,\n    empty,\n    $$null as null,\n    singleton,\n    length,\n    append,\n    cons,\n    snoc,\n    uncons,\n    fromFoldable,\n    semigroupCatList,\n    monoidCatList,\n    showCatList,\n    foldableCatList,\n    unfoldableCatList,\n    unfoldable1CatList,\n    traversableCatList,\n    functorCatList,\n    applyCatList,\n    applicativeCatList,\n    bindCatList,\n    monadCatList,\n    altCatList,\n    plusCatList,\n    alternativeCatList,\n    monadPlusCatList\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Data_CatList from \"../Data.CatList/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_CatList.semigroupCatList);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar ExpF = function (x) {\n    return x;\n};\nvar Free = /* #__PURE__ */ (function () {\n    function Free(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Free.create = function (value0) {\n        return function (value1) {\n            return new Free(value0, value1);\n        };\n    };\n    return Free;\n})();\nvar Return = /* #__PURE__ */ (function () {\n    function Return(value0) {\n        this.value0 = value0;\n    };\n    Return.create = function (value0) {\n        return new Return(value0);\n    };\n    return Return;\n})();\nvar Bind = /* #__PURE__ */ (function () {\n    function Bind(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Bind.create = function (value0) {\n        return function (value1) {\n            return new Bind(value0, value1);\n        };\n    };\n    return Bind;\n})();\nvar toView = function ($copy_v) {\n    var $tco_done = false;\n    var $tco_result;\n    function $tco_loop(v) {\n        var runExpF = function (v2) {\n            return v2;\n        };\n        var concatF = function (v2) {\n            return function (r) {\n                return new Free(v2.value0, append(v2.value1)(r));\n            };\n        };\n        if (v.value0 instanceof Return) {\n            var v2 = Data_CatList.uncons(v.value1);\n            if (v2 instanceof Data_Maybe.Nothing) {\n                $tco_done = true;\n                return new Return(v.value0.value0);\n            };\n            if (v2 instanceof Data_Maybe.Just) {\n                $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);\n                return;\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): \" + [ v2.constructor.name ]);\n        };\n        if (v.value0 instanceof Bind) {\n            $tco_done = true;\n            return new Bind(v.value0.value0, function (a) {\n                return concatF(v.value0.value1(a))(v.value1);\n            });\n        };\n        throw new Error(\"Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): \" + [ v.value0.constructor.name ]);\n    };\n    while (!$tco_done) {\n        $tco_result = $tco_loop($copy_v);\n    };\n    return $tco_result;\n};\nvar runFreeM = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (dictMonadRec) {\n        var Monad0 = dictMonadRec.Monad0();\n        var map2 = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n        var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n        var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n        return function (k) {\n            var go = function (f) {\n                var v = toView(f);\n                if (v instanceof Return) {\n                    return map2(Control_Monad_Rec_Class.Done.create)(pure1(v.value0));\n                };\n                if (v instanceof Bind) {\n                    return map2(Control_Monad_Rec_Class.Loop.create)(k(map1(v.value1)(v.value0)));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 194, column 10 - line 196, column 37): \" + [ v.constructor.name ]);\n            };\n            return tailRecM(go);\n        };\n    };\n};\nvar runFree = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (k) {\n        var go = function ($copy_f) {\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(f) {\n                var v = toView(f);\n                if (v instanceof Return) {\n                    $tco_done = true;\n                    return v.value0;\n                };\n                if (v instanceof Bind) {\n                    $copy_f = k(map1(v.value1)(v.value0));\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($copy_f);\n            };\n            return $tco_result;\n        };\n        return go;\n    };\n};\nvar resume$prime = function (k) {\n    return function (j) {\n        return function (f) {\n            var v = toView(f);\n            if (v instanceof Return) {\n                return j(v.value0);\n            };\n            if (v instanceof Bind) {\n                return k(v.value0)(v.value1);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): \" + [ v.constructor.name ]);\n        };\n    };\n};\nvar resume = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return resume$prime(function (g) {\n        return function (i) {\n            return new Data_Either.Left(map1(i)(g));\n        };\n    })(Data_Either.Right.create);\n};\nvar fromView = function (f) {\n    return new Free(f, Data_CatList.empty);\n};\nvar wrap = function (f) {\n    return fromView(new Bind(f, Unsafe_Coerce.unsafeCoerce));\n};\nvar suspendF = function (dictApplicative) {\n    var pure1 = Control_Applicative.pure(dictApplicative);\n    return function (f) {\n        return wrap(pure1(f));\n    };\n};\nvar freeMonad = {\n    Applicative0: function () {\n        return freeApplicative;\n    },\n    Bind1: function () {\n        return freeBind;\n    }\n};\nvar freeFunctor = {\n    map: function (k) {\n        return function (f) {\n            return Control_Bind.bindFlipped(freeBind)((function () {\n                var $189 = Control_Applicative.pure(freeApplicative);\n                return function ($190) {\n                    return $189(k($190));\n                };\n            })())(f);\n        };\n    }\n};\nvar freeBind = {\n    bind: function (v) {\n        return function (k) {\n            return new Free(v.value0, Data_CatList.snoc(v.value1)(k));\n        };\n    },\n    Apply0: function () {\n        return $lazy_freeApply(0);\n    }\n};\nvar freeApplicative = {\n    pure: function ($191) {\n        return fromView(Return.create($191));\n    },\n    Apply0: function () {\n        return $lazy_freeApply(0);\n    }\n};\nvar $lazy_freeApply = /* #__PURE__ */ $runtime_lazy(\"freeApply\", \"Control.Monad.Free\", function () {\n    return {\n        apply: Control_Monad.ap(freeMonad),\n        Functor0: function () {\n            return freeFunctor;\n        }\n    };\n});\nvar freeApply = /* #__PURE__ */ $lazy_freeApply(77);\nvar lift2 = /* #__PURE__ */ Control_Apply.lift2(freeApply);\nvar bind = /* #__PURE__ */ Control_Bind.bind(freeBind);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(freeApplicative);\nvar join = /* #__PURE__ */ Control_Bind.join(freeBind);\nvar semigroupFree = function (dictSemigroup) {\n    return {\n        append: lift2(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar freeMonadRec = {\n    tailRecM: function (k) {\n        return function (a) {\n            return bind(k(a))(function (v) {\n                if (v instanceof Control_Monad_Rec_Class.Loop) {\n                    return Control_Monad_Rec_Class.tailRecM(freeMonadRec)(k)(v.value0);\n                };\n                if (v instanceof Control_Monad_Rec_Class.Done) {\n                    return pure(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free (line 86, column 26 - line 88, column 21): \" + [ v.constructor.name ]);\n            });\n        };\n    },\n    Monad0: function () {\n        return freeMonad;\n    }\n};\nvar liftF = function (f) {\n    return fromView(new Bind(f, function ($192) {\n        return pure($192);\n    }));\n};\nvar freeMonadTrans = {\n    lift: function (dictMonad) {\n        return liftF;\n    }\n};\nvar monoidFree = function (dictMonoid) {\n    var semigroupFree1 = semigroupFree(dictMonoid.Semigroup0());\n    return {\n        mempty: pure(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupFree1;\n        }\n    };\n};\nvar substFree = function (k) {\n    var go = function (f) {\n        var v = toView(f);\n        if (v instanceof Return) {\n            return pure(v.value0);\n        };\n        if (v instanceof Bind) {\n            return bind(k(v.value0))(map(go)(v.value1));\n        };\n        throw new Error(\"Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): \" + [ v.constructor.name ]);\n    };\n    return go;\n};\nvar hoistFree = function (k) {\n    return substFree(function ($193) {\n        return liftF(k($193));\n    });\n};\nvar foldableFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    return function (dictFoldable) {\n        var foldMap = Data_Foldable.foldMap(dictFoldable);\n        var foldl = Data_Foldable.foldl(dictFoldable);\n        var foldr = Data_Foldable.foldr(dictFoldable);\n        return {\n            foldMap: function (dictMonoid) {\n                var foldMap1 = foldMap(dictMonoid);\n                return function (f) {\n                    var $lazy_go = $runtime_lazy(\"go\", \"Control.Monad.Free\", function () {\n                        return function ($194) {\n                            return (function (v) {\n                                if (v instanceof Data_Either.Left) {\n                                    return foldMap1($lazy_go(94))(v.value0);\n                                };\n                                if (v instanceof Data_Either.Right) {\n                                    return f(v.value0);\n                                };\n                                throw new Error(\"Failed pattern match at Control.Monad.Free (line 93, column 21 - line 95, column 21): \" + [ v.constructor.name ]);\n                            })(resume1($194));\n                        };\n                    });\n                    var go = $lazy_go(93);\n                    return go;\n                };\n            },\n            foldl: function (f) {\n                var go = function (r) {\n                    return function ($195) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return foldl(go)(r)(v.value0);\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return f(r)(v.value0);\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 98, column 23 - line 100, column 23): \" + [ v.constructor.name ]);\n                        })(resume1($195));\n                    };\n                };\n                return go;\n            },\n            foldr: function (f) {\n                var go = function (r) {\n                    return function ($196) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return foldr(Data_Function.flip(go))(r)(v.value0);\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return f(v.value0)(r);\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 103, column 23 - line 105, column 23): \" + [ v.constructor.name ]);\n                        })(resume1($196));\n                    };\n                };\n                return go;\n            }\n        };\n    };\n};\nvar traversableFree = function (dictTraversable) {\n    var Functor0 = dictTraversable.Functor0();\n    var resume1 = resume(Functor0);\n    var traverse = Data_Traversable.traverse(dictTraversable);\n    var foldableFree1 = foldableFree(Functor0)(dictTraversable.Foldable1());\n    return {\n        traverse: function (dictApplicative) {\n            var map1 = Data_Functor.map((dictApplicative.Apply0()).Functor0());\n            var traverse1 = traverse(dictApplicative);\n            return function (f) {\n                var $lazy_go = $runtime_lazy(\"go\", \"Control.Monad.Free\", function () {\n                    return function ($197) {\n                        return (function (v) {\n                            if (v instanceof Data_Either.Left) {\n                                return map1(function ($198) {\n                                    return join(liftF($198));\n                                })(traverse1($lazy_go(111))(v.value0));\n                            };\n                            if (v instanceof Data_Either.Right) {\n                                return map1(pure)(f(v.value0));\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free (line 110, column 21 - line 112, column 30): \" + [ v.constructor.name ]);\n                        })(resume1($197));\n                    };\n                });\n                var go = $lazy_go(110);\n                return go;\n            };\n        },\n        sequence: function (dictApplicative) {\n            return function (tma) {\n                return Data_Traversable.traverse(traversableFree(dictTraversable))(dictApplicative)(identity)(tma);\n            };\n        },\n        Functor0: function () {\n            return freeFunctor;\n        },\n        Foldable1: function () {\n            return foldableFree1;\n        }\n    };\n};\nvar foldFree = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var map1 = Data_Functor.map(((Monad0.Bind1()).Apply0()).Functor0());\n    var pure1 = Control_Applicative.pure(Monad0.Applicative0());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    return function (k) {\n        var go = function (f) {\n            var v = toView(f);\n            if (v instanceof Return) {\n                return map1(Control_Monad_Rec_Class.Done.create)(pure1(v.value0));\n            };\n            if (v instanceof Bind) {\n                return map1(function ($199) {\n                    return Control_Monad_Rec_Class.Loop.create(v.value1($199));\n                })(k(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): \" + [ v.constructor.name ]);\n        };\n        return tailRecM(go);\n    };\n};\nvar eqFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    return function (dictEq1) {\n        var eq1 = Data_Eq.eq1(dictEq1);\n        return function (dictEq) {\n            var eq = Data_Eq.eq(dictEq);\n            return {\n                eq: function (x) {\n                    return function (y) {\n                        var v = resume1(y);\n                        var v1 = resume1(x);\n                        if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {\n                            return eq1(eqFree(dictFunctor)(dictEq1)(dictEq))(v1.value0)(v.value0);\n                        };\n                        if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {\n                            return eq(v1.value0)(v.value0);\n                        };\n                        return false;\n                    };\n                }\n            };\n        };\n    };\n};\nvar ordFree = function (dictFunctor) {\n    var resume1 = resume(dictFunctor);\n    var eqFree1 = eqFree(dictFunctor);\n    return function (dictOrd1) {\n        var compare1 = Data_Ord.compare1(dictOrd1);\n        var eqFree2 = eqFree1(dictOrd1.Eq10());\n        return function (dictOrd) {\n            var compare = Data_Ord.compare(dictOrd);\n            var eqFree3 = eqFree2(dictOrd.Eq0());\n            return {\n                compare: function (x) {\n                    return function (y) {\n                        var v = resume1(y);\n                        var v1 = resume1(x);\n                        if (v1 instanceof Data_Either.Left && v instanceof Data_Either.Left) {\n                            return compare1(ordFree(dictFunctor)(dictOrd1)(dictOrd))(v1.value0)(v.value0);\n                        };\n                        if (v1 instanceof Data_Either.Left) {\n                            return Data_Ordering.LT.value;\n                        };\n                        if (v instanceof Data_Either.Left) {\n                            return Data_Ordering.GT.value;\n                        };\n                        if (v1 instanceof Data_Either.Right && v instanceof Data_Either.Right) {\n                            return compare(v1.value0)(v.value0);\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Free (line 56, column 17 - line 60, column 36): \" + [ v1.constructor.name, v.constructor.name ]);\n                    };\n                },\n                Eq0: function () {\n                    return eqFree3;\n                }\n            };\n        };\n    };\n};\nvar eq1Free = function (dictFunctor) {\n    var eqFree1 = eqFree(dictFunctor);\n    return function (dictEq1) {\n        var eqFree2 = eqFree1(dictEq1);\n        return {\n            eq1: function (dictEq) {\n                return Data_Eq.eq(eqFree2(dictEq));\n            }\n        };\n    };\n};\nvar ord1Free = function (dictFunctor) {\n    var ordFree1 = ordFree(dictFunctor);\n    var eq1Free1 = eq1Free(dictFunctor);\n    return function (dictOrd1) {\n        var ordFree2 = ordFree1(dictOrd1);\n        var eq1Free2 = eq1Free1(dictOrd1.Eq10());\n        return {\n            compare1: function (dictOrd) {\n                return Data_Ord.compare(ordFree2(dictOrd));\n            },\n            Eq10: function () {\n                return eq1Free2;\n            }\n        };\n    };\n};\nexport {\n    suspendF,\n    wrap,\n    liftF,\n    hoistFree,\n    foldFree,\n    substFree,\n    runFree,\n    runFreeM,\n    resume,\n    resume$prime,\n    eqFree,\n    eq1Free,\n    ordFree,\n    ord1Free,\n    freeFunctor,\n    freeBind,\n    freeApplicative,\n    freeApply,\n    freeMonad,\n    freeMonadTrans,\n    freeMonadRec,\n    foldableFree,\n    traversableFree,\n    semigroupFree,\n    monoidFree\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar wrap = /* #__PURE__ */ Data_Newtype.wrap();\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar profunctorFn = {\n    dimap: function (a2b) {\n        return function (c2d) {\n            return function (b2c) {\n                return function ($18) {\n                    return c2d(b2c(a2b($18)));\n                };\n            };\n        };\n    }\n};\nvar dimap = function (dict) {\n    return dict.dimap;\n};\nvar lcmap = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function (a2b) {\n        return dimap1(a2b)(identity);\n    };\n};\nvar rmap = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function (b2c) {\n        return dimap1(identity)(b2c);\n    };\n};\nvar unwrapIso = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function () {\n        return dimap1(wrap)(unwrap);\n    };\n};\nvar wrapIso = function (dictProfunctor) {\n    var dimap1 = dimap(dictProfunctor);\n    return function () {\n        return function (v) {\n            return dimap1(unwrap)(wrap);\n        };\n    };\n};\nvar arr = function (dictCategory) {\n    var identity1 = Control_Category.identity(dictCategory);\n    return function (dictProfunctor) {\n        var rmap1 = rmap(dictProfunctor);\n        return function (f) {\n            return rmap1(f)(identity1);\n        };\n    };\n};\nexport {\n    dimap,\n    lcmap,\n    rmap,\n    arr,\n    unwrapIso,\n    wrapIso,\n    profunctorFn\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);\nvar Cb = function (x) {\n    return x;\n};\nvar Prop$prime = /* #__PURE__ */ (function () {\n    function Prop$prime(value0) {\n        this.value0 = value0;\n    };\n    Prop$prime.create = function (value0) {\n        return new Prop$prime(value0);\n    };\n    return Prop$prime;\n})();\nvar Cb$prime = /* #__PURE__ */ (function () {\n    function Cb$prime(value0) {\n        this.value0 = value0;\n    };\n    Cb$prime.create = function (value0) {\n        return new Cb$prime(value0);\n    };\n    return Cb$prime;\n})();\nvar Unset$prime = /* #__PURE__ */ (function () {\n    function Unset$prime() {\n\n    };\n    Unset$prime.value = new Unset$prime();\n    return Unset$prime;\n})();\nvar Attribute = function (x) {\n    return x;\n};\nvar unset$prime = /* #__PURE__ */ (function () {\n    return Unset$prime.value;\n})();\nvar unsafeUnAttribute = /* #__PURE__ */ Safe_Coerce.coerce();\nvar unsafeAttribute = Attribute;\nvar xdata = function (k) {\n    return function (v) {\n        return unsafeAttribute({\n            key: \"data-\" + k,\n            value: new Prop$prime(v)\n        });\n    };\n};\nvar showCb = {\n    show: function (v) {\n        return \"{callback}\";\n    }\n};\nvar prop$prime = /* #__PURE__ */ (function () {\n    return Prop$prime.create;\n})();\nvar newtypeCb = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar eqCb = {\n    eq: function (v) {\n        return function (v1) {\n            return false;\n        };\n    }\n};\nvar ordCb = {\n    compare: function (v) {\n        return function (v1) {\n            return Data_Ordering.LT.value;\n        };\n    },\n    Eq0: function () {\n        return eqCb;\n    }\n};\nvar cb$prime = /* #__PURE__ */ (function () {\n    return Cb$prime.create;\n})();\nvar cb = /* #__PURE__ */ (function () {\n    var $27 = Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Effect.functorEffect)(Data_Function[\"const\"](true)));\n    return function ($28) {\n        return Cb($27($28));\n    };\n})();\nvar attr = function (dict) {\n    return dict.attr;\n};\nvar mapAttr = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return function (dictAttr) {\n        var attr1 = attr(dictAttr);\n        return function (a) {\n            return function (b) {\n                return map(function (v) {\n                    return attr1(a)(v);\n                })(b);\n            };\n        };\n    };\n};\nvar maybeAttr = function (dictAttr) {\n    var attr1 = attr(dictAttr);\n    return function (v) {\n        return function (v1) {\n            if (v1 instanceof Data_Maybe.Just) {\n                return pure(attr1(v)(v1.value0));\n            };\n            if (v1 instanceof Data_Maybe.Nothing) {\n                return empty;\n            };\n            throw new Error(\"Failed pattern match at Deku.Attribute (line 130, column 1 - line 135, column 29): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar pureAttr = function (dictAttr) {\n    var attr1 = attr(dictAttr);\n    return function (a) {\n        return function (b) {\n            return pure(attr1(a)(b));\n        };\n    };\n};\nexport {\n    Prop$prime,\n    Cb$prime,\n    Unset$prime,\n    attr,\n    unsafeUnAttribute,\n    unsafeAttribute,\n    prop$prime,\n    cb$prime,\n    unset$prime,\n    cb,\n    Cb,\n    xdata,\n    pureAttr,\n    maybeAttr,\n    mapAttr,\n    newtypeCb,\n    eqCb,\n    ordCb,\n    showCb\n};\n", "// Generated by purs version 0.15.10\nimport * as Bolson_Control from \"../Bolson.Control/index.js\";\nimport * as Bolson_Core from \"../Bolson.Core/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Profunctor from \"../Data.Profunctor/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as FRP_Event_VBus from \"../FRP.Event.VBus/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar vbus = /* #__PURE__ */ FRP_Event_VBus.vbus();\nvar map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);\nvar lcmap = /* #__PURE__ */ Data_Profunctor.lcmap(Data_Profunctor.profunctorFn);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar eq = /* #__PURE__ */ Data_Eq.eq(Bolson_Core.eqScope);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);\nvar merge = /* #__PURE__ */ FRP_Event.merge(Data_Foldable.foldableArray);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar ExEvent = function (x) {\n    return x;\n};\nvar DOMInterpret = function (x) {\n    return x;\n};\nvar NutF = function (x) {\n    return x;\n};\nvar Node = function (x) {\n    return x;\n};\nvar ExDOMInterpret = function (x) {\n    return x;\n};\nvar Child = function (x) {\n    return x;\n};\nvar Nut = function (x) {\n    return x;\n};\nvar ANut = function (x) {\n    return x;\n};\nvar newtypeNutF_ = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDOMInterpret_ = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar vbussed = function () {\n    return function (dictVBus) {\n        var vbus1 = vbus(dictVBus);\n        return function (px) {\n            return function (f) {\n                var go = vbus1(px)(f);\n                var goo = map(function (v) {\n                    return v;\n                })(go);\n                var gooo = map(function (v) {\n                    return v;\n                })(goo);\n                return new Bolson_Core[\"EventfulElement$prime\"](gooo);\n            };\n        };\n    };\n};\nvar vbussed1 = /* #__PURE__ */ vbussed();\nvar vbussedUncurried = function () {\n    return function (dictVBus) {\n        var vbussed2 = vbussed1(dictVBus);\n        return function (px) {\n            var $102 = vbussed2(px);\n            return function ($103) {\n                return $102(Data_Tuple.curry($103));\n            };\n        };\n    };\n};\nvar unsafeSetPos$prime = function (i) {\n    return function (v) {\n        var g = function (v1) {\n            var f = function (ii) {\n                if (ii instanceof Bolson_Core[\"Element$prime\"]) {\n                    return new Bolson_Core[\"Element$prime\"](lcmap(function (v2) {\n                        return {\n                            pos: i,\n                            dynFamily: v2.dynFamily,\n                            ez: v2.ez,\n                            parent: v2.parent,\n                            raiseId: v2.raiseId,\n                            scope: v2.scope\n                        };\n                    })(ii.value0));\n                };\n                if (ii instanceof Bolson_Core[\"EventfulElement$prime\"]) {\n                    return new Bolson_Core[\"EventfulElement$prime\"](map(f)(ii.value0));\n                };\n                return ii;\n            };\n            return f(v1);\n        };\n        return g(v);\n    };\n};\nvar unsafeSetPos = function ($104) {\n    return unsafeSetPos$prime(Data_Maybe.Just.create($104));\n};\nvar sendToTop = /* #__PURE__ */ (function () {\n    return new Bolson_Core.Logic(0);\n})();\nvar sendToPos = function (i) {\n    return new Bolson_Core.Logic(i);\n};\nvar remove = /* #__PURE__ */ (function () {\n    return Bolson_Core.Remove.value;\n})();\nvar portalFlatten = function () {\n    return {\n        doLogic: function (pos) {\n            return function (v) {\n                return function (id) {\n                    return v.sendToPos({\n                        id: id,\n                        pos: pos\n                    });\n                };\n            };\n        },\n        ids: function ($105) {\n            return (function (v) {\n                return v.ids;\n            })(unwrap($105));\n        },\n        disconnectElement: function (v) {\n            return function (v1) {\n                return v.disconnectElement({\n                    id: v1.id,\n                    scope: v1.scope,\n                    parent: v1.parent,\n                    scopeEq: eq\n                });\n            };\n        },\n        toElt: function (v) {\n            return v;\n        }\n    };\n};\nvar portalFlatten1 = /* #__PURE__ */ portalFlatten();\nvar insert_ = function (x) {\n    var f = function (v) {\n        return new Bolson_Core.Insert(v);\n    };\n    var b = unsafeSetPos$prime(Data_Maybe.Nothing.value)(x);\n    return f((function (v) {\n        return v;\n    })(b));\n};\nvar insert = function (i) {\n    return function (x) {\n        var f = function (v) {\n            return new Bolson_Core.Insert(v);\n        };\n        var b = unsafeSetPos(i)(x);\n        return f((function (v) {\n            return v;\n        })(b));\n    };\n};\nvar bus = function (f) {\n    return FRP_Event.bus(f);\n};\nvar busUncurried = function ($106) {\n    return bus(Data_Tuple.curry($106));\n};\nvar bussed = function (f) {\n    var z = function (x) {\n        return new Bolson_Core[\"EventfulElement$prime\"](coerce(x));\n    };\n    var g = bus(f);\n    return z(map(function (v) {\n        return v;\n    })(g));\n};\nvar bussedUncurried = function ($107) {\n    return bussed(Data_Tuple.curry($107));\n};\nvar __internalDekuFlatten = function (a) {\n    return function (b) {\n        return function (c) {\n            return Bolson_Control.flatten(portalFlatten1)(a)(b)((function (v) {\n                return v;\n            })(c));\n        };\n    };\n};\nvar dynify = function (f) {\n    return function (es) {\n        var go = function (fes) {\n            return function (v) {\n                return function (v1) {\n                    return FRP_Event.makeLemmingEventO(function (v2, k) {\n                        var me = v1.ids();\n                        v.raiseId(me)();\n                        var v3 = (function () {\n                            if (v.parent instanceof Data_Maybe.Nothing) {\n                                var dummyParent = v1.ids();\n                                return new Data_Tuple.Tuple(pure1(v1.makeElement({\n                                    id: dummyParent,\n                                    parent: Data_Maybe.Nothing.value,\n                                    scope: v.scope,\n                                    tag: \"div\",\n                                    pos: Data_Maybe.Nothing.value,\n                                    dynFamily: Data_Maybe.Nothing.value\n                                })), dummyParent);\n                            };\n                            if (v.parent instanceof Data_Maybe.Just) {\n                                return new Data_Tuple.Tuple(empty, v.parent.value0);\n                            };\n                            throw new Error(\"Failed pattern match at Deku.Core (line 456, column 38 - line 472, column 40): \" + [ v.parent.constructor.name ]);\n                        })();\n                        var unsub = v2(merge([ v3.value0, pure1(v1.makeDynBeacon({\n                            id: me,\n                            parent: new Data_Maybe.Just(v3.value1),\n                            scope: v.scope,\n                            dynFamily: v.dynFamily,\n                            pos: v.pos\n                        })), pure1(v1.attributeParent({\n                            id: me,\n                            parent: v3.value1,\n                            pos: v.pos,\n                            dynFamily: v.dynFamily,\n                            ez: v.ez\n                        })), __internalDekuFlatten({\n                            parent: new Data_Maybe.Just(v3.value1),\n                            scope: v.scope,\n                            ez: false,\n                            raiseId: function (v4) {\n                                return pure(Data_Unit.unit);\n                            },\n                            pos: Data_Maybe.Nothing.value,\n                            dynFamily: new Data_Maybe.Just(me)\n                        })(v1)(fes) ]), k);\n                        return function __do() {\n                            k(v1.removeDynBeacon({\n                                id: me\n                            }));\n                            return unsub();\n                        };\n                    });\n                };\n            };\n        };\n        var go$prime = function (x) {\n            return new Bolson_Core[\"Element$prime\"](go(x));\n        };\n        return go$prime((function (v) {\n            return v;\n        })(f(es)));\n    };\n};\nvar dyn = /* #__PURE__ */ (function () {\n    var myDyn$prime = function (x) {\n        return Bolson_Core.dyn(x);\n    };\n    var myDyn = function (e) {\n        return myDyn$prime(map(map(function (v) {\n            return v;\n        }))(e));\n    };\n    return dynify(myDyn);\n})();\nvar envy = /* #__PURE__ */ (function () {\n    var myEnvy$prime = function (x) {\n        return Bolson_Core.envy(map(function (v) {\n            return v;\n        })(x));\n    };\n    var myEnvy = function (e) {\n        return myEnvy$prime(map(function (v) {\n            return v;\n        })(e));\n    };\n    return dynify(myEnvy);\n})();\nvar fixed = /* #__PURE__ */ (function () {\n    var myFixed$prime = function (x) {\n        return Bolson_Core.fixed(map1(function (v) {\n            return v;\n        })(x));\n    };\n    var myFixed = function (e) {\n        return myFixed$prime(map1(function (v) {\n            return v;\n        })(e));\n    };\n    return dynify(myFixed);\n})();\nvar semigroupNut = {\n    append: function (a) {\n        return function (b) {\n            return fixed([ a, b ]);\n        };\n    }\n};\nvar monoidNut = {\n    mempty: /* #__PURE__ */ Bolson_Core.envy(empty),\n    Semigroup0: function () {\n        return semigroupNut;\n    }\n};\nexport {\n    ANut,\n    DOMInterpret,\n    Node,\n    Nut,\n    NutF,\n    Child,\n    bus,\n    busUncurried,\n    bussed,\n    bussedUncurried,\n    vbussed,\n    vbussedUncurried,\n    insert,\n    insert_,\n    remove,\n    sendToPos,\n    sendToTop,\n    dyn,\n    fixed,\n    envy,\n    unsafeSetPos,\n    newtypeNutF_,\n    semigroupNut,\n    monoidNut,\n    newtypeDOMInterpret_\n};\n", "// Generated by purs version 0.15.10\nimport * as Bolson_Control from \"../Bolson.Control/index.js\";\nimport * as Bolson_Core from \"../Bolson.Core/index.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_FastVect_FastVect from \"../Data.FastVect.FastVect/index.js\";\nimport * as Data_Filterable from \"../Data.Filterable/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_FunctorWithIndex from \"../Data.FunctorWithIndex/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Profunctor from \"../Data.Profunctor/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nimport * as Deku_Core from \"../Deku.Core/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as FRP_Event_Class from \"../FRP.Event.Class/index.js\";\nimport * as Record from \"../Record/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);\nvar compose = /* #__PURE__ */ Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn);\nvar merge = /* #__PURE__ */ FRP_Event.merge(Data_Foldable.foldableArray);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar mapAccum = /* #__PURE__ */ FRP_Event_Class.mapAccum(FRP_Event.eventIsEvent);\nvar keepLatest = /* #__PURE__ */ FRP_Event_Class.keepLatest(FRP_Event.eventIsEvent);\nvar filter = /* #__PURE__ */ Data_Filterable.filter(FRP_Event.filterableEvent);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Data_Eq.eqInt);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(Bolson_Core.eqScope);\nvar alt = /* #__PURE__ */ Control_Alt.alt(FRP_Event.altEvent);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar globalPortalComplexComplex = /* #__PURE__ */ Bolson_Control.globalPortalComplexComplex()()();\nvar union = /* #__PURE__ */ Record.union();\nvar map2 = /* #__PURE__ */ Data_Functor.map(Data_FastVect_FastVect.functorVect);\nvar dimap = /* #__PURE__ */ Data_Profunctor.dimap(Data_Profunctor.profunctorFn);\nvar wrap = /* #__PURE__ */ Data_Newtype.wrap();\nvar lcmap = /* #__PURE__ */ Data_Profunctor.lcmap(Data_Profunctor.profunctorFn);\nvar index = /* #__PURE__ */ Data_FastVect_FastVect.index({\n    reflectType: function () {\n        return 0;\n    }\n})()()();\nvar portalComplexComplex = /* #__PURE__ */ Bolson_Control.portalComplexComplex()()();\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(FRP_Event.functorEvent);\nvar Begin = /* #__PURE__ */ (function () {\n    function Begin() {\n\n    };\n    Begin.value = new Begin();\n    return Begin;\n})();\nvar Middle = /* #__PURE__ */ (function () {\n    function Middle() {\n\n    };\n    Middle.value = new Middle();\n    return Middle;\n})();\nvar End = /* #__PURE__ */ (function () {\n    function End() {\n\n    };\n    End.value = new End();\n    return End;\n})();\nvar unsafeSetText = function (v) {\n    return function (id) {\n        return function (txt) {\n            return map(function ($146) {\n                return v.setText((function (v1) {\n                    return {\n                        id: id,\n                        text: v1\n                    };\n                })($146));\n            })(txt);\n        };\n    };\n};\nvar unsafeSetAttribute = function (v) {\n    return function (id) {\n        return function (atts) {\n            return map(function ($147) {\n                return (function (v1) {\n                    if (v1.value instanceof Deku_Attribute[\"Prop$prime\"]) {\n                        return v.setProp({\n                            id: id,\n                            key: v1.key,\n                            value: v1.value.value0\n                        });\n                    };\n                    if (v1.value instanceof Deku_Attribute[\"Cb$prime\"]) {\n                        return v.setCb({\n                            id: id,\n                            key: v1.key,\n                            value: v1.value.value0\n                        });\n                    };\n                    if (v1.value instanceof Deku_Attribute[\"Unset$prime\"]) {\n                        return v.unsetAttribute({\n                            id: id,\n                            key: v1.key\n                        });\n                    };\n                    throw new Error(\"Failed pattern match at Deku.Control (line 72, column 28 - line 75, column 47): \" + [ v1.value.constructor.name ]);\n                })(Deku_Attribute.unsafeUnAttribute($147));\n            })(atts);\n        };\n    };\n};\nvar toDeku = /* #__PURE__ */ compose(Deku_Core.envy);\nvar text = function (txt) {\n    var go = function (v) {\n        return function (v1) {\n            return FRP_Event.makeLemmingEventO(function (v2, k) {\n                var me = v1.ids();\n                v.raiseId(me)();\n                var unsub = v2(merge([ pure(v1.makeText({\n                    id: me,\n                    parent: v.parent,\n                    pos: v.pos,\n                    scope: v.scope,\n                    dynFamily: v.dynFamily\n                })), unsafeSetText(v1)(me)(txt), Data_Maybe.maybe(empty)(function (p) {\n                    return pure(v1.attributeParent({\n                        id: me,\n                        parent: p,\n                        pos: v.pos,\n                        dynFamily: v.dynFamily,\n                        ez: v.ez\n                    }));\n                })(v.parent) ]), k);\n                return function __do() {\n                    k(v1.deleteFromCache({\n                        id: me\n                    }));\n                    return unsub();\n                };\n            });\n        };\n    };\n    var go$prime = new Bolson_Core[\"Element$prime\"](go);\n    return go$prime;\n};\nvar text_ = function (txt) {\n    return text(pure(txt));\n};\nvar switcher = function (f) {\n    return function (event) {\n        var counter = (function () {\n            var fn = function (a) {\n                return function (b) {\n                    return new Data_Tuple.Tuple(a + 1 | 0, new Data_Tuple.Tuple(b, a));\n                };\n            };\n            return mapAccum(fn)(0);\n        })();\n        return Deku_Core.dyn(keepLatest(FRP_Event.memoize(counter(event))(function (cenv) {\n            return map(function (v) {\n                return merge([ map(Data_Function[\"const\"](Deku_Core.remove))(filter((function () {\n                    var $148 = eq(v.value1 + 1 | 0);\n                    return function ($149) {\n                        return $148(Data_Tuple.snd($149));\n                    };\n                })())(cenv)), pure(Deku_Core.insert_(coerce(f(v.value0)))) ]);\n            })(cenv);\n        })));\n    };\n};\nvar switcherFlipped = /* #__PURE__ */ Data_Function.flip(switcher);\nvar portalFlatten = function () {\n    return {\n        doLogic: function (pos) {\n            return function (v) {\n                return function (id) {\n                    return v.sendToPos({\n                        id: id,\n                        pos: pos\n                    });\n                };\n            };\n        },\n        ids: function ($150) {\n            return (function (v) {\n                return v.ids;\n            })(unwrap($150));\n        },\n        disconnectElement: function (v) {\n            return function (v1) {\n                return v.disconnectElement({\n                    id: v1.id,\n                    scope: v1.scope,\n                    parent: v1.parent,\n                    scopeEq: eq1\n                });\n            };\n        },\n        toElt: function (v) {\n            return v;\n        }\n    };\n};\nvar portalFlatten1 = /* #__PURE__ */ portalFlatten();\nvar blank = /* #__PURE__ */ Data_Monoid.mempty(Deku_Core.monoidNut);\nvar guard = function (eb) {\n    return function (d) {\n        return switcher(function (v) {\n            if (v) {\n                return d;\n            };\n            return blank;\n        })(eb);\n    };\n};\nvar __internalDekuFlatten = function (a) {\n    return function (b) {\n        return function (v) {\n            return Bolson_Control.flatten(portalFlatten1)(a)(b)(v);\n        };\n    };\n};\nvar deku = function (root) {\n    return function (v) {\n        var go = function (children) {\n            return function (v1) {\n                return FRP_Event.makeLemmingEventO(function (v2, k) {\n                    return v2(alt(pure(v1.makeRoot({\n                        id: \"deku-root\",\n                        root: root\n                    })))(__internalDekuFlatten({\n                        parent: new Data_Maybe.Just(\"deku-root\"),\n                        scope: new Bolson_Core.Local(\"rootScope\"),\n                        raiseId: function (v3) {\n                            return pure1(Data_Unit.unit);\n                        },\n                        ez: true,\n                        pos: Data_Maybe.Nothing.value,\n                        dynFamily: Data_Maybe.Nothing.value\n                    })(v1)(children)), k);\n                });\n            };\n        };\n        return go(v);\n    };\n};\nvar elementify = function (tag) {\n    return function (atts) {\n        return function (children) {\n            var go = function (v) {\n                return function (v1) {\n                    return FRP_Event.makeLemmingEventO(function (v2, k) {\n                        var me = v1.ids();\n                        v.raiseId(me)();\n                        var unsub = v2(alt(merge(append([ pure(v1.makeElement({\n                            id: me,\n                            parent: v.parent,\n                            scope: v.scope,\n                            tag: tag,\n                            pos: v.pos,\n                            dynFamily: v.dynFamily\n                        })), unsafeSetAttribute(v1)(me)(atts) ])(Data_Maybe.maybe([  ])(function (p) {\n                            return [ pure(v1.attributeParent({\n                                id: me,\n                                parent: p,\n                                pos: v.pos,\n                                dynFamily: v.dynFamily,\n                                ez: v.ez\n                            })) ];\n                        })(v.parent))))(__internalDekuFlatten({\n                            parent: new Data_Maybe.Just(me),\n                            scope: v.scope,\n                            ez: true,\n                            raiseId: function (v3) {\n                                return pure1(Data_Unit.unit);\n                            },\n                            pos: Data_Maybe.Nothing.value,\n                            dynFamily: Data_Maybe.Nothing.value\n                        })(v1)(children)), k);\n                        return function __do() {\n                            k(v1.deleteFromCache({\n                                id: me\n                            }));\n                            return unsub();\n                        };\n                    });\n                };\n            };\n            return go;\n        };\n    };\n};\nvar elementify2 = function (en) {\n    return function (attributes) {\n        return function (kids) {\n            var aa = function (v) {\n                if (v.length === 0) {\n                    return empty;\n                };\n                if (v.length === 1) {\n                    return v[0];\n                };\n                return merge(v);\n            };\n            var step1 = function (arr) {\n                return new Bolson_Core[\"Element$prime\"](elementify(en)(aa(attributes))(Bolson_Core.fixed(coerce(arr))));\n            };\n            return step1(mapWithIndex(map1(map1(function (v) {\n                return v;\n            }))(Deku_Core.unsafeSetPos))(kids));\n        };\n    };\n};\nvar globalPortal = function () {\n    return function (v$prime) {\n        return function (c$prime) {\n            var go = function (v) {\n                return function (c) {\n                    return globalPortalComplexComplex(portalFlatten1)({\n                        fromEltO1: coerce,\n                        fromEltO2: coerce,\n                        toElt: coerce,\n                        wrapElt: function (i) {\n                            return new Bolson_Core[\"Element$prime\"](elementify(\"div\")(empty)(coerce(i)));\n                        },\n                        giveNewParent: function (a) {\n                            return function (b) {\n                                return function (ctor) {\n                                    return function (v1) {\n                                        return (unwrap(a)).giveNewParent(union(b)({\n                                            ctor: coerce(ctor)\n                                        }));\n                                    };\n                                };\n                            };\n                        },\n                        deleteFromCache: function ($151) {\n                            return (function (v1) {\n                                return v1.deleteFromCache;\n                            })(unwrap($151));\n                        }\n                    })(map2(unwrap)(v))(dimap(map2(function ($152) {\n                        return wrap((function (v1) {\n                            return v1(Data_Unit.unit);\n                        })($152));\n                    }))(unwrap)(c));\n                };\n            };\n            return go(map2(function (v) {\n                return v;\n            })(v$prime))(c$prime);\n        };\n    };\n};\nvar globalPortal2 = /* #__PURE__ */ globalPortal();\nvar globalPortal1 = function (i) {\n    return function (f) {\n        return globalPortal2(Data_FastVect_FastVect.singleton(i))(lcmap(index(Type_Proxy[\"Proxy\"].value))(f));\n    };\n};\nvar portal = function () {\n    return function (v$prime) {\n        return function (c$prime) {\n            var go = function (v) {\n                return function (c) {\n                    return portalComplexComplex(portalFlatten1)({\n                        fromEltO1: coerce,\n                        fromEltO2: coerce,\n                        toElt: coerce,\n                        wrapElt: function (i) {\n                            return new Bolson_Core[\"Element$prime\"](elementify(\"div\")(empty)(coerce(i)));\n                        },\n                        giveNewParent: function (a) {\n                            return function (b) {\n                                return function (ctor) {\n                                    return function (v1) {\n                                        return (unwrap(a)).giveNewParent(union(b)({\n                                            ctor: coerce(ctor)\n                                        }));\n                                    };\n                                };\n                            };\n                        },\n                        deleteFromCache: function ($153) {\n                            return (function (v1) {\n                                return v1.deleteFromCache;\n                            })(unwrap($153));\n                        }\n                    })(map2(unwrap)(v))(dimap(map2(function ($154) {\n                        return wrap((function (v1) {\n                            return v1(Data_Unit.unit);\n                        })($154));\n                    }))(unwrap)(c));\n                };\n            };\n            return Deku_Core.dyn(mapFlipped(pure(Data_Unit.unit))(function (v) {\n                return pure(Deku_Core.insert_(go(map2(function (v1) {\n                    return v1;\n                })(v$prime))(c$prime)));\n            }));\n        };\n    };\n};\nvar portal2 = /* #__PURE__ */ portal();\nvar portal1 = function (i) {\n    return function (f) {\n        return portal2(Data_FastVect_FastVect.singleton(i))(lcmap(index(Type_Proxy[\"Proxy\"].value))(f));\n    };\n};\nexport {\n    blank,\n    deku,\n    elementify2,\n    toDeku,\n    globalPortal,\n    globalPortal1,\n    guard,\n    portal,\n    portal1,\n    switcher,\n    switcherFlipped,\n    text,\n    text_\n};\n", "export const setHydrating = (state) => () => {\n  state.hydrating = true;\n};\nexport const unSetHydrating = (state) => () => {\n  state.hydrating = false;\n};\nexport const attributeParent_ = (runOnJust) => (a) => (state) => () => {\n  // console.log(\"attributeParent_\", a);\n  if (state.units[a.id]) {\n    const dom = state.units[a.parent].main;\n    // only attribute if it is not attributed already\n    if (\n      !(\n        (state.units[a.id].main && state.units[a.id].main.parentNode) ||\n        (state.units[a.id].startBeacon &&\n          state.units[a.id].startBeacon.parentNode)\n      )\n    ) {\n      const iRan = a.ez\n        ? (() => {\n            if (state.units[a.id].main) {\n              dom.appendChild(state.units[a.id].main);\n            } else {\n              dom.appendChild(state.units[a.id].startBeacon);\n              dom.appendChild(state.units[a.id].endBeacon);\n            }\n            return true;\n          })()\n        : runOnJust(a.pos)((pos) => () => {\n            // when attributing,\n            // we only care about positional information for\n            // things with a dyn family\n            // otherwise, they can't be inserted anywhere\n            // other than at the back of their collection\n            return runOnJust(a.dynFamily)((dynFamily) => () => {\n              var i = 0;\n              var j = 0;\n              var terminalDyn;\n              while (j < dom.childNodes.length) {\n                if (\n                  dom.childNodes[j].nodeType === 8 &&\n                  dom.childNodes[j].nodeValue === \"%-%\" + dynFamily\n                ) {\n                  // we have found our starting position, which is one\n                  // after this dyn node\n                  j += 1;\n                  break;\n                }\n                j++;\n              }\n              const inserter = (k) => {\n                const anchorNode = dom.childNodes[k];\n                if (state.units[a.id].startBeacon) {\n                  dom.insertBefore(\n                    state.units[a.id].startBeacon,\n                    anchorNode\n                  );\n                  dom.insertBefore(\n                    state.units[a.id].endBeacon,\n                    anchorNode\n                  );\n                } else {\n                  dom.insertBefore(state.units[a.id].main, anchorNode);\n                }\n              };\n              while (j < dom.childNodes.length) {\n                var tmpDekuId;\n                if ((tmpDekuId = dom.childNodes[j].$dekuId)) {\n                  // if this has the same dyn family AND pos information, we take it into account\n                  const insertHappened = runOnJust(\n                    state.units[tmpDekuId].dynFamily\n                  )((tmpDynFamily) => () => {\n                    const insertHappened2 = runOnJust(\n                      state.units[tmpDekuId].pos\n                    )((tmpPos) => () => {\n                      if (dynFamily === tmpDynFamily && pos <= tmpPos) {\n                        inserter(j);\n                        return true;\n                      }\n                      return false;\n                    })();\n                    return insertHappened2;\n                  })();\n                  if (insertHappened) {\n                    return true;\n                  }\n                }\n                if (i === pos) {\n                  inserter(j);\n                  return true;\n                }\n                if (\n                  dom.childNodes[j].nodeType === 8 &&\n                  dom.childNodes[j].nodeValue === \"%-%\" + dynFamily + \"%-%\"\n                ) {\n                  // we have hit the end\n                  // insert here\n                  inserter(j);\n                  return true;\n                }\n                // we are starting a dynamic bloc\n                // suspend incrementing until we hit its end\n                if (\n                  dom.childNodes[j].nodeType === 8 &&\n                  dom.childNodes[j].nodeValue.substring(0, 3) === \"%-%\" &&\n                  !terminalDyn\n                ) {\n                  terminalDyn = dom.childNodes[j].nodeValue + \"%-%\";\n                }\n                // we are not in a dynamic bloc, increment normally\n                if (!terminalDyn) {\n                  i++;\n                }\n                // we are ending a dynamic bloc and we can safely increment now\n                if (\n                  dom.childNodes[j].nodeType === 8 &&\n                  dom.childNodes[j].nodeValue === terminalDyn\n                ) {\n                  terminalDyn = undefined;\n                  i++;\n                }\n                j++;\n              }\n              return false;\n            })();\n          })();\n      if (!iRan) {\n        // this is a pursx child element\n        // pursx children will _never_ have positional information\n        // as they are one-offs in the pursx tree\n        // however, the way that makePursX is done, there is a thin\n        // wrapper node created around the main node\n        // the way we solve that in this function is to replace the\n        // wrapper with its child.\n        if (a.parent.indexOf(\"@!%\") !== -1) {\n          // TODO: do we also need to update dkid stuff here?\n          const usedDynBeacon = runOnJust(a.dynFamily)((df) => () => {\n            if (state.units[a.id].main) {\n              state.units[df].endBeacon.parentNode.insertBefore(\n                state.units[a.id].main,\n                state.units[df].endBeacon\n              );\n            } else {\n              state.units[df].endBeacon.parentNode.insertBefore(\n                state.units[a.id].endBeacon,\n                state.units[df].endBeacon\n              );\n              state.units[df].endBeacon.parentNode.insertBefore(\n                state.units[a.id].startBeacon,\n                state.units[a.id].endBeacon\n              );\n            }\n            return true;\n          })();\n          if (usedDynBeacon) {\n          } else if (state.units[a.id].main) {\n            dom.parentNode.replaceChild(state.units[a.id].main, dom);\n          } else {\n            dom.parentNode.replaceChild(state.units[a.id].endBeacon, dom);\n            state.units[a.id].endBeacon.parentNode.insertBefore(\n              state.units[a.id].startBeacon,\n              state.units[a.id].endBeacon\n            );\n          }\n        } else {\n          // we insert it at the end of its dyn family\n          const hasADynFamily = runOnJust(a.dynFamily)((dynFamily) => () => {\n            if (state.units[a.id].startBeacon) {\n              dom.insertBefore(\n                state.units[a.id].startBeacon,\n                state.units[dynFamily].endBeacon\n              );\n              dom.insertBefore(\n                state.units[a.id].endBeacon,\n                state.units[dynFamily].endBeacon\n              );\n            } else {\n              dom.insertBefore(\n                state.units[a.id].main,\n                state.units[dynFamily].endBeacon\n              );\n            }\n            return true;\n          })();\n          // vanilla node inserting. no need to do any fancy positional stuff\n          // we just tack it on to the end\n          if (!hasADynFamily) {\n            if (state.units[a.id].startBeacon) {\n              dom.appendChild(state.units[a.id].startBeacon);\n              dom.appendChild(state.units[a.id].endBeacon);\n            } else {\n              dom.appendChild(state.units[a.id].main);\n            }\n          }\n        }\n      }\n    }\n  }\n};\nexport const getAllComments = (state) => () => {\n  function filterNone() {\n    return NodeFilter.FILTER_ACCEPT;\n  }\n\n  function getAllComments(rootElem) {\n    var iterator = document.createNodeIterator(\n      rootElem,\n      NodeFilter.SHOW_COMMENT,\n      filterNone,\n      false\n    );\n    var curNode;\n    while ((curNode = iterator.nextNode())) {\n      if (curNode.nodeValue.substring(0, 3) === \"%-%\") {\n        state.allBeacons[curNode.nodeValue.substring(3)] = curNode;\n      }\n    }\n  }\n\n  getAllComments(document.documentElement);\n};\nexport const makeDynBeacon_ =\n  (runOnJust) => (tryHydration) => (a) => (state) => () => {\n    // console.log(\"makeDynBeacon_\", a);\n    var startBeacon;\n    var endBeacon;\n    var ptr = a.id;\n    if (!state.scopes[a.scope]) {\n      state.scopes[a.scope] = [];\n    }\n    state.scopes[a.scope].push(ptr);\n    // note that, for portals, this will be broken in its current form\n    const iRan = runOnJust(a.parent)(() => () => {\n      if (\n        state.hydrating &&\n        tryHydration &&\n        (startBeacon = state.allBeacons[a.id]) &&\n        (endBeacon = state.allBeacons[`${a.id}%-%`])\n      ) {\n        state.units[ptr] = {\n          listeners: {},\n          parent: a.parent,\n          scope: a.scope,\n          pos: a.pos,\n          dynFamily: a.dynFamily,\n          startBeacon,\n          endBeacon,\n        };\n        startBeacon.$dekuId = ptr;\n        endBeacon.$dekuId = ptr;\n        return true;\n      }\n      return false;\n    })();\n    if (!iRan) {\n      const startBeacon = document.createComment(`%-%${a.id}`);\n      const endBeacon = document.createComment(`%-%${a.id}%-%`);\n      state.units[ptr] = {\n        listeners: {},\n        parent: a.parent,\n        dynFamily: a.dynFamily,\n        scope: a.scope,\n        pos: a.pos,\n        startBeacon,\n        endBeacon,\n      };\n      startBeacon.$dekuId = ptr;\n      endBeacon.$dekuId = ptr;\n    }\n  };\n\nconst svgTags = new Set([\n  \"animate\",\n  \"animateMotion\",\n  \"animateTransform\",\n  \"circle\",\n  \"clipPath\",\n  \"defs\",\n  \"desc\",\n  \"discard\",\n  \"ellipse\",\n  \"feBlend\",\n  \"feColorMatrix\",\n  \"feComponentTransfer\",\n  \"feComposite\",\n  \"feConvolveMatrix\",\n  \"feDiffuseLighting\",\n  \"feDisplacementMap\",\n  \"feDistantLight\",\n  \"feDropShadow\",\n  \"feFlood\",\n  \"feFuncA\",\n  \"feFuncB\",\n  \"feFuncG\",\n  \"feFuncR\",\n  \"feGaussianBlur\",\n  \"feImage\",\n  \"feMerge\",\n  \"feMergeNode\",\n  \"feMorphology\",\n  \"feOffset\",\n  \"fePointLight\",\n  \"feSpecularLighting\",\n  \"feSpotLight\",\n  \"feTile\",\n  \"feTurbulence\",\n  \"filter\",\n  \"foreignObject\",\n  \"g\",\n  \"image\",\n  \"line\",\n  \"linearGradient\",\n  \"marker\",\n  \"mask\",\n  \"metadata\",\n  \"mpath\",\n  \"path\",\n  \"pattern\",\n  \"polygon\",\n  \"polyline\",\n  \"radialGradient\",\n  \"rect\",\n  \"set\",\n  \"stop\",\n  \"svg\",\n  \"switch\",\n  \"symbol\",\n  \"text\",\n  \"textPath\",\n  \"title\",\n  \"tspan\",\n  \"use\",\n  \"view\",\n]);\nexport const getPos = (id) => (state) => () =>\n  state.units[id] && state.units[id].pos\n    ? state.units[id].pos\n    : (() => {\n        throw new Error(`No positional information for ${id}`);\n      })();\nexport const getDynFamily = (id) => (state) => () =>\n  state.units[id] && state.units[id].dynFamily\n    ? state.units[id].dynFamily\n    : (() => {\n        throw new Error(`No positional information for ${id}`);\n      })();\nexport const getParent = (id) => (state) => () =>\n  state.units[id] &&\n  state.units[id].main &&\n  state.units[id].main.parentNode &&\n  state.units[id].main.parentNode.$dekuId\n    ? state.units[id].main.parentNode.$dekuId\n    : state.units[id] &&\n      state.units[id].startBeacon &&\n      state.units[id].startBeacon.parentNode &&\n      state.units[id].startBeacon.parentNode.$dekuId\n    ? state.units[id].startBeacon.parentNode.$dekuId\n    : (() => {\n        throw new Error(`No parent information for ${id}`);\n      })();\nexport const getScope = (id) => (state) => () =>\n  state.units[id] && state.units[id].scope\n    ? state.units[id].scope\n    : (() => {\n        throw new Error(`No scope information for ${id}`);\n      })();\n\nexport const makeElement_ =\n  (runOnJust) => (tryHydration) => (a) => (state) => () => {\n    // console.log(\"makeElement_\", a);\n    var dom;\n    var ptr = a.id;\n    if (!state.scopes[a.scope]) {\n      state.scopes[a.scope] = [];\n    }\n    state.scopes[a.scope].push(ptr);\n    // note that, for portals, this will be broken in its current form\n    const iRan = runOnJust(a.parent)(() => () => {\n      if (\n        state.hydrating &&\n        tryHydration &&\n        (dom = document.documentElement.querySelector(\n          `[data-deku-ssr=\"${ptr}\"]`\n        ))\n      ) {\n        state.units[ptr] = {\n          listeners: {},\n          pos: a.pos,\n          parent: a.parent,\n          scope: a.scope,\n          dynFamily: a.dynFamily,\n          main: dom,\n        };\n        dom.$dekuId = ptr;\n        return true;\n      }\n      return false;\n    })();\n    if (!iRan) {\n      const main = svgTags.has(a.tag)\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", a.tag)\n        : document.createElement(a.tag);\n      state.units[ptr] = {\n        listeners: {},\n        parent: a.parent,\n        pos: a.pos,\n        scope: a.scope,\n        dynFamily: a.dynFamily,\n        main,\n      };\n      main.$dekuId = ptr;\n    }\n  };\n\nexport const makeText_ =\n  (runOnJust) => (tryHydration) => (maybe) => (a) => (state) => () => {\n    // console.log(\"makeText_\", a);\n    var ptr = a.id;\n    var dom;\n    if (!state.scopes[a.scope]) {\n      state.scopes[a.scope] = [];\n    }\n    state.scopes[a.scope].push(ptr);\n    // for SSR, we need a parent, otherwise we cannot get the child node\n    // note that, for portals, this will be broken in its current form\n    const iRan = runOnJust(a.parent)((parent) => () => {\n      if (\n        state.hydrating &&\n        tryHydration &&\n        // hack\n        (dom = document.documentElement\n          // hack\n          .querySelector(`[data-deku-ssr=\"${parent}\"]`))\n      ) {\n        var i = 0;\n        for (; i < dom.childNodes.length; i++) {\n          const ptrSplit = ptr.split(\"@-@\");\n          if (\n            dom.childNodes[i].nodeType === 8 &&\n            dom.childNodes[i].nodeValue === ptrSplit[0]\n          ) {\n            var textWasBlank = i === 0 || dom.childNodes[i - 1].nodeType !== 3;\n            if (textWasBlank && i !== 0) {\n              dom.insertBefore(\n                document.createTextNode(\"\"),\n                dom.childNodes[i]\n              );\n            } else if (textWasBlank) {\n              dom.prepend(document.createTextNode(\"\"));\n            } else {\n              i = i - 1;\n            }\n            break;\n          }\n        }\n        const main = dom.childNodes[i];\n        state.units[ptr] = {\n          // if we've done ssr for a text node, it will be a span,\n          // so we want to get the child node\n          main,\n          pos: a.pos,\n          parent: a.parent,\n          scope: a.scope,\n        };\n        main.$dekuId = ptr;\n        return true;\n      }\n      return false;\n    })();\n    if (!iRan) {\n      const main = document.createTextNode(\"\");\n      state.units[ptr] = {\n        main,\n        parent: a.parent,\n        scope: a.scope,\n        pos: a.pos,\n        dynFamily: a.dynFamily,\n      };\n      main.$dekuId = ptr;\n    }\n  };\n\nexport function makeFFIDOMSnapshot() {\n  return {\n    units: {},\n    scopes: {},\n    allBeacons: {},\n  };\n}\n\nexport const setProp_ = (tryHydration) => (a) => (state) => () => {\n  // console.log(\"setProp_\", a);\n  if (state.units[a.id]) {\n    var ptr = a.id;\n    var avv = a.value;\n    // it may be the case that we have created an element via\n    // pursx but not added it to the global state yet\n    if (\n      state.hydrating &&\n      tryHydration &&\n      !state.units[ptr] &&\n      (dom = document.documentElement.querySelector(`[data-deku-ssr=\"${ptr}\"]`))\n    ) {\n      state.units[ptr] = {\n        listeners: {},\n        parent: a.parent,\n        scope: a.scope,\n        main: dom,\n      };\n      if (!state.scopes[a.scope]) {\n        state.scopes[a.scope] = [];\n      }\n      state.scopes[a.scope].push(ptr);\n    }\n    if (state.units[ptr].main.tagName === \"INPUT\" && a.key === \"value\") {\n      state.units[ptr].main.value = avv;\n    } else if (\n      state.units[ptr].main.tagName === \"TEXTAREA\" &&\n      a.key === \"value\"\n    ) {\n      state.units[ptr].main.value = avv;\n    } else if (\n      state.units[ptr].main.tagName === \"INPUT\" &&\n      a.key === \"checked\"\n    ) {\n      state.units[ptr].main.checked = avv === \"true\";\n    } else if (a.key === \"disabled\") {\n      state.units[ptr].main.disabled = avv === \"true\";\n    } else {\n      state.units[ptr].main.setAttribute(a.key, avv);\n    }\n  }\n};\n\nexport const setCb_ = (tryHydration) => (a) => (state) => () => {\n  // console.log(\"setCb_\", a);\n  if (state.units[a.id]) {\n    var ptr = a.id;\n    var avv = a.value;\n    // it may be the case that we have created an element via\n    // pursx but not added it to the global state yet\n    if (\n      state.hydrating &&\n      tryHydration &&\n      !state.units[ptr] &&\n      (dom = document.documentElement.querySelector(`[data-deku-ssr=\"${ptr}\"]`))\n    ) {\n      state.units[ptr] = {\n        listeners: {},\n        parent: a.parent,\n        scope: a.scope,\n        main: dom,\n      };\n      if (!state.scopes[a.scope]) {\n        state.scopes[a.scope] = [];\n      }\n      state.scopes[a.scope].push(ptr);\n    }\n    if (a.key === \"@self@\") {\n      avv(state.units[ptr].main)();\n    } else {\n      if (state.units[ptr].listeners[a.key]) {\n        state.units[ptr].main.removeEventListener(\n          a.key,\n          state.units[ptr].listeners[a.key]\n        );\n      }\n      var el = (e) => avv(e)();\n      state.units[ptr].main.addEventListener(a.key, el);\n      state.units[ptr].listeners[a.key] = el;\n    }\n  }\n};\n\nexport const unsetAttribute_ = (tryHydration) => (a) => (state) => () => {\n  // console.log(\"unsetAttribute_\", a);\n  if (state.units[a.id]) {\n    var ptr = a.id;\n    // it may be the case that we have created an element via\n    // pursx but not added it to the global state yet\n    if (\n      state.hydrating &&\n      tryHydration &&\n      !state.units[ptr] &&\n      (dom = document.documentElement.querySelector(`[data-deku-ssr=\"${ptr}\"]`))\n    ) {\n      state.units[ptr] = {\n        listeners: {},\n        parent: a.parent,\n        scope: a.scope,\n        main: dom,\n      };\n      if (!state.scopes[a.scope]) {\n        state.scopes[a.scope] = [];\n      }\n      state.scopes[a.scope].push(ptr);\n    }\n    state.units[ptr].main.removeAttribute(a.key);\n  }\n};\nexport const setText_ = (a) => (state) => () => {\n  // console.log(\"setText_\", a);\n  if (state.units[a.id]) {\n    var ptr = a.id;\n    state.units[ptr].main.nodeValue = a.text;\n  }\n};\n\nexport const makePursx_ =\n  (runOnJust) => (tryHydration) => (maybe) => (a) => (state) => () => {\n    // console.log(\"makePursx_\", a);\n    var dom;\n    var tmp;\n    var ptr = a.id;\n    var html = a.html;\n    var verb = a.verb;\n    var cache = a.cache;\n    var parent = a.parent;\n    var scope = a.scope;\n    var pxScope = a.pxScope;\n    // note that, for portals, this will be broken in its current form\n    const iRan = runOnJust(a.parent)(() => () => {\n      if (\n        state.hydrating &&\n        tryHydration &&\n        // hack\n        (dom = document.documentElement.querySelector(\n          `[data-deku-ssr=\"${ptr}\"]`\n        ))\n      ) {\n        state.units[ptr] = {\n          listeners: {},\n          pos: a.pos,\n          scope: scope,\n          parent: parent,\n          main: dom,\n        };\n        dom.$dekuId = ptr;\n        return true;\n      }\n      return false;\n    })();\n    if (!iRan) {\n      const entries = Object.entries(cache);\n      for (var i = 0; i < entries.length; i++) {\n        const key = entries[i][0];\n        if (entries[i][1] === true) {\n          // it is an attribute\n          html = html.replace(\n            verb + key + verb,\n            \"data-deku-attr-internal=\" + '\"' + key + '\"'\n          );\n        } else {\n          html = html.replace(\n            verb + key + verb,\n            '<span style=\"display:contents;\" data-deku-elt-internal=' +\n              '\"' +\n              key +\n              '\"></span>'\n          );\n        }\n      }\n      tmp = document.createElement(\"div\");\n      tmp.innerHTML = html.trim();\n      state.units[ptr] = {\n        listeners: {},\n        pos: a.pos,\n        scope: scope,\n        parent: parent,\n        main: tmp.firstChild,\n      };\n      tmp.firstChild.$dekuId = ptr;\n    }\n    if (!state.scopes[scope]) {\n      state.scopes[scope] = [];\n    }\n    state.scopes[scope].push(ptr);\n    // we were hydrating if tmp is not defined\n    if (!tmp) {\n      // need to test if this will work in all cases! especially when we're setting\n      // attributes of the top-level element\n      tmp = dom;\n    }\n    tmp.querySelectorAll(\"[data-deku-attr-internal]\").forEach(function (e) {\n      var key = e.getAttribute(\"data-deku-attr-internal\");\n      // each individual unit has the name of the key plus its scope\n      // this is necessary to avoid namespacing conflicts\n      // in case multiple purs-x contain the same key\n      const namespacedKey = key + \"@!%\" + pxScope;\n      state.units[namespacedKey] = {\n        listeners: {},\n        main: e,\n        scope: scope,\n      };\n      state.scopes[scope].push(namespacedKey);\n    });\n    tmp.querySelectorAll(\"[data-deku-elt-internal]\").forEach(function (e) {\n      var key = e.getAttribute(\"data-deku-elt-internal\");\n      const namespacedKey = key + \"@!%\" + pxScope;\n      state.units[key + \"@!%\" + pxScope] = {\n        listeners: {},\n        main: e,\n        scope: scope,\n      };\n      state.scopes[scope].push(namespacedKey);\n    });\n    // fresh node, should be removed from parent\n    if (!iRan) {\n      state.units[ptr].main.remove();\n    }\n  };\n\nexport const makeRoot_ = (a) => (state) => () => {\n  // console.log(\"makeRoot_\", a);\n  var ptr = a.id;\n  state.units[ptr] = {\n    main: a.root,\n  };\n  a.root.$dekuId = ptr;\n};\n\nexport const giveNewParent_ = (just) => (runOnJust) => (b) => (state) => () => {\n  // console.log(\"giveNewParent_\", b);\n  const insertAt = (ptr, parent, node) => {\n    if (state.units[ptr].startBeacon) {\n      // we continue this operation until we hit the end beacon\n      var x = state.units[ptr].startBeacon;\n      var y = x.nextSibling;\n      state.units[parent].main.insertBefore(x, node);\n      x = y;\n      while (x && x !== state.units[ptr].endBeacon) {\n        y = x.nextSibling;\n        state.units[parent].main.insertBefore(x, node);\n        x = y;\n      }\n    } else {\n      state.units[parent].main.insertBefore(state.units[ptr].main, node);\n    }\n  };\n  const runMe = [];\n  // this is a hold over from when runMe had multiple items\n  // we can safely change it now\n  runMe.push(b);\n  for (var z = 0; z < runMe.length; z++) {\n    const a = runMe[z];\n    const ptr = a.id;\n    const parent = a.parent;\n    state.units[ptr].containingScope = a.scope;\n    var aPos = undefined;\n    runOnJust(a.pos)((myPos) => () => {\n      aPos = myPos;\n      return true;\n    })();\n    if (aPos === undefined) {\n      aPos = Number.MAX_VALUE;\n    }\n    const nodes = state.units[parent].main.childNodes;\n    // todo: binary search would be faster\n    var i = 0;\n    var didInsert = false;\n    // we always use this as an opportunity to fix up the positions\n    // which is a full traversal\n    // slow, and we can consider optimizing this\n    // but that way, after this operation, all of the positions are guaranteed to be correct\n    var pos = 0;\n    while (i < nodes.length) {\n      var dkid;\n      if ((dkid = nodes[i].$dekuId)) {\n        // first, we check if we're alreay at the end of a dyn family\n        // and we haven't done the insert yet\n        // if so, we perform the insert\n        const insertedBeforeEndBeacon = runOnJust(a.dynFamily)((df) => () => {\n          if (didInsert) {\n            return false;\n          }\n          if (state.units[dkid].endBeacon === nodes[i] && df === dkid) {\n            state.units[ptr].pos = just(pos);\n            insertAt(ptr, parent, nodes[i]);\n            return true;\n          }\n          return false;\n        })();\n        if (insertedBeforeEndBeacon) {\n          didInsert = true;\n          break;\n        }\n        if (state.units[dkid].dynFamily !== state.units[ptr].dynFamily) {\n          i++;\n          continue;\n        }\n\n        // if we've found equal positions already we stop here\n        // as all we care about is the pos fixer-upper happening above\n        if (didInsert) {\n          i++;\n          continue;\n        }\n\n        // if the positions are equal, insert before and return true\n        if (pos === aPos) {\n          insertAt(ptr, parent, nodes[i]);\n          // increment pos by one as there's been an insert\n          pos++;\n          didInsert = true;\n        }\n        // only set if not end beacon, as end beacon will have already\n        // gotten the position when this iterates over the start beacon\n        else if (state.units[dkid].endBeacon !== nodes[i]) {\n          state.units[dkid].pos = just(pos);\n          pos++;\n        }\n      }\n      i++;\n    }\n    if (didInsert) {\n      return;\n    }\n    // we return true anyway, as this just means that we can tack this onto the end of our structure\n    if (state.units[ptr].main) {\n      state.units[parent].main.appendChild(state.units[ptr].main);\n    } else {\n      var x = state.units[ptr].startBeacon;\n      var y = x.nextSibling;\n      state.units[parent].main.appendChild(x);\n      x = y;\n      while (x && x !== state.units[ptr].endBeacon) {\n        y = x.nextSibling;\n        state.units[parent].main.appendChild(x);\n        x = y;\n      }\n    }\n  }\n};\n\nexport const disconnectElement_ = (a) => (state) => () => {\n  // console.log(\"disconnectElement_\", a);\n  if (state.units[a.id]) {\n    var ptr = a.id;\n    if (\n      state.units[ptr].containingScope &&\n      !a.scopeEq(state.units[ptr].containingScope)(a.scope)\n    ) {\n      return;\n    }\n\n    if (state.units[ptr].main) {\n      state.units[ptr].main.remove();\n    } else {\n      // when we disconnect a dyn, we _always_ need to\n      // keep the elements grouped together\n      // so instead of removing them\n      // we add them to a dummy element to preserve their order\n      const dummy = document.createElement(\"div\");\n      var x = state.units[ptr].startBeacon;\n      var y = x.nextSibling;\n      dummy.appendChild(x);\n      x = y;\n      // iterate up until last beacon\n      while (x && x !== state.units[ptr].endBeacon) {\n        y = x.nextSibling;\n        dummy.appendChild(x);\n        x = y;\n      }\n      // account for the last beacon\n      if (x === state.units[ptr].endBeacon) {\n        dummy.appendChild(x);\n      }\n    }\n  }\n};\n\nexport const stateHasKey = (id) => (state) => () => {\n  return state.units[id] !== undefined;\n};\n\nexport const deleteFromCache_ = (a) => (state) => () => {\n  // console.log(\"deleteFromCache_\", a);\n  if (state.units[a.id]) {\n    delete state.units[a.id];\n  }\n};\n\nexport const removeDynBeacon_ = deleteFromCache_;", "\"use strict\";\n\nexport function codePointAtImpl (just, nothing, i, s) {\n  var codePointArray = Array.from(s);\n  var isWithinRange  = i >= 0 && i < codePointArray.length;\n\n  return isWithinRange ? just(codePointArray[i].codePointAt(0)) : nothing;\n}\n\nexport function codePointAtPrimeImpl (just, nothing, i, s) {\n  return i >= 0 && i < s.length ? just(s.codePointAt(i)) : nothing;\n}\n\nexport function endsWithImpl (searchString, s) {\n  return s.endsWith(searchString);\n}\n\nexport function endsWithPrimeImpl (searchString, position, s) {\n  return s.endsWith(searchString, position);\n}\n\nexport function escapeRegexImpl (str) {\n  return str.replace(/[.*+?^${}()|[\\]\\-\\\\]/g, \"\\\\$&\");\n}\n\nexport function fromCharArrayImpl (array) {\n  return array.join(\"\");\n}\n\nexport function includesImpl (searchString, str) {\n  return str.includes(searchString);\n}\n\nexport function includesPrimeImpl (needle, position, haystack) {\n  // For negative `position` values, we search from the beginning of the\n  // string. This is in accordance with the native\n  // `String.prototype.include` function.\n  var pos = Math.max(0, position);\n\n  // Converting to arrays takes care of any surrogate code points\n  var needleA    = Array.from(needle);\n  var haystackA  = Array.from(haystack).slice(pos);\n  var needleALen = needleA.length;\n\n  var maxIndex = haystackA.length + 1 - needleALen;\n  var found    = false;\n  var i;\n\n  // Naive implementation, at some point we should check whether Boyer-Moore\n  // or Knuth-Morris-Pratt are worthwhile\n  for (i = 0; i < maxIndex; i++) {\n    if (needleA.every(function (e, j) { return e === haystackA[i+j]; })) {\n      found = true;\n      break;\n    }\n  }\n\n  return found;\n}\n\nexport function lengthImpl (str) {\n  return Array.from(str).length;\n}\n\nexport function linesImpl (str) {\n  // See http://www.unicode.org/reports/tr18/#RL1.6\n  return str.split(/\\r\\n|[\\n\\v\\f\\r\\u0085\\u2028\\u2029]/);\n}\n\nexport function normalizeImpl (str) {\n  return str.normalize();\n}\n\nexport function normalizePrimeImpl (normalizationForm, str) {\n  return str.normalize(normalizationForm);\n}\n\nexport function padEndPrimeImpl (targetLength, str) {\n  return str.padEnd(targetLength);\n}\n\nexport function padStartPrimeImpl (targetLength, str) {\n  return str.padStart(targetLength);\n}\n\nexport function repeatImpl (just, nothing, n, str) {\n  var result;\n\n  try {\n    result = just(str.repeat(n));\n  }\n  catch (error) {\n    result = nothing;\n  }\n\n  return result;\n}\n\nexport function startsWithImpl (searchString, s) {\n  return s.startsWith(searchString);\n}\n\nexport function startsWithPrimeImpl (searchString, position, s) {\n  return s.startsWith(searchString, position);\n}\n\nexport function stripCharsImpl (chars, s) {\n  return s.replace(RegExp(\"[\" + escapeRegexImpl(chars) + \"]\", \"g\"), \"\");\n}\n\nexport function stripDiacriticsImpl (str) {\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n}\n\nexport function toCharArrayImpl (str) {\n  return Array.from(str);\n}\n\nexport function unsafeCodePointAtImpl (i, s) {\n  var codePointArray = Array.from(s);\n  var isWithinRange = i >= 0 && i < codePointArray.length;\n\n  if (isWithinRange) {\n    return codePointArray[i].codePointAt(0);\n  }\n  else {\n    throw new Error(\"Data.String.Utils.unsafeCodePointAt: Invalid index\");\n  }\n}\n\nexport function unsafeCodePointAtPrimeImpl (i, s) {\n  if (i >= 0 && i < s.length) {\n    return s.codePointAt(i);\n  }\n  else {\n    throw new Error(\"Data.String.Utils.unsafeCodePointAt': Invalid index\");\n  }\n}\n\nexport function unsafeRepeatImpl (n, str) {\n  try {\n    return str.repeat(n);\n  }\n  catch (error) {\n    throw new Error(\"Data.String.Utils.unsafeRepeat: Invalid count\");\n  }\n}\n\nexport function wordsImpl (s) {\n  // Split at every Unicode whitespace character (25 as of Unicode 12.1)\n  return s.split(/[\\u000a-\\u000d\\u0085\\u2028\\u2029\\u0009\\u0020\\u00a0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000]+/);\n}\n", "/* global Symbol */\n\nvar hasArrayFrom = typeof Array.from === \"function\";\nvar hasStringIterator =\n  typeof Symbol !== \"undefined\" &&\n  Symbol != null &&\n  typeof Symbol.iterator !== \"undefined\" &&\n  typeof String.prototype[Symbol.iterator] === \"function\";\nvar hasFromCodePoint = typeof String.prototype.fromCodePoint === \"function\";\nvar hasCodePointAt = typeof String.prototype.codePointAt === \"function\";\n\nexport const _unsafeCodePointAt0 = function (fallback) {\n  return hasCodePointAt\n    ? function (str) { return str.codePointAt(0); }\n    : fallback;\n};\n\nexport const _codePointAt = function (fallback) {\n  return function (Just) {\n    return function (Nothing) {\n      return function (unsafeCodePointAt0) {\n        return function (index) {\n          return function (str) {\n            var length = str.length;\n            if (index < 0 || index >= length) return Nothing;\n            if (hasStringIterator) {\n              var iter = str[Symbol.iterator]();\n              for (var i = index;; --i) {\n                var o = iter.next();\n                if (o.done) return Nothing;\n                if (i === 0) return Just(unsafeCodePointAt0(o.value));\n              }\n            }\n            return fallback(index)(str);\n          };\n        };\n      };\n    };\n  };\n};\n\nexport const _countPrefix = function (fallback) {\n  return function (unsafeCodePointAt0) {\n    if (hasStringIterator) {\n      return function (pred) {\n        return function (str) {\n          var iter = str[Symbol.iterator]();\n          for (var cpCount = 0; ; ++cpCount) {\n            var o = iter.next();\n            if (o.done) return cpCount;\n            var cp = unsafeCodePointAt0(o.value);\n            if (!pred(cp)) return cpCount;\n          }\n        };\n      };\n    }\n    return fallback;\n  };\n};\n\nexport const _fromCodePointArray = function (singleton) {\n  return hasFromCodePoint\n    ? function (cps) {\n      // Function.prototype.apply will fail for very large second parameters,\n      // so we don't use it for arrays with 10,000 or more entries.\n      if (cps.length < 10e3) {\n        return String.fromCodePoint.apply(String, cps);\n      }\n      return cps.map(singleton).join(\"\");\n    }\n    : function (cps) {\n      return cps.map(singleton).join(\"\");\n    };\n};\n\nexport const _singleton = function (fallback) {\n  return hasFromCodePoint ? String.fromCodePoint : fallback;\n};\n\nexport const _take = function (fallback) {\n  return function (n) {\n    if (hasStringIterator) {\n      return function (str) {\n        var accum = \"\";\n        var iter = str[Symbol.iterator]();\n        for (var i = 0; i < n; ++i) {\n          var o = iter.next();\n          if (o.done) return accum;\n          accum += o.value;\n        }\n        return accum;\n      };\n    }\n    return fallback(n);\n  };\n};\n\nexport const _toCodePointArray = function (fallback) {\n  return function (unsafeCodePointAt0) {\n    if (hasArrayFrom) {\n      return function (str) {\n        return Array.from(str, unsafeCodePointAt0);\n      };\n    }\n    return fallback;\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar guard = function (dictAlternative) {\n    var pure = Control_Applicative.pure(dictAlternative.Applicative0());\n    var empty = Control_Plus.empty(dictAlternative.Plus1());\n    return function (v) {\n        if (v) {\n            return pure(Data_Unit.unit);\n        };\n        if (!v) {\n            return empty;\n        };\n        throw new Error(\"Failed pattern match at Control.Alternative (line 48, column 1 - line 48, column 54): \" + [ v.constructor.name ]);\n    };\n};\nvar alternativeArray = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeArray;\n    },\n    Plus1: function () {\n        return Control_Plus.plusArray;\n    }\n};\nexport {\n    guard,\n    alternativeArray\n};\nexport {\n    alt\n} from \"../Control.Alt/index.js\";\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    empty\n} from \"../Control.Plus/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alternative from \"../Control.Alternative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unfoldable1 from \"../Data.Unfoldable1/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar apply = /* #__PURE__ */ Control_Apply.apply(Control_Apply.applyFn);\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar top = /* #__PURE__ */ Data_Bounded.top(Data_Bounded.boundedInt);\nvar bottom = /* #__PURE__ */ Data_Bounded.bottom(Data_Bounded.boundedInt);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Data_Maybe.bindMaybe);\nvar voidLeft = /* #__PURE__ */ Data_Functor.voidLeft(Data_Maybe.functorMaybe);\nvar guard = /* #__PURE__ */ Control_Alternative.guard(Data_Maybe.alternativeMaybe);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar bottom1 = /* #__PURE__ */ Data_Bounded.bottom(Data_Bounded.boundedChar);\nvar top1 = /* #__PURE__ */ Data_Bounded.top(Data_Bounded.boundedChar);\nvar Cardinality = function (x) {\n    return x;\n};\nvar toEnum = function (dict) {\n    return dict.toEnum;\n};\nvar succ = function (dict) {\n    return dict.succ;\n};\nvar upFromIncluding = function (dictEnum) {\n    var succ1 = succ(dictEnum);\n    return function (dictUnfoldable1) {\n        return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(apply(Data_Tuple.Tuple.create)(succ1));\n    };\n};\nvar showCardinality = {\n    show: function (v) {\n        return \"(Cardinality \" + (show(v) + \")\");\n    }\n};\nvar pred = function (dict) {\n    return dict.pred;\n};\nvar ordCardinality = Data_Ord.ordInt;\nvar newtypeCardinality = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar fromEnum = function (dict) {\n    return dict.fromEnum;\n};\nvar toEnumWithDefaults = function (dictBoundedEnum) {\n    var toEnum1 = toEnum(dictBoundedEnum);\n    var fromEnum1 = fromEnum(dictBoundedEnum);\n    var bottom2 = Data_Bounded.bottom(dictBoundedEnum.Bounded0());\n    return function (low) {\n        return function (high) {\n            return function (x) {\n                var v = toEnum1(x);\n                if (v instanceof Data_Maybe.Just) {\n                    return v.value0;\n                };\n                if (v instanceof Data_Maybe.Nothing) {\n                    var $140 = x < fromEnum1(bottom2);\n                    if ($140) {\n                        return low;\n                    };\n                    return high;\n                };\n                throw new Error(\"Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): \" + [ v.constructor.name ]);\n            };\n        };\n    };\n};\nvar eqCardinality = Data_Eq.eqInt;\nvar enumUnit = /* #__PURE__ */ (function () {\n    return {\n        succ: Data_Function[\"const\"](Data_Maybe.Nothing.value),\n        pred: Data_Function[\"const\"](Data_Maybe.Nothing.value),\n        Ord0: function () {\n            return Data_Ord.ordUnit;\n        }\n    };\n})();\nvar enumTuple = function (dictEnum) {\n    var succ1 = succ(dictEnum);\n    var pred1 = pred(dictEnum);\n    var ordTuple = Data_Tuple.ordTuple(dictEnum.Ord0());\n    return function (dictBoundedEnum) {\n        var Bounded0 = dictBoundedEnum.Bounded0();\n        var bottom2 = Data_Bounded.bottom(Bounded0);\n        var Enum1 = dictBoundedEnum.Enum1();\n        var succ2 = succ(Enum1);\n        var top2 = Data_Bounded.top(Bounded0);\n        var pred2 = pred(Enum1);\n        var ordTuple1 = ordTuple(Enum1.Ord0());\n        return {\n            succ: function (v) {\n                return Data_Maybe.maybe(map(Data_Function.flip(Data_Tuple.Tuple.create)(bottom2))(succ1(v.value0)))((function () {\n                    var $183 = Data_Tuple.Tuple.create(v.value0);\n                    return function ($184) {\n                        return Data_Maybe.Just.create($183($184));\n                    };\n                })())(succ2(v.value1));\n            },\n            pred: function (v) {\n                return Data_Maybe.maybe(map(Data_Function.flip(Data_Tuple.Tuple.create)(top2))(pred1(v.value0)))((function () {\n                    var $185 = Data_Tuple.Tuple.create(v.value0);\n                    return function ($186) {\n                        return Data_Maybe.Just.create($185($186));\n                    };\n                })())(pred2(v.value1));\n            },\n            Ord0: function () {\n                return ordTuple1;\n            }\n        };\n    };\n};\nvar enumOrdering = {\n    succ: function (v) {\n        if (v instanceof Data_Ordering.LT) {\n            return new Data_Maybe.Just(Data_Ordering.EQ.value);\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return new Data_Maybe.Just(Data_Ordering.GT.value);\n        };\n        if (v instanceof Data_Ordering.GT) {\n            return Data_Maybe.Nothing.value;\n        };\n        throw new Error(\"Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): \" + [ v.constructor.name ]);\n    },\n    pred: function (v) {\n        if (v instanceof Data_Ordering.LT) {\n            return Data_Maybe.Nothing.value;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return new Data_Maybe.Just(Data_Ordering.LT.value);\n        };\n        if (v instanceof Data_Ordering.GT) {\n            return new Data_Maybe.Just(Data_Ordering.EQ.value);\n        };\n        throw new Error(\"Failed pattern match at Data.Enum (line 72, column 1 - line 78, column 20): \" + [ v.constructor.name ]);\n    },\n    Ord0: function () {\n        return Data_Ord.ordOrdering;\n    }\n};\nvar enumMaybe = function (dictBoundedEnum) {\n    var bottom2 = Data_Bounded.bottom(dictBoundedEnum.Bounded0());\n    var Enum1 = dictBoundedEnum.Enum1();\n    var succ1 = succ(Enum1);\n    var pred1 = pred(Enum1);\n    var ordMaybe = Data_Maybe.ordMaybe(Enum1.Ord0());\n    return {\n        succ: function (v) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return new Data_Maybe.Just(new Data_Maybe.Just(bottom2));\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return map(Data_Maybe.Just.create)(succ1(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): \" + [ v.constructor.name ]);\n        },\n        pred: function (v) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return Data_Maybe.Nothing.value;\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return new Data_Maybe.Just(pred1(v.value0));\n            };\n            throw new Error(\"Failed pattern match at Data.Enum (line 80, column 1 - line 84, column 32): \" + [ v.constructor.name ]);\n        },\n        Ord0: function () {\n            return ordMaybe;\n        }\n    };\n};\nvar enumInt = {\n    succ: function (n) {\n        var $153 = n < top;\n        if ($153) {\n            return new Data_Maybe.Just(n + 1 | 0);\n        };\n        return Data_Maybe.Nothing.value;\n    },\n    pred: function (n) {\n        var $154 = n > bottom;\n        if ($154) {\n            return new Data_Maybe.Just(n - 1 | 0);\n        };\n        return Data_Maybe.Nothing.value;\n    },\n    Ord0: function () {\n        return Data_Ord.ordInt;\n    }\n};\nvar enumFromTo = function (dictEnum) {\n    var Ord0 = dictEnum.Ord0();\n    var eq1 = Data_Eq.eq(Ord0.Eq0());\n    var lessThan1 = Data_Ord.lessThan(Ord0);\n    var succ1 = succ(dictEnum);\n    var lessThanOrEq1 = Data_Ord.lessThanOrEq(Ord0);\n    var pred1 = pred(dictEnum);\n    var greaterThanOrEq1 = Data_Ord.greaterThanOrEq(Ord0);\n    return function (dictUnfoldable1) {\n        var singleton = Data_Unfoldable1.singleton(dictUnfoldable1);\n        var unfoldr1 = Data_Unfoldable1.unfoldr1(dictUnfoldable1);\n        var go = function (step) {\n            return function (op) {\n                return function (to) {\n                    return function (a) {\n                        return new Data_Tuple.Tuple(a, bind(step(a))(function (a$prime) {\n                            return voidLeft(guard(op(a$prime)(to)))(a$prime);\n                        }));\n                    };\n                };\n            };\n        };\n        return function (v) {\n            return function (v1) {\n                if (eq1(v)(v1)) {\n                    return singleton(v);\n                };\n                if (lessThan1(v)(v1)) {\n                    return unfoldr1(go(succ1)(lessThanOrEq1)(v1))(v);\n                };\n                if (Data_Boolean.otherwise) {\n                    return unfoldr1(go(pred1)(greaterThanOrEq1)(v1))(v);\n                };\n                throw new Error(\"Failed pattern match at Data.Enum (line 186, column 14 - line 190, column 51): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    };\n};\nvar enumFromThenTo = function (dictUnfoldable) {\n    var unfoldr = Data_Unfoldable.unfoldr(dictUnfoldable);\n    return function (dictFunctor) {\n        var map1 = Data_Functor.map(dictFunctor);\n        return function (dictBoundedEnum) {\n            var fromEnum1 = fromEnum(dictBoundedEnum);\n            var toEnum1 = toEnum(dictBoundedEnum);\n            var go = function (step) {\n                return function (to) {\n                    return function (e) {\n                        if (e <= to) {\n                            return new Data_Maybe.Just(new Data_Tuple.Tuple(e, e + step | 0));\n                        };\n                        if (Data_Boolean.otherwise) {\n                            return Data_Maybe.Nothing.value;\n                        };\n                        throw new Error(\"Failed pattern match at Data.Enum (line 217, column 5 - line 219, column 28): \" + [ step.constructor.name, to.constructor.name, e.constructor.name ]);\n                    };\n                };\n            };\n            return function (a) {\n                return function (b) {\n                    return function (c) {\n                        var c$prime = fromEnum1(c);\n                        var b$prime = fromEnum1(b);\n                        var a$prime = fromEnum1(a);\n                        return map1(function ($187) {\n                            return fromJust(toEnum1($187));\n                        })(unfoldr(go(b$prime - a$prime | 0)(c$prime))(a$prime));\n                    };\n                };\n            };\n        };\n    };\n};\nvar enumEither = function (dictBoundedEnum) {\n    var Enum1 = dictBoundedEnum.Enum1();\n    var succ1 = succ(Enum1);\n    var pred1 = pred(Enum1);\n    var top2 = Data_Bounded.top(dictBoundedEnum.Bounded0());\n    var ordEither = Data_Either.ordEither(Enum1.Ord0());\n    return function (dictBoundedEnum1) {\n        var bottom2 = Data_Bounded.bottom(dictBoundedEnum1.Bounded0());\n        var Enum11 = dictBoundedEnum1.Enum1();\n        var succ2 = succ(Enum11);\n        var pred2 = pred(Enum11);\n        var ordEither1 = ordEither(Enum11.Ord0());\n        return {\n            succ: function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Right(bottom2)))(function ($188) {\n                        return Data_Maybe.Just.create(Data_Either.Left.create($188));\n                    })(succ1(v.value0));\n                };\n                if (v instanceof Data_Either.Right) {\n                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($189) {\n                        return Data_Maybe.Just.create(Data_Either.Right.create($189));\n                    })(succ2(v.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): \" + [ v.constructor.name ]);\n            },\n            pred: function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($190) {\n                        return Data_Maybe.Just.create(Data_Either.Left.create($190));\n                    })(pred1(v.value0));\n                };\n                if (v instanceof Data_Either.Right) {\n                    return Data_Maybe.maybe(new Data_Maybe.Just(new Data_Either.Left(top2)))(function ($191) {\n                        return Data_Maybe.Just.create(Data_Either.Right.create($191));\n                    })(pred2(v.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Enum (line 86, column 1 - line 90, column 69): \" + [ v.constructor.name ]);\n            },\n            Ord0: function () {\n                return ordEither1;\n            }\n        };\n    };\n};\nvar enumBoolean = {\n    succ: function (v) {\n        if (!v) {\n            return new Data_Maybe.Just(true);\n        };\n        return Data_Maybe.Nothing.value;\n    },\n    pred: function (v) {\n        if (v) {\n            return new Data_Maybe.Just(false);\n        };\n        return Data_Maybe.Nothing.value;\n    },\n    Ord0: function () {\n        return Data_Ord.ordBoolean;\n    }\n};\nvar downFromIncluding = function (dictEnum) {\n    var pred1 = pred(dictEnum);\n    return function (dictUnfoldable1) {\n        return Data_Unfoldable1.unfoldr1(dictUnfoldable1)(apply(Data_Tuple.Tuple.create)(pred1));\n    };\n};\nvar diag = function (a) {\n    return new Data_Tuple.Tuple(a, a);\n};\nvar downFrom = function (dictEnum) {\n    var pred1 = pred(dictEnum);\n    return function (dictUnfoldable) {\n        return Data_Unfoldable.unfoldr(dictUnfoldable)((function () {\n            var $192 = map(diag);\n            return function ($193) {\n                return $192(pred1($193));\n            };\n        })());\n    };\n};\nvar upFrom = function (dictEnum) {\n    var succ1 = succ(dictEnum);\n    return function (dictUnfoldable) {\n        return Data_Unfoldable.unfoldr(dictUnfoldable)((function () {\n            var $194 = map(diag);\n            return function ($195) {\n                return $194(succ1($195));\n            };\n        })());\n    };\n};\nvar defaultToEnum = function (dictBounded) {\n    var bottom2 = Data_Bounded.bottom(dictBounded);\n    return function (dictEnum) {\n        var succ1 = succ(dictEnum);\n        return function (i$prime) {\n            var go = function ($copy_i) {\n                return function ($copy_x) {\n                    var $tco_var_i = $copy_i;\n                    var $tco_done = false;\n                    var $tco_result;\n                    function $tco_loop(i, x) {\n                        var $168 = i === 0;\n                        if ($168) {\n                            $tco_done = true;\n                            return new Data_Maybe.Just(x);\n                        };\n                        var v = succ1(x);\n                        if (v instanceof Data_Maybe.Just) {\n                            $tco_var_i = i - 1 | 0;\n                            $copy_x = v.value0;\n                            return;\n                        };\n                        if (v instanceof Data_Maybe.Nothing) {\n                            $tco_done = true;\n                            return Data_Maybe.Nothing.value;\n                        };\n                        throw new Error(\"Failed pattern match at Data.Enum (line 296, column 12 - line 298, column 33): \" + [ v.constructor.name ]);\n                    };\n                    while (!$tco_done) {\n                        $tco_result = $tco_loop($tco_var_i, $copy_x);\n                    };\n                    return $tco_result;\n                };\n            };\n            var $171 = i$prime < 0;\n            if ($171) {\n                return Data_Maybe.Nothing.value;\n            };\n            return go(i$prime)(bottom2);\n        };\n    };\n};\nvar defaultSucc = function (toEnum$prime) {\n    return function (fromEnum$prime) {\n        return function (a) {\n            return toEnum$prime(fromEnum$prime(a) + 1 | 0);\n        };\n    };\n};\nvar defaultPred = function (toEnum$prime) {\n    return function (fromEnum$prime) {\n        return function (a) {\n            return toEnum$prime(fromEnum$prime(a) - 1 | 0);\n        };\n    };\n};\nvar defaultFromEnum = function (dictEnum) {\n    var pred1 = pred(dictEnum);\n    var go = function ($copy_i) {\n        return function ($copy_x) {\n            var $tco_var_i = $copy_i;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(i, x) {\n                var v = pred1(x);\n                if (v instanceof Data_Maybe.Just) {\n                    $tco_var_i = i + 1 | 0;\n                    $copy_x = v.value0;\n                    return;\n                };\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return i;\n                };\n                throw new Error(\"Failed pattern match at Data.Enum (line 309, column 5 - line 311, column 19): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_i, $copy_x);\n            };\n            return $tco_result;\n        };\n    };\n    return go(0);\n};\nvar defaultCardinality = function (dictBounded) {\n    var bottom2 = Data_Bounded.bottom(dictBounded);\n    return function (dictEnum) {\n        var succ1 = succ(dictEnum);\n        var go = function ($copy_i) {\n            return function ($copy_x) {\n                var $tco_var_i = $copy_i;\n                var $tco_done = false;\n                var $tco_result;\n                function $tco_loop(i, x) {\n                    var v = succ1(x);\n                    if (v instanceof Data_Maybe.Just) {\n                        $tco_var_i = i + 1 | 0;\n                        $copy_x = v.value0;\n                        return;\n                    };\n                    if (v instanceof Data_Maybe.Nothing) {\n                        $tco_done = true;\n                        return i;\n                    };\n                    throw new Error(\"Failed pattern match at Data.Enum (line 276, column 5 - line 278, column 19): \" + [ v.constructor.name ]);\n                };\n                while (!$tco_done) {\n                    $tco_result = $tco_loop($tco_var_i, $copy_x);\n                };\n                return $tco_result;\n            };\n        };\n        return go(1)(bottom2);\n    };\n};\nvar charToEnum = function (v) {\n    if (v >= $foreign.toCharCode(bottom1) && v <= $foreign.toCharCode(top1)) {\n        return new Data_Maybe.Just($foreign.fromCharCode(v));\n    };\n    return Data_Maybe.Nothing.value;\n};\nvar enumChar = {\n    succ: /* #__PURE__ */ defaultSucc(charToEnum)($foreign.toCharCode),\n    pred: /* #__PURE__ */ defaultPred(charToEnum)($foreign.toCharCode),\n    Ord0: function () {\n        return Data_Ord.ordChar;\n    }\n};\nvar cardinality = function (dict) {\n    return dict.cardinality;\n};\nvar boundedEnumUnit = {\n    cardinality: 1,\n    toEnum: function (v) {\n        if (v === 0) {\n            return new Data_Maybe.Just(Data_Unit.unit);\n        };\n        return Data_Maybe.Nothing.value;\n    },\n    fromEnum: /* #__PURE__ */ Data_Function[\"const\"](0),\n    Bounded0: function () {\n        return Data_Bounded.boundedUnit;\n    },\n    Enum1: function () {\n        return enumUnit;\n    }\n};\nvar boundedEnumOrdering = {\n    cardinality: 3,\n    toEnum: function (v) {\n        if (v === 0) {\n            return new Data_Maybe.Just(Data_Ordering.LT.value);\n        };\n        if (v === 1) {\n            return new Data_Maybe.Just(Data_Ordering.EQ.value);\n        };\n        if (v === 2) {\n            return new Data_Maybe.Just(Data_Ordering.GT.value);\n        };\n        return Data_Maybe.Nothing.value;\n    },\n    fromEnum: function (v) {\n        if (v instanceof Data_Ordering.LT) {\n            return 0;\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return 1;\n        };\n        if (v instanceof Data_Ordering.GT) {\n            return 2;\n        };\n        throw new Error(\"Failed pattern match at Data.Enum (line 137, column 1 - line 145, column 18): \" + [ v.constructor.name ]);\n    },\n    Bounded0: function () {\n        return Data_Bounded.boundedOrdering;\n    },\n    Enum1: function () {\n        return enumOrdering;\n    }\n};\nvar boundedEnumChar = /* #__PURE__ */ (function () {\n    return {\n        cardinality: $foreign.toCharCode(top1) - $foreign.toCharCode(bottom1) | 0,\n        toEnum: charToEnum,\n        fromEnum: $foreign.toCharCode,\n        Bounded0: function () {\n            return Data_Bounded.boundedChar;\n        },\n        Enum1: function () {\n            return enumChar;\n        }\n    };\n})();\nvar boundedEnumBoolean = {\n    cardinality: 2,\n    toEnum: function (v) {\n        if (v === 0) {\n            return new Data_Maybe.Just(false);\n        };\n        if (v === 1) {\n            return new Data_Maybe.Just(true);\n        };\n        return Data_Maybe.Nothing.value;\n    },\n    fromEnum: function (v) {\n        if (!v) {\n            return 0;\n        };\n        if (v) {\n            return 1;\n        };\n        throw new Error(\"Failed pattern match at Data.Enum (line 118, column 1 - line 124, column 20): \" + [ v.constructor.name ]);\n    },\n    Bounded0: function () {\n        return Data_Bounded.boundedBoolean;\n    },\n    Enum1: function () {\n        return enumBoolean;\n    }\n};\nexport {\n    succ,\n    pred,\n    cardinality,\n    toEnum,\n    fromEnum,\n    toEnumWithDefaults,\n    Cardinality,\n    enumFromTo,\n    enumFromThenTo,\n    upFrom,\n    upFromIncluding,\n    downFrom,\n    downFromIncluding,\n    defaultSucc,\n    defaultPred,\n    defaultCardinality,\n    defaultToEnum,\n    defaultFromEnum,\n    enumBoolean,\n    enumInt,\n    enumChar,\n    enumUnit,\n    enumOrdering,\n    enumMaybe,\n    enumEither,\n    enumTuple,\n    boundedEnumBoolean,\n    boundedEnumChar,\n    boundedEnumUnit,\n    boundedEnumOrdering,\n    newtypeCardinality,\n    eqCardinality,\n    ordCardinality,\n    showCardinality\n};\n", "export const fromNumberImpl = function (just) {\n  return function (nothing) {\n    return function (n) {\n      /* jshint bitwise: false */\n      return (n | 0) === n ? just(n) : nothing;\n    };\n  };\n};\n\nexport const toNumber = function (n) {\n  return n;\n};\n\nexport const fromStringAsImpl = function (just) {\n  return function (nothing) {\n    return function (radix) {\n      var digits;\n      if (radix < 11) {\n        digits = \"[0-\" + (radix - 1).toString() + \"]\";\n      } else if (radix === 11) {\n        digits = \"[0-9a]\";\n      } else {\n        digits = \"[0-9a-\" + String.fromCharCode(86 + radix) + \"]\";\n      }\n      var pattern = new RegExp(\"^[\\\\+\\\\-]?\" + digits + \"+$\", \"i\");\n\n      return function (s) {\n        /* jshint bitwise: false */\n        if (pattern.test(s)) {\n          var i = parseInt(s, radix);\n          return (i | 0) === i ? just(i) : nothing;\n        } else {\n          return nothing;\n        }\n      };\n    };\n  };\n};\n\nexport const toStringAs = function (radix) {\n  return function (i) {\n    return i.toString(radix);\n  };\n};\n\n\nexport const quot = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return x / y | 0;\n  };\n};\n\nexport const rem = function (x) {\n  return function (y) {\n    return x % y;\n  };\n};\n\nexport const pow = function (x) {\n  return function (y) {\n    /* jshint bitwise: false */\n    return Math.pow(x,y) | 0;\n  };\n};\n", "/* globals exports */\nexport const nan = NaN;\nconst isNaNImpl = isNaN;\nexport { isNaNImpl as isNaN };\nexport const infinity = Infinity;\nconst isFiniteImpl = isFinite;\nexport { isFiniteImpl as isFinite };\n\nexport function fromStringImpl(str, isFinite, just, nothing) {\n  var num = parseFloat(str);\n  if (isFinite(num)) {\n    return just(num);\n  } else {\n    return nothing;\n  }\n}\n\nexport const abs = Math.abs;\n\nexport const acos = Math.acos;\n\nexport const asin = Math.asin;\n\nexport const atan = Math.atan;\n\nexport const atan2 = function (y) {\n  return function (x) {\n    return Math.atan2(y, x);\n  };\n};\n\nexport const ceil = Math.ceil;\n\nexport const cos = Math.cos;\n\nexport const exp = Math.exp;\n\nexport const floor = Math.floor;\n\nexport const log = Math.log;\n\nexport const max = function (n1) {\n  return function (n2) {\n    return Math.max(n1, n2);\n  };\n};\n\nexport const min = function (n1) {\n  return function (n2) {\n    return Math.min(n1, n2);\n  };\n};\n\nexport const pow = function (n) {\n  return function (p) {\n    return Math.pow(n, p);\n  };\n};\n\nexport const remainder = function (n) {\n  return function (m) {\n    return n % m;\n  };\n};\n\nexport const round = Math.round;\n\nexport const sign = Math.sign ? Math.sign : function(x) {\n  return x === 0 || x !== x ? x : (x < 0 ? -1 : 1);\n};\n\nexport const sin = Math.sin;\n\nexport const sqrt = Math.sqrt;\n\nexport const tan = Math.tan;\n\nexport const trunc = Math.trunc ? Math.trunc : function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nvar tau = 6.283185307179586;\nvar sqrt2 = 1.4142135623730951;\nvar sqrt1_2 = 0.7071067811865476;\nvar pi = 3.141592653589793;\nvar log2e = 1.4426950408889634;\nvar log10e = 0.4342944819032518;\nvar ln2 = 0.6931471805599453;\nvar ln10 = 2.302585092994046;\nvar fromString = function (str) {\n    return $foreign.fromStringImpl(str, $foreign[\"isFinite\"], Data_Maybe.Just.create, Data_Maybe.Nothing.value);\n};\nvar e = 2.718281828459045;\nexport {\n    nan,\n    isNaN,\n    infinity,\n    isFinite,\n    abs,\n    acos,\n    asin,\n    atan,\n    atan2,\n    ceil,\n    cos,\n    exp,\n    floor,\n    log,\n    max,\n    min,\n    pow,\n    remainder,\n    round,\n    sign,\n    sin,\n    sqrt,\n    tan,\n    trunc\n} from \"./foreign.js\";\nexport {\n    fromString,\n    e,\n    ln2,\n    ln10,\n    log10e,\n    log2e,\n    pi,\n    sqrt1_2,\n    sqrt2,\n    tau\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Number from \"../Data.Number/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nvar top = /* #__PURE__ */ Data_Bounded.top(Data_Bounded.boundedInt);\nvar bottom = /* #__PURE__ */ Data_Bounded.bottom(Data_Bounded.boundedInt);\nvar Radix = function (x) {\n    return x;\n};\nvar Even = /* #__PURE__ */ (function () {\n    function Even() {\n\n    };\n    Even.value = new Even();\n    return Even;\n})();\nvar Odd = /* #__PURE__ */ (function () {\n    function Odd() {\n\n    };\n    Odd.value = new Odd();\n    return Odd;\n})();\nvar showParity = {\n    show: function (v) {\n        if (v instanceof Even) {\n            return \"Even\";\n        };\n        if (v instanceof Odd) {\n            return \"Odd\";\n        };\n        throw new Error(\"Failed pattern match at Data.Int (line 117, column 1 - line 119, column 19): \" + [ v.constructor.name ]);\n    }\n};\nvar radix = function (n) {\n    if (n >= 2 && n <= 36) {\n        return new Data_Maybe.Just(n);\n    };\n    if (Data_Boolean.otherwise) {\n        return Data_Maybe.Nothing.value;\n    };\n    throw new Error(\"Failed pattern match at Data.Int (line 198, column 1 - line 198, column 28): \" + [ n.constructor.name ]);\n};\nvar odd = function (x) {\n    return (x & 1) !== 0;\n};\nvar octal = 8;\nvar hexadecimal = 16;\nvar fromStringAs = /* #__PURE__ */ (function () {\n    return $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar fromString = /* #__PURE__ */ fromStringAs(10);\nvar fromNumber = /* #__PURE__ */ (function () {\n    return $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);\n})();\nvar unsafeClamp = function (x) {\n    if (!Data_Number[\"isFinite\"](x)) {\n        return 0;\n    };\n    if (x >= $foreign.toNumber(top)) {\n        return top;\n    };\n    if (x <= $foreign.toNumber(bottom)) {\n        return bottom;\n    };\n    if (Data_Boolean.otherwise) {\n        return Data_Maybe.fromMaybe(0)(fromNumber(x));\n    };\n    throw new Error(\"Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): \" + [ x.constructor.name ]);\n};\nvar round = function ($37) {\n    return unsafeClamp(Data_Number.round($37));\n};\nvar trunc = function ($38) {\n    return unsafeClamp(Data_Number.trunc($38));\n};\nvar floor = function ($39) {\n    return unsafeClamp(Data_Number.floor($39));\n};\nvar even = function (x) {\n    return (x & 1) === 0;\n};\nvar parity = function (n) {\n    var $28 = even(n);\n    if ($28) {\n        return Even.value;\n    };\n    return Odd.value;\n};\nvar eqParity = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof Even && y instanceof Even) {\n                return true;\n            };\n            if (x instanceof Odd && y instanceof Odd) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(eqParity);\nvar ordParity = {\n    compare: function (x) {\n        return function (y) {\n            if (x instanceof Even && y instanceof Even) {\n                return Data_Ordering.EQ.value;\n            };\n            if (x instanceof Even) {\n                return Data_Ordering.LT.value;\n            };\n            if (y instanceof Even) {\n                return Data_Ordering.GT.value;\n            };\n            if (x instanceof Odd && y instanceof Odd) {\n                return Data_Ordering.EQ.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Int (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n        };\n    },\n    Eq0: function () {\n        return eqParity;\n    }\n};\nvar semiringParity = /* #__PURE__ */ (function () {\n    return {\n        zero: Even.value,\n        add: function (x) {\n            return function (y) {\n                var $33 = eq1(x)(y);\n                if ($33) {\n                    return Even.value;\n                };\n                return Odd.value;\n            };\n        },\n        one: Odd.value,\n        mul: function (v) {\n            return function (v1) {\n                if (v instanceof Odd && v1 instanceof Odd) {\n                    return Odd.value;\n                };\n                return Even.value;\n            };\n        }\n    };\n})();\nvar ringParity = {\n    sub: /* #__PURE__ */ Data_Semiring.add(semiringParity),\n    Semiring0: function () {\n        return semiringParity;\n    }\n};\nvar divisionRingParity = {\n    recip: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Ring0: function () {\n        return ringParity;\n    }\n};\nvar decimal = 10;\nvar commutativeRingParity = {\n    Ring0: function () {\n        return ringParity;\n    }\n};\nvar euclideanRingParity = {\n    degree: function (v) {\n        if (v instanceof Even) {\n            return 0;\n        };\n        if (v instanceof Odd) {\n            return 1;\n        };\n        throw new Error(\"Failed pattern match at Data.Int (line 137, column 1 - line 141, column 17): \" + [ v.constructor.name ]);\n    },\n    div: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    mod: function (v) {\n        return function (v1) {\n            return Even.value;\n        };\n    },\n    CommutativeRing0: function () {\n        return commutativeRingParity;\n    }\n};\nvar ceil = function ($40) {\n    return unsafeClamp(Data_Number.ceil($40));\n};\nvar boundedParity = /* #__PURE__ */ (function () {\n    return {\n        bottom: Even.value,\n        top: Odd.value,\n        Ord0: function () {\n            return ordParity;\n        }\n    };\n})();\nvar binary = 2;\nvar base36 = 36;\nexport {\n    toNumber,\n    toStringAs,\n    quot,\n    rem,\n    pow\n} from \"./foreign.js\";\nexport {\n    fromNumber,\n    ceil,\n    floor,\n    trunc,\n    round,\n    fromString,\n    radix,\n    binary,\n    octal,\n    decimal,\n    hexadecimal,\n    base36,\n    fromStringAs,\n    Even,\n    Odd,\n    parity,\n    even,\n    odd,\n    eqParity,\n    ordParity,\n    showParity,\n    boundedParity,\n    semiringParity,\n    ringParity,\n    commutativeRingParity,\n    euclideanRingParity,\n    divisionRingParity\n};\n", "export const _localeCompare = function (lt) {\n  return function (eq) {\n    return function (gt) {\n      return function (s1) {\n        return function (s2) {\n          var result = s1.localeCompare(s2);\n          return result < 0 ? lt : result > 0 ? gt : eq;\n        };\n      };\n    };\n  };\n};\n\nexport const replace = function (s1) {\n  return function (s2) {\n    return function (s3) {\n      return s3.replace(s1, s2);\n    };\n  };\n};\n\nexport const replaceAll = function (s1) {\n  return function (s2) {\n    return function (s3) {\n      return s3.replace(new RegExp(s1.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\"), \"g\"), s2); // eslint-disable-line no-useless-escape\n    };\n  };\n};\n\nexport const split = function (sep) {\n  return function (s) {\n    return s.split(sep);\n  };\n};\n\nexport const toLower = function (s) {\n  return s.toLowerCase();\n};\n\nexport const toUpper = function (s) {\n  return s.toUpperCase();\n};\n\nexport const trim = function (s) {\n  return s.trim();\n};\n\nexport const joinWith = function (s) {\n  return function (xs) {\n    return xs.join(s);\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_String_CodePoints from \"../Data.String.CodePoints/index.js\";\nimport * as Data_String_CodeUnits from \"../Data.String.CodeUnits/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Data_String_Regex from \"../Data.String.Regex/index.js\";\nimport * as Data_String_Regex_Flags from \"../Data.String.Regex.Flags/index.js\";\nimport * as Data_String_Regex_Unsafe from \"../Data.String.Regex.Unsafe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar NFC = /* #__PURE__ */ (function () {\n    function NFC() {\n\n    };\n    NFC.value = new NFC();\n    return NFC;\n})();\nvar NFD = /* #__PURE__ */ (function () {\n    function NFD() {\n\n    };\n    NFD.value = new NFD();\n    return NFD;\n})();\nvar NFKC = /* #__PURE__ */ (function () {\n    function NFKC() {\n\n    };\n    NFKC.value = new NFKC();\n    return NFKC;\n})();\nvar NFKD = /* #__PURE__ */ (function () {\n    function NFKD() {\n\n    };\n    NFKD.value = new NFKD();\n    return NFKD;\n})();\nvar words = function (s) {\n    return $foreign.wordsImpl(s);\n};\nvar unsafeRepeat = function (n) {\n    return function (s) {\n        return $foreign.unsafeRepeatImpl(n, s);\n    };\n};\nvar unsafeCodePointAt$prime = function (n) {\n    return function (s) {\n        return $foreign.unsafeCodePointAtPrimeImpl(n, s);\n    };\n};\nvar unsafeCodePointAt = function (n) {\n    return function (s) {\n        return $foreign.unsafeCodePointAtImpl(n, s);\n    };\n};\nvar trimStart = function (s) {\n    return s.trimStart(Data_Unit.unit);\n};\nvar trimEnd = function (s) {\n    return s.trimEnd(Data_Unit.unit);\n};\nvar toCharArray = function (s) {\n    return $foreign.toCharArrayImpl(s);\n};\nvar stripDiacritics = function (s) {\n    return $foreign.stripDiacriticsImpl(s);\n};\nvar stripChars = function (chars) {\n    return function (s) {\n        return $foreign.stripCharsImpl(chars, s);\n    };\n};\nvar startsWith$prime = function (searchString) {\n    return function (position) {\n        return function (s) {\n            return $foreign.startsWithPrimeImpl(searchString, position, s);\n        };\n    };\n};\nvar startsWith = function (searchString) {\n    return function (s) {\n        return $foreign.startsWithImpl(searchString, s);\n    };\n};\nvar showNormalizationForm = {\n    show: function (v) {\n        if (v instanceof NFC) {\n            return \"NFC\";\n        };\n        if (v instanceof NFD) {\n            return \"NFD\";\n        };\n        if (v instanceof NFKC) {\n            return \"NFKC\";\n        };\n        if (v instanceof NFKD) {\n            return \"NFKD\";\n        };\n        throw new Error(\"Failed pattern match at Data.String.Utils (line 264, column 1 - line 268, column 21): \" + [ v.constructor.name ]);\n    }\n};\nvar show = /* #__PURE__ */ Data_Show.show(showNormalizationForm);\nvar repeat = function (n) {\n    return function (s) {\n        return $foreign.repeatImpl(Data_Maybe.Just.create, Data_Maybe.Nothing.value, n, s);\n    };\n};\nvar padStart$prime = function (n) {\n    return function (s) {\n        return $foreign.padStartPrimeImpl(n, s);\n    };\n};\nvar padStart = function (n) {\n    return function (s) {\n        var numberOfCodeUnits = Data_String_CodeUnits.length(s);\n        var numberOfCodePoints = Data_String_CodePoints.length(s);\n        return padStart$prime((n + numberOfCodeUnits | 0) - numberOfCodePoints | 0)(s);\n    };\n};\nvar padEnd$prime = function (n) {\n    return function (s) {\n        return $foreign.padEndPrimeImpl(n, s);\n    };\n};\nvar padEnd = function (n) {\n    return function (s) {\n        var numberOfCodeUnits = Data_String_CodeUnits.length(s);\n        var numberOfCodePoints = Data_String_CodePoints.length(s);\n        return padEnd$prime((n + numberOfCodeUnits | 0) - numberOfCodePoints | 0)(s);\n    };\n};\nvar normalize$prime = function (nf) {\n    return function (s) {\n        return $foreign.normalizePrimeImpl(show(nf), s);\n    };\n};\nvar normalize = function (s) {\n    return $foreign.normalizeImpl(s);\n};\nvar lines = function (s) {\n    return $foreign.linesImpl(s);\n};\nvar stripMarginWith = function (delimiter) {\n    var go = function (line) {\n        var trimmed = trimStart(line);\n        var $7 = startsWith(delimiter)(trimmed);\n        if ($7) {\n            return Data_String_CodePoints.drop(Data_String_CodePoints.length(delimiter))(trimmed);\n        };\n        return line;\n    };\n    var $8 = Data_String_Common.joinWith(\"\\x0a\");\n    var $9 = map(go);\n    return function ($10) {\n        return $8($9(lines(Data_String_Common.trim($10))));\n    };\n};\nvar stripMargin = /* #__PURE__ */ stripMarginWith(\"|\");\nvar length = function () {\n    return function (s) {\n        return $foreign.lengthImpl(s);\n    };\n};\nvar includes$prime = function (needle) {\n    return function (position) {\n        return function (haystack) {\n            return $foreign.includesPrimeImpl(needle, position, haystack);\n        };\n    };\n};\nvar includes = function (searchString) {\n    return function (s) {\n        return $foreign.includesImpl(searchString, s);\n    };\n};\nvar fromCharArray = function (arr) {\n    return $foreign.fromCharArrayImpl(arr);\n};\nvar mapChars = function (f) {\n    var $11 = map(f);\n    return function ($12) {\n        return fromCharArray($11(toCharArray($12)));\n    };\n};\nvar filter = function (p) {\n    var $13 = Data_Array.filter(p);\n    return function ($14) {\n        return fromCharArray($13(toCharArray($14)));\n    };\n};\nvar escapeRegex = function (s) {\n    return $foreign.escapeRegexImpl(s);\n};\nvar replaceAll = function () {\n    var mkRegex = function (str) {\n        return Data_String_Regex_Unsafe.unsafeRegex(escapeRegex(str))(Data_String_Regex_Flags.global);\n    };\n    return function ($15) {\n        return Data_String_Regex.replace(mkRegex($15));\n    };\n};\nvar endsWith$prime = function (searchString) {\n    return function (position) {\n        return function (s) {\n            return $foreign.endsWithPrimeImpl(searchString, position, s);\n        };\n    };\n};\nvar endsWith = function (searchString) {\n    return function (s) {\n        return $foreign.endsWithImpl(searchString, s);\n    };\n};\nvar codePointAt$prime = function (n) {\n    return function (s) {\n        return $foreign.codePointAtPrimeImpl(Data_Maybe.Just.create, Data_Maybe.Nothing.value, n, s);\n    };\n};\nvar codePointAt = function () {\n    return function (n) {\n        return function (s) {\n            return $foreign.codePointAtImpl(Data_Maybe.Just.create, Data_Maybe.Nothing.value, n, s);\n        };\n    };\n};\nvar charAt = function (n) {\n    return function (str) {\n        return Data_Array.index(toCharArray(str))(n);\n    };\n};\nexport {\n    NFC,\n    NFD,\n    NFKC,\n    NFKD,\n    charAt,\n    codePointAt,\n    codePointAt$prime,\n    endsWith,\n    endsWith$prime,\n    escapeRegex,\n    filter,\n    fromCharArray,\n    includes,\n    includes$prime,\n    length,\n    lines,\n    mapChars,\n    normalize,\n    normalize$prime,\n    padEnd,\n    padEnd$prime,\n    padStart,\n    padStart$prime,\n    repeat,\n    replaceAll,\n    startsWith,\n    startsWith$prime,\n    stripChars,\n    stripDiacritics,\n    stripMargin,\n    stripMarginWith,\n    toCharArray,\n    trimEnd,\n    trimStart,\n    unsafeCodePointAt,\n    unsafeCodePointAt$prime,\n    unsafeRepeat,\n    words,\n    showNormalizationForm\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Int from \"../Data.Int/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Number from \"../Data.Number/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Random from \"../Effect.Random/index.js\";\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar mod = /* #__PURE__ */ Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordInt);\nvar Seed = function (x) {\n    return x;\n};\nvar unSeed = function (v) {\n    return v;\n};\nvar showSeed = {\n    show: function (v) {\n        return \"Seed \" + show(v);\n    }\n};\nvar seedMin = 1;\nvar lcgM = 2147483647;\nvar seedMax = /* #__PURE__ */ (function () {\n    return lcgM - 1 | 0;\n})();\nvar mkSeed = function (x) {\n    var ensureBetween = function (min) {\n        return function (max) {\n            return function (n) {\n                var rangeSize = max - min | 0;\n                var n$prime = mod(n)(rangeSize);\n                var $25 = n$prime < min;\n                if ($25) {\n                    return n$prime + max | 0;\n                };\n                return n$prime;\n            };\n        };\n    };\n    return ensureBetween(seedMin)(seedMax)(x);\n};\nvar randomSeed = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect)(mkSeed)(/* #__PURE__ */ Effect_Random.randomInt(seedMin)(seedMax));\nvar lcgC = 0;\nvar lcgA = 48271;\nvar lcgPerturb = function (d) {\n    return function (v) {\n        return fromJust(Data_Int.fromNumber(Data_Number.remainder(Data_Int.toNumber(lcgA) * Data_Int.toNumber(v) + Data_Int.toNumber(d))(Data_Int.toNumber(lcgM))));\n    };\n};\nvar lcgNext = /* #__PURE__ */ lcgPerturb(lcgC);\nvar eqSeed = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar ordSeed = {\n    compare: function (x) {\n        return function (y) {\n            return compare(x)(y);\n        };\n    },\n    Eq0: function () {\n        return eqSeed;\n    }\n};\nexport {\n    mkSeed,\n    unSeed,\n    randomSeed,\n    lcgA,\n    lcgC,\n    lcgM,\n    lcgNext,\n    lcgPerturb,\n    eqSeed,\n    ordSeed,\n    showSeed\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar state = function (dict) {\n    return dict.state;\n};\nvar put = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (s) {\n        return state1(function (v) {\n            return new Data_Tuple.Tuple(Data_Unit.unit, s);\n        });\n    };\n};\nvar modify_ = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            return new Data_Tuple.Tuple(Data_Unit.unit, f(s));\n        });\n    };\n};\nvar modify = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            var s$prime = f(s);\n            return new Data_Tuple.Tuple(s$prime, s$prime);\n        });\n    };\n};\nvar gets = function (dictMonadState) {\n    var state1 = state(dictMonadState);\n    return function (f) {\n        return state1(function (s) {\n            return new Data_Tuple.Tuple(f(s), s);\n        });\n    };\n};\nvar get = function (dictMonadState) {\n    return state(dictMonadState)(function (s) {\n        return new Data_Tuple.Tuple(s, s);\n    });\n};\nexport {\n    state,\n    get,\n    gets,\n    put,\n    modify,\n    modify_\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Cont_Class from \"../Control.Monad.Cont.Class/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar StateT = function (x) {\n    return x;\n};\nvar withStateT = function (f) {\n    return function (v) {\n        return function ($193) {\n            return v(f($193));\n        };\n    };\n};\nvar runStateT = function (v) {\n    return v;\n};\nvar newtypeStateT = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadTransStateT = {\n    lift: function (dictMonad) {\n        var bind = Control_Bind.bind(dictMonad.Bind1());\n        var pure = Control_Applicative.pure(dictMonad.Applicative0());\n        return function (m) {\n            return function (s) {\n                return bind(m)(function (x) {\n                    return pure(new Data_Tuple.Tuple(x, s));\n                });\n            };\n        };\n    }\n};\nvar lift = /* #__PURE__ */ Control_Monad_Trans_Class.lift(monadTransStateT);\nvar mapStateT = function (f) {\n    return function (v) {\n        return function ($194) {\n            return f(v($194));\n        };\n    };\n};\nvar lazyStateT = {\n    defer: function (f) {\n        return function (s) {\n            var v = f(Data_Unit.unit);\n            return v(s);\n        };\n    }\n};\nvar functorStateT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return {\n        map: function (f) {\n            return function (v) {\n                return function (s) {\n                    return map(function (v1) {\n                        return new Data_Tuple.Tuple(f(v1.value0), v1.value1);\n                    })(v(s));\n                };\n            };\n        }\n    };\n};\nvar execStateT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return function (v) {\n        return function (s) {\n            return map(Data_Tuple.snd)(v(s));\n        };\n    };\n};\nvar evalStateT = function (dictFunctor) {\n    var map = Data_Functor.map(dictFunctor);\n    return function (v) {\n        return function (s) {\n            return map(Data_Tuple.fst)(v(s));\n        };\n    };\n};\nvar monadStateT = function (dictMonad) {\n    return {\n        Applicative0: function () {\n            return applicativeStateT(dictMonad);\n        },\n        Bind1: function () {\n            return bindStateT(dictMonad);\n        }\n    };\n};\nvar bindStateT = function (dictMonad) {\n    var bind = Control_Bind.bind(dictMonad.Bind1());\n    return {\n        bind: function (v) {\n            return function (f) {\n                return function (s) {\n                    return bind(v(s))(function (v1) {\n                        var v3 = f(v1.value0);\n                        return v3(v1.value1);\n                    });\n                };\n            };\n        },\n        Apply0: function () {\n            return applyStateT(dictMonad);\n        }\n    };\n};\nvar applyStateT = function (dictMonad) {\n    var functorStateT1 = functorStateT(((dictMonad.Bind1()).Apply0()).Functor0());\n    return {\n        apply: Control_Monad.ap(monadStateT(dictMonad)),\n        Functor0: function () {\n            return functorStateT1;\n        }\n    };\n};\nvar applicativeStateT = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    return {\n        pure: function (a) {\n            return function (s) {\n                return pure(new Data_Tuple.Tuple(a, s));\n            };\n        },\n        Apply0: function () {\n            return applyStateT(dictMonad);\n        }\n    };\n};\nvar semigroupStateT = function (dictMonad) {\n    var lift2 = Control_Apply.lift2(applyStateT(dictMonad));\n    return function (dictSemigroup) {\n        return {\n            append: lift2(Data_Semigroup.append(dictSemigroup))\n        };\n    };\n};\nvar monadAskStateT = function (dictMonadAsk) {\n    var Monad0 = dictMonadAsk.Monad0();\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        ask: lift(Monad0)(Control_Monad_Reader_Class.ask(dictMonadAsk)),\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadReaderStateT = function (dictMonadReader) {\n    var monadAskStateT1 = monadAskStateT(dictMonadReader.MonadAsk0());\n    return {\n        local: (function () {\n            var $195 = Control_Monad_Reader_Class.local(dictMonadReader);\n            return function ($196) {\n                return mapStateT($195($196));\n            };\n        })(),\n        MonadAsk0: function () {\n            return monadAskStateT1;\n        }\n    };\n};\nvar monadContStateT = function (dictMonadCont) {\n    var callCC = Control_Monad_Cont_Class.callCC(dictMonadCont);\n    var monadStateT1 = monadStateT(dictMonadCont.Monad0());\n    return {\n        callCC: function (f) {\n            return function (s) {\n                return callCC(function (c) {\n                    var v = f(function (a) {\n                        return function (s$prime) {\n                            return c(new Data_Tuple.Tuple(a, s$prime));\n                        };\n                    });\n                    return v(s);\n                });\n            };\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadEffectState = function (dictMonadEffect) {\n    var Monad0 = dictMonadEffect.Monad0();\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        liftEffect: (function () {\n            var $197 = lift(Monad0);\n            var $198 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($199) {\n                return $197($198($199));\n            };\n        })(),\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadRecStateT = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var bind = Control_Bind.bind(Monad0.Bind1());\n    var pure = Control_Applicative.pure(Monad0.Applicative0());\n    var tailRecM = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        tailRecM: function (f) {\n            return function (a) {\n                var f$prime = function (v) {\n                    var v1 = f(v.value0);\n                    return bind(v1(v.value1))(function (v2) {\n                        return pure((function () {\n                            if (v2.value0 instanceof Control_Monad_Rec_Class.Loop) {\n                                return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));\n                            };\n                            if (v2.value0 instanceof Control_Monad_Rec_Class.Done) {\n                                return new Control_Monad_Rec_Class.Done(new Data_Tuple.Tuple(v2.value0.value0, v2.value1));\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.State.Trans (line 87, column 16 - line 89, column 40): \" + [ v2.value0.constructor.name ]);\n                        })());\n                    });\n                };\n                return function (s) {\n                    return tailRecM(f$prime)(new Data_Tuple.Tuple(a, s));\n                };\n            };\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadStateStateT = function (dictMonad) {\n    var pure = Control_Applicative.pure(dictMonad.Applicative0());\n    var monadStateT1 = monadStateT(dictMonad);\n    return {\n        state: function (f) {\n            return function ($200) {\n                return pure(f($200));\n            };\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadTellStateT = function (dictMonadTell) {\n    var Monad1 = dictMonadTell.Monad1();\n    var Semigroup0 = dictMonadTell.Semigroup0();\n    var monadStateT1 = monadStateT(Monad1);\n    return {\n        tell: (function () {\n            var $201 = lift(Monad1);\n            var $202 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($203) {\n                return $201($202($203));\n            };\n        })(),\n        Semigroup0: function () {\n            return Semigroup0;\n        },\n        Monad1: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadWriterStateT = function (dictMonadWriter) {\n    var MonadTell1 = dictMonadWriter.MonadTell1();\n    var Monad1 = MonadTell1.Monad1();\n    var bind = Control_Bind.bind(Monad1.Bind1());\n    var listen = Control_Monad_Writer_Class.listen(dictMonadWriter);\n    var pure = Control_Applicative.pure(Monad1.Applicative0());\n    var pass = Control_Monad_Writer_Class.pass(dictMonadWriter);\n    var Monoid0 = dictMonadWriter.Monoid0();\n    var monadTellStateT1 = monadTellStateT(MonadTell1);\n    return {\n        listen: function (m) {\n            return function (s) {\n                return bind(listen(m(s)))(function (v) {\n                    return pure(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));\n                });\n            };\n        },\n        pass: function (m) {\n            return function (s) {\n                return pass(bind(m(s))(function (v) {\n                    return pure(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value0, v.value1), v.value0.value1));\n                }));\n            };\n        },\n        Monoid0: function () {\n            return Monoid0;\n        },\n        MonadTell1: function () {\n            return monadTellStateT1;\n        }\n    };\n};\nvar monadThrowStateT = function (dictMonadThrow) {\n    var Monad0 = dictMonadThrow.Monad0();\n    var lift1 = lift(Monad0);\n    var throwError = Control_Monad_Error_Class.throwError(dictMonadThrow);\n    var monadStateT1 = monadStateT(Monad0);\n    return {\n        throwError: function (e) {\n            return lift1(throwError(e));\n        },\n        Monad0: function () {\n            return monadStateT1;\n        }\n    };\n};\nvar monadErrorStateT = function (dictMonadError) {\n    var catchError = Control_Monad_Error_Class.catchError(dictMonadError);\n    var monadThrowStateT1 = monadThrowStateT(dictMonadError.MonadThrow0());\n    return {\n        catchError: function (v) {\n            return function (h) {\n                return function (s) {\n                    return catchError(v(s))(function (e) {\n                        var v1 = h(e);\n                        return v1(s);\n                    });\n                };\n            };\n        },\n        MonadThrow0: function () {\n            return monadThrowStateT1;\n        }\n    };\n};\nvar monoidStateT = function (dictMonad) {\n    var pure = Control_Applicative.pure(applicativeStateT(dictMonad));\n    var semigroupStateT1 = semigroupStateT(dictMonad);\n    return function (dictMonoid) {\n        var semigroupStateT2 = semigroupStateT1(dictMonoid.Semigroup0());\n        return {\n            mempty: pure(Data_Monoid.mempty(dictMonoid)),\n            Semigroup0: function () {\n                return semigroupStateT2;\n            }\n        };\n    };\n};\nvar altStateT = function (dictMonad) {\n    return function (dictAlt) {\n        var alt = Control_Alt.alt(dictAlt);\n        var functorStateT1 = functorStateT(dictAlt.Functor0());\n        return {\n            alt: function (v) {\n                return function (v1) {\n                    return function (s) {\n                        return alt(v(s))(v1(s));\n                    };\n                };\n            },\n            Functor0: function () {\n                return functorStateT1;\n            }\n        };\n    };\n};\nvar plusStateT = function (dictMonad) {\n    var altStateT1 = altStateT(dictMonad);\n    return function (dictPlus) {\n        var empty = Control_Plus.empty(dictPlus);\n        var altStateT2 = altStateT1(dictPlus.Alt0());\n        return {\n            empty: function (v) {\n                return empty;\n            },\n            Alt0: function () {\n                return altStateT2;\n            }\n        };\n    };\n};\nvar alternativeStateT = function (dictMonad) {\n    var applicativeStateT1 = applicativeStateT(dictMonad);\n    var plusStateT1 = plusStateT(dictMonad);\n    return function (dictAlternative) {\n        var plusStateT2 = plusStateT1(dictAlternative.Plus1());\n        return {\n            Applicative0: function () {\n                return applicativeStateT1;\n            },\n            Plus1: function () {\n                return plusStateT2;\n            }\n        };\n    };\n};\nvar monadPlusStateT = function (dictMonadPlus) {\n    var Monad0 = dictMonadPlus.Monad0();\n    var monadStateT1 = monadStateT(Monad0);\n    var alternativeStateT1 = alternativeStateT(Monad0)(dictMonadPlus.Alternative1());\n    return {\n        Monad0: function () {\n            return monadStateT1;\n        },\n        Alternative1: function () {\n            return alternativeStateT1;\n        }\n    };\n};\nexport {\n    StateT,\n    runStateT,\n    evalStateT,\n    execStateT,\n    mapStateT,\n    withStateT,\n    newtypeStateT,\n    functorStateT,\n    applyStateT,\n    applicativeStateT,\n    altStateT,\n    plusStateT,\n    alternativeStateT,\n    bindStateT,\n    monadStateT,\n    monadRecStateT,\n    monadPlusStateT,\n    monadTransStateT,\n    lazyStateT,\n    monadEffectState,\n    monadContStateT,\n    monadThrowStateT,\n    monadErrorStateT,\n    monadAskStateT,\n    monadReaderStateT,\n    monadStateStateT,\n    monadTellStateT,\n    monadWriterStateT,\n    semigroupStateT,\n    monoidStateT\n};\nexport {\n    get,\n    gets,\n    modify,\n    modify_,\n    put,\n    state\n} from \"../Control.Monad.State.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_State_Trans from \"../Control.Monad.State.Trans/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar withState = Control_Monad_State_Trans.withStateT;\nvar runState = function (v) {\n    return function ($18) {\n        return unwrap(v($18));\n    };\n};\nvar mapState = function (f) {\n    return Control_Monad_State_Trans.mapStateT(function ($19) {\n        return Data_Identity.Identity(f(unwrap($19)));\n    });\n};\nvar execState = function (v) {\n    return function (s) {\n        var v1 = v(s);\n        return v1.value1;\n    };\n};\nvar evalState = function (v) {\n    return function (s) {\n        var v1 = v(s);\n        return v1.value0;\n    };\n};\nexport {\n    runState,\n    evalState,\n    execState,\n    mapState,\n    withState\n};\nexport {\n    get,\n    gets,\n    modify,\n    modify_,\n    put,\n    state\n} from \"../Control.Monad.State.Class/index.js\";\nexport {\n    StateT,\n    evalStateT,\n    execStateT,\n    lift,\n    mapStateT,\n    runStateT,\n    withStateT\n} from \"../Control.Monad.State.Trans/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State from \"../Control.Monad.State/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_State_Trans from \"../Control.Monad.State.Trans/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Array_NonEmpty from \"../Data.Array.NonEmpty/index.js\";\nimport * as Data_Array_NonEmpty_Internal from \"../Data.Array.NonEmpty.Internal/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Enum from \"../Data.Enum/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Int from \"../Data.Int/index.js\";\nimport * as Data_List from \"../Data.List/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid_Additive from \"../Data.Monoid.Additive/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Number from \"../Data.Number/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Semigroup_Foldable from \"../Data.Semigroup.Foldable/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Random_LCG from \"../Random.LCG/index.js\";\nvar monadStateStateT = /* #__PURE__ */ Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity);\nvar state = /* #__PURE__ */ Control_Monad_State_Class.state(monadStateStateT);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Tuple.functorTuple);\nvar bindStateT = /* #__PURE__ */ Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity);\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(bindStateT);\nvar functorStateT = /* #__PURE__ */ Control_Monad_State_Trans.functorStateT(Data_Identity.functorIdentity);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](functorStateT);\nvar modify = /* #__PURE__ */ Control_Monad_State_Class.modify(monadStateStateT);\nvar toUnfoldable = /* #__PURE__ */ Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray);\nvar mul = /* #__PURE__ */ Data_Semiring.mul(Data_Semiring.semiringNumber);\nvar min = /* #__PURE__ */ Data_Ord.min(Data_Ord.ordNumber);\nvar max = /* #__PURE__ */ Data_Ord.max(Data_Ord.ordNumber);\nvar add = /* #__PURE__ */ Data_Semiring.add(Data_Semiring.semiringNumber);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar foldMap1 = /* #__PURE__ */ Data_Semigroup_Foldable.foldMap1(Data_Array_NonEmpty_Internal.foldable1NonEmptyArray)(/* #__PURE__ */ Data_Monoid_Additive.semigroupAdditive(Data_Semiring.semiringNumber));\nvar unsafeIndex = /* #__PURE__ */ Data_Array_NonEmpty.unsafeIndex();\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar top = /* #__PURE__ */ Data_Bounded.top(Data_Bounded.boundedInt);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar comparing = /* #__PURE__ */ Data_Ord.comparing(Data_Ord.ordInt);\nvar Gen = function (x) {\n    return x;\n};\nvar unGen = function (v) {\n    return v;\n};\nvar runGen = function ($103) {\n    return Control_Monad_State.runState(unGen($103));\n};\nvar stateful = function (f) {\n    return state(function (s) {\n        return runGen(f(s))(s);\n    });\n};\nvar sized = function (f) {\n    return stateful(function (s) {\n        return f(s.size);\n    });\n};\nvar variant = function (n) {\n    return function (g) {\n        return state(function (s) {\n            return runGen(g)({\n                newSeed: n,\n                size: s.size\n            });\n        });\n    };\n};\nvar resize = function (sz) {\n    return function (g) {\n        return state(function (v) {\n            return map(function (v1) {\n                return {\n                    size: v.size,\n                    newSeed: v1.newSeed\n                };\n            })(runGen(g)({\n                newSeed: v.newSeed,\n                size: sz\n            }));\n        });\n    };\n};\nvar replicateMRec = function (dictMonadRec) {\n    var Monad0 = dictMonadRec.Monad0();\n    var pure2 = Control_Applicative.pure(Monad0.Applicative0());\n    var mapFlipped = Data_Functor.mapFlipped(((Monad0.Bind1()).Apply0()).Functor0());\n    var tailRecM1 = Control_Monad_Rec_Class.tailRecM(dictMonadRec);\n    return function (v) {\n        return function (v1) {\n            if (v <= 0) {\n                return pure2(Data_List_Types.Nil.value);\n            };\n            var go = function (v2) {\n                if (v2.value1 === 0) {\n                    return pure2(new Control_Monad_Rec_Class.Done(v2.value0));\n                };\n                return mapFlipped(v1)(function (x) {\n                    return new Control_Monad_Rec_Class.Loop(new Data_Tuple.Tuple(new Data_List_Types.Cons(x, v2.value0), v2.value1 - 1 | 0));\n                });\n            };\n            return tailRecM1(go)(new Data_Tuple.Tuple(Data_List_Types.Nil.value, v));\n        };\n    };\n};\nvar repeatable = function (f) {\n    return state(function (s) {\n        return new Data_Tuple.Tuple(function (a) {\n            return Data_Tuple.fst(runGen(f(a))(s));\n        }, {\n            newSeed: Random_LCG.lcgNext(s.newSeed),\n            size: s.size\n        });\n    });\n};\nvar perturbGen = function (n) {\n    return function (gen) {\n        return discard($$void(modify(function (s) {\n            var $91 = {};\n            for (var $92 in s) {\n                if ({}.hasOwnProperty.call(s, $92)) {\n                    $91[$92] = s[$92];\n                };\n            };\n            $91.newSeed = Random_LCG.lcgPerturb($foreign.float32ToInt32(n))(s.newSeed);\n            return $91;\n        })))(function () {\n            return unGen(gen);\n        });\n    };\n};\nvar monadRecGen = /* #__PURE__ */ Control_Monad_State_Trans.monadRecStateT(Control_Monad_Rec_Class.monadRecIdentity);\nvar tailRecM = /* #__PURE__ */ Control_Monad_Rec_Class.tailRecM(monadRecGen);\nvar monadGen = /* #__PURE__ */ Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity);\nvar listOf = /* #__PURE__ */ replicateMRec(monadRecGen);\nvar lcgStep = /* #__PURE__ */ (function () {\n    var f = function (s) {\n        return new Data_Tuple.Tuple(Random_LCG.unSeed(s.newSeed), (function () {\n            var $94 = {};\n            for (var $95 in s) {\n                if ({}.hasOwnProperty.call(s, $95)) {\n                    $94[$95] = s[$95];\n                };\n            };\n            $94.newSeed = Random_LCG.lcgNext(s.newSeed);\n            return $94;\n        })());\n    };\n    return state(f);\n})();\nvar lazyGen = Control_Monad_State_Trans.lazyStateT;\nvar functorGen = functorStateT;\nvar map2 = /* #__PURE__ */ Data_Functor.map(functorGen);\nvar uniform = /* #__PURE__ */ map2(function (n) {\n    return Data_Int.toNumber(n) / Data_Int.toNumber(Random_LCG.lcgM);\n})(lcgStep);\nvar vectorOf = function (k) {\n    return function (g) {\n        return map2(toUnfoldable)(listOf(k)(g));\n    };\n};\nvar evalGen = function ($104) {\n    return Control_Monad_State.evalState(unGen($104));\n};\nvar randomSampleOne = function (gen) {\n    return function __do() {\n        var seed = Random_LCG.randomSeed();\n        return evalGen(gen)({\n            newSeed: seed,\n            size: 10\n        });\n    };\n};\nvar sample = function (seed) {\n    return function (sz) {\n        return function (g) {\n            return evalGen(vectorOf(sz)(g))({\n                newSeed: seed,\n                size: sz\n            });\n        };\n    };\n};\nvar randomSample$prime = function (n) {\n    return function (g) {\n        return function __do() {\n            var seed = Random_LCG.randomSeed();\n            return sample(seed)(n)(g);\n        };\n    };\n};\nvar randomSample = /* #__PURE__ */ randomSample$prime(10);\nvar choose = function (a) {\n    return function (b) {\n        var unscale = function (v) {\n            return v * 2.0;\n        };\n        var scale = function (v) {\n            return v * 0.5;\n        };\n        var min$prime = scale(min(a)(b));\n        var max$prime = scale(max(a)(b));\n        return map2((function () {\n            var $105 = add(min$prime);\n            var $106 = mul(max$prime - min$prime);\n            return function ($107) {\n                return unscale($105($106($107)));\n            };\n        })())(uniform);\n    };\n};\nvar bindGen = bindStateT;\nvar bind1 = /* #__PURE__ */ Control_Bind.bind(bindGen);\nvar frequency = function (xxs) {\n    var total = unwrap(foldMap1(function ($108) {\n        return Data_Monoid_Additive.Additive(Data_Tuple.fst($108));\n    })(xxs));\n    var $$default = Data_Tuple.snd(Data_Array_NonEmpty.head(xxs));\n    var pick = function ($copy_i) {\n        return function ($copy_n) {\n            var $tco_var_i = $copy_i;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(i, n) {\n                var v = Data_Array_NonEmpty.index(xxs)(i);\n                if (v instanceof Data_Maybe.Nothing) {\n                    $tco_done = true;\n                    return $$default;\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    if (n <= v.value0.value0) {\n                        $tco_done = true;\n                        return v.value0.value1;\n                    };\n                    if (Data_Boolean.otherwise) {\n                        $tco_var_i = i + 1 | 0;\n                        $copy_n = n - v.value0.value0;\n                        return;\n                    };\n                };\n                throw new Error(\"Failed pattern match at Test.QuickCheck.Gen (line 168, column 16 - line 172, column 44): \" + [ v.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_i, $copy_n);\n            };\n            return $tco_result;\n        };\n    };\n    return bind1(choose(0)(total))(function (n) {\n        return pick(0)(n);\n    });\n};\nvar applyGen = /* #__PURE__ */ Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity);\nvar apply = /* #__PURE__ */ Control_Apply.apply(applyGen);\nvar chooseInt$prime = function (a) {\n    return function (b) {\n        var numB = Data_Int.toNumber(b);\n        var numA = Data_Int.toNumber(a);\n        var clamp = function (x) {\n            return numA + Data_Number.remainder(x)((numB - numA) + 1);\n        };\n        var choose31BitPosNumber = map2(Data_Int.toNumber)(lcgStep);\n        var choose32BitPosNumber = apply(map2(add)(choose31BitPosNumber))(map2(mul(2.0))(choose31BitPosNumber));\n        return map2(function ($109) {\n            return Data_Int.floor(clamp($109));\n        })(choose32BitPosNumber);\n    };\n};\nvar chooseInt = function (a) {\n    return function (b) {\n        var $101 = a <= b;\n        if ($101) {\n            return chooseInt$prime(a)(b);\n        };\n        return chooseInt$prime(b)(a);\n    };\n};\nvar arrayOf = function (g) {\n    return sized(function (n) {\n        return bind1(chooseInt(0)(n))(function (k) {\n            return vectorOf(k)(g);\n        });\n    });\n};\nvar monadGenGen = {\n    chooseInt: chooseInt,\n    chooseFloat: choose,\n    chooseBool: /* #__PURE__ */ map2(function (v) {\n        return v < 0.5;\n    })(uniform),\n    resize: function (f) {\n        return function (g) {\n            return sized(function (s) {\n                return resize(f(s))(g);\n            });\n        };\n    },\n    sized: sized,\n    Monad0: function () {\n        return monadGen;\n    }\n};\nvar oneOf = function (xs) {\n    return bind1(chooseInt(0)(Data_Array_NonEmpty.length(xs) - 1 | 0))(function (n) {\n        return unsafeIndex(xs)(n);\n    });\n};\nvar applicativeGen = /* #__PURE__ */ Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(applicativeGen);\nvar arrayOf1 = function (g) {\n    return sized(function (n) {\n        return bind1(chooseInt(0)(n))(function (k) {\n            return bind1(g)(function (x) {\n                return bind1(vectorOf(k - 1 | 0)(g))(function (xs) {\n                    return pure1(fromJust(Data_Array_NonEmpty.fromArray(Data_Array.cons(x)(xs))));\n                });\n            });\n        });\n    });\n};\nvar elements = function (xs) {\n    return bind1(chooseInt(0)(Data_Array_NonEmpty.length(xs) - 1 | 0))(function (n) {\n        return pure1(unsafeIndex(xs)(n));\n    });\n};\nvar $$enum = function (dictBoundedEnum) {\n    var fromEnum = Data_Enum.fromEnum(dictBoundedEnum);\n    var Bounded0 = dictBoundedEnum.Bounded0();\n    var toEnum = Data_Enum.toEnum(dictBoundedEnum);\n    return bind1(chooseInt(fromEnum(Data_Bounded.bottom(Bounded0)))(fromEnum(Data_Bounded.top(Bounded0))))(function (i) {\n        return pure1(fromJust(toEnum(i)));\n    });\n};\nvar shuffle = function (xs) {\n    return bind1(vectorOf(Data_Array.length(xs))(chooseInt(0)(top)))(function (ns) {\n        return pure1(map1(Data_Tuple.snd)(Data_Array.sortBy(comparing(Data_Tuple.fst))(Data_Array.zip(ns)(xs))));\n    });\n};\nvar suchThat = function (gen) {\n    return function (pred) {\n        var go = function (v) {\n            return bind1(gen)(function (a) {\n                return pure1((function () {\n                    var $102 = pred(a);\n                    if ($102) {\n                        return new Control_Monad_Rec_Class.Done(a);\n                    };\n                    return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);\n                })());\n            });\n        };\n        return tailRecM(go)(Data_Unit.unit);\n    };\n};\nvar altGen = /* #__PURE__ */ Control_Monad_State_Trans.altStateT(Data_Identity.monadIdentity)(Data_Identity.altIdentity);\nexport {\n    unGen,\n    repeatable,\n    stateful,\n    variant,\n    suchThat,\n    sized,\n    resize,\n    choose,\n    chooseInt,\n    oneOf,\n    frequency,\n    arrayOf,\n    arrayOf1,\n    $$enum as enum,\n    listOf,\n    vectorOf,\n    elements,\n    shuffle,\n    runGen,\n    evalGen,\n    perturbGen,\n    uniform,\n    sample,\n    randomSample,\n    randomSample$prime,\n    randomSampleOne,\n    functorGen,\n    applyGen,\n    applicativeGen,\n    bindGen,\n    monadGen,\n    altGen,\n    monadRecGen,\n    lazyGen,\n    monadGenGen\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad_Gen_Class from \"../Control.Monad.Gen.Class/index.js\";\nimport * as Control_Monad_Gen_Common from \"../Control.Monad.Gen.Common/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Array_NonEmpty from \"../Data.Array.NonEmpty/index.js\";\nimport * as Data_Array_ST from \"../Data.Array.ST/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Enum from \"../Data.Enum/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Int from \"../Data.Int/index.js\";\nimport * as Data_Lazy from \"../Data.Lazy/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid_Additive from \"../Data.Monoid.Additive/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Endo from \"../Data.Monoid.Endo/index.js\";\nimport * as Data_Monoid_Multiplicative from \"../Data.Monoid.Multiplicative/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_NonEmpty from \"../Data.NonEmpty/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup_First from \"../Data.Semigroup.First/index.js\";\nimport * as Data_Semigroup_Last from \"../Data.Semigroup.Last/index.js\";\nimport * as Data_String_CodeUnits from \"../Data.String.CodeUnits/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Data_String_NonEmpty_CodeUnits from \"../Data.String.NonEmpty.CodeUnits/index.js\";\nimport * as Data_String_NonEmpty_Internal from \"../Data.String.NonEmpty.Internal/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record from \"../Record/index.js\";\nimport * as Test_QuickCheck_Gen from \"../Test.QuickCheck.Gen/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);\nvar foldl = /* #__PURE__ */ Data_Foldable.foldl(Data_List_Types.foldableList);\nvar fromEnum = /* #__PURE__ */ Data_Enum.fromEnum(Data_Enum.boundedEnumChar);\nvar foldl1 = /* #__PURE__ */ Data_Foldable.foldl(Data_Foldable.foldableArray);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar wrap = /* #__PURE__ */ Data_Newtype.wrap();\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Test_QuickCheck_Gen.functorGen);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Test_QuickCheck_Gen.bindGen);\nvar apply = /* #__PURE__ */ Control_Apply.apply(Test_QuickCheck_Gen.applyGen);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar genMaybe = /* #__PURE__ */ Control_Monad_Gen_Common.genMaybe(Test_QuickCheck_Gen.monadGenGen);\nvar genEither = /* #__PURE__ */ Control_Monad_Gen_Common.genEither(Test_QuickCheck_Gen.monadGenGen);\nvar coarbitraryNoArguments = {\n    coarbitrary: function (v) {\n        return identity;\n    }\n};\nvar coarbitrary = function (dict) {\n    return dict.coarbitrary;\n};\nvar coarbitraryArgument = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return {\n        coarbitrary: function (v) {\n            return coarbitrary3(v);\n        }\n    };\n};\nvar coarbitraryConstructor = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return {\n        coarbitrary: function (v) {\n            return coarbitrary3(v);\n        }\n    };\n};\nvar coarbitraryProduct = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return function (dictCoarbitrary1) {\n        var coarbitrary4 = coarbitrary(dictCoarbitrary1);\n        return {\n            coarbitrary: function (v) {\n                var $211 = coarbitrary4(v.value1);\n                var $212 = coarbitrary3(v.value0);\n                return function ($213) {\n                    return $211($212($213));\n                };\n            }\n        };\n    };\n};\nvar coarbitrarySum = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return function (dictCoarbitrary1) {\n        var coarbitrary4 = coarbitrary(dictCoarbitrary1);\n        return {\n            coarbitrary: function (v) {\n                if (v instanceof Data_Generic_Rep.Inl) {\n                    return coarbitrary3(v.value0);\n                };\n                if (v instanceof Data_Generic_Rep.Inr) {\n                    return coarbitrary4(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Test.QuickCheck.Arbitrary (line 249, column 1 - line 251, column 38): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar genericCoarbitrary = function (dictGeneric) {\n    var from = Data_Generic_Rep.from(dictGeneric);\n    return function (dictCoarbitrary) {\n        var coarbitrary3 = coarbitrary(dictCoarbitrary);\n        return function (x) {\n            return coarbitrary3(from(x));\n        };\n    };\n};\nvar coarbUnit = {\n    coarbitrary: function (v) {\n        return Test_QuickCheck_Gen.perturbGen(1.0);\n    }\n};\nvar coarbTuple = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return function (dictCoarbitrary1) {\n        var coarbitrary4 = coarbitrary(dictCoarbitrary1);\n        return {\n            coarbitrary: function (v) {\n                var $214 = coarbitrary4(v.value1);\n                var $215 = coarbitrary3(v.value0);\n                return function ($216) {\n                    return $214($215($216));\n                };\n            }\n        };\n    };\n};\nvar coarbOrdering = {\n    coarbitrary: function (v) {\n        if (v instanceof Data_Ordering.LT) {\n            return Test_QuickCheck_Gen.perturbGen(1.0);\n        };\n        if (v instanceof Data_Ordering.EQ) {\n            return Test_QuickCheck_Gen.perturbGen(2.0);\n        };\n        if (v instanceof Data_Ordering.GT) {\n            return Test_QuickCheck_Gen.perturbGen(3.0);\n        };\n        throw new Error(\"Failed pattern match at Test.QuickCheck.Arbitrary (line 123, column 1 - line 126, column 34): \" + [ v.constructor.name ]);\n    }\n};\nvar coarbNumber = {\n    coarbitrary: Test_QuickCheck_Gen.perturbGen\n};\nvar coarbNonEmpty = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return function (dictCoarbitrary1) {\n        var coarbitrary4 = coarbitrary(dictCoarbitrary1);\n        return {\n            coarbitrary: function (v) {\n                var $217 = coarbitrary3(v.value1);\n                var $218 = coarbitrary4(v.value0);\n                return function ($219) {\n                    return $217($218($219));\n                };\n            }\n        };\n    };\n};\nvar coarbMaybe = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return {\n        coarbitrary: function (v) {\n            if (v instanceof Data_Maybe.Nothing) {\n                return Test_QuickCheck_Gen.perturbGen(1.0);\n            };\n            if (v instanceof Data_Maybe.Just) {\n                return coarbitrary3(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Test.QuickCheck.Arbitrary (line 187, column 1 - line 189, column 39): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar coarbList = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return {\n        coarbitrary: foldl(function (f) {\n            return function (x) {\n                var $220 = coarbitrary3(x);\n                return function ($221) {\n                    return f($220($221));\n                };\n            };\n        })(identity)\n    };\n};\nvar coarbNonEmptyList = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(coarbNonEmpty(coarbList(dictCoarbitrary))(dictCoarbitrary));\n    return {\n        coarbitrary: function (v) {\n            return coarbitrary3(v);\n        }\n    };\n};\nvar coarbLazy = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return {\n        coarbitrary: function (a) {\n            return coarbitrary3(Data_Lazy.force(a));\n        }\n    };\n};\nvar coarbInt = {\n    coarbitrary: function ($222) {\n        return Test_QuickCheck_Gen.perturbGen(Data_Int.toNumber($222));\n    }\n};\nvar coarbitrary1 = /* #__PURE__ */ coarbitrary(coarbInt);\nvar coarbIdentity = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return {\n        coarbitrary: function (v) {\n            return coarbitrary3(v);\n        }\n    };\n};\nvar coarbEither = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return function (dictCoarbitrary1) {\n        var coarbitrary4 = coarbitrary(dictCoarbitrary1);\n        return {\n            coarbitrary: function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return coarbitrary3(v.value0);\n                };\n                if (v instanceof Data_Either.Right) {\n                    return coarbitrary4(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Test.QuickCheck.Arbitrary (line 194, column 1 - line 196, column 40): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar coarbChar = {\n    coarbitrary: function (c) {\n        return coarbitrary1(fromEnum(c));\n    }\n};\nvar coarbBoolean = {\n    coarbitrary: function (v) {\n        if (v) {\n            return Test_QuickCheck_Gen.perturbGen(1.0);\n        };\n        if (!v) {\n            return Test_QuickCheck_Gen.perturbGen(2.0);\n        };\n        throw new Error(\"Failed pattern match at Test.QuickCheck.Arbitrary (line 80, column 1 - line 82, column 37): \" + [ v.constructor.name ]);\n    }\n};\nvar coarbArray = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return {\n        coarbitrary: foldl1(function (f) {\n            return function (x) {\n                var $223 = coarbitrary3(x);\n                return function ($224) {\n                    return f($223($224));\n                };\n            };\n        })(identity)\n    };\n};\nvar coarbitrary2 = /* #__PURE__ */ coarbitrary(/* #__PURE__ */ coarbArray(/* #__PURE__ */ coarbMaybe(coarbChar)));\nvar coarbNonEmptyArray = function (dictCoarbitrary) {\n    return {\n        coarbitrary: (function () {\n            var $225 = coarbitrary(coarbArray(dictCoarbitrary));\n            return function ($226) {\n                return $225(Data_Array_NonEmpty.toArray($226));\n            };\n        })()\n    };\n};\nvar coarbString = {\n    coarbitrary: function (s) {\n        return coarbitrary2(map(Data_String_CodeUnits.charAt(0))(Data_String_Common.split(wrap(\"\"))(s)));\n    }\n};\nvar coarbNonEmptyString = {\n    coarbitrary: /* #__PURE__ */ (function () {\n        var $227 = coarbitrary(coarbString);\n        return function ($228) {\n            return $227(Data_String_NonEmpty_Internal.toString($228));\n        };\n    })()\n};\nvar arbitraryRowListNil = {\n    arbitraryRecord: function (v) {\n        return pure({});\n    }\n};\nvar arbitraryRecord = function (dict) {\n    return dict.arbitraryRecord;\n};\nvar arbitraryRecordInstance = function () {\n    return function (dictArbitraryRowList) {\n        return {\n            arbitrary: arbitraryRecord(dictArbitraryRowList)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar arbitraryNoArguments = /* #__PURE__ */ (function () {\n    return {\n        arbitrary: pure(Data_Generic_Rep.NoArguments.value)\n    };\n})();\nvar arbitraryGenericSum = function (dict) {\n    return dict.arbitraryGenericSum;\n};\nvar arbitrary = function (dict) {\n    return dict.arbitrary;\n};\nvar arbitraryArgument = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Generic_Rep.Argument)(arbitrary(dictArbitrary))\n    };\n};\nvar arbitraryConstructor = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Generic_Rep.Constructor)(arbitrary(dictArbitrary))\n    };\n};\nvar arbitraryIdentity = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Identity.Identity)(arbitrary(dictArbitrary))\n    };\n};\nvar arbitraryLazy = function (dictArbitrary) {\n    return {\n        arbitrary: bind(arbitrary(dictArbitrary))(function ($229) {\n            return pure(Data_Lazy.defer(Data_Function[\"const\"]($229)));\n        })\n    };\n};\nvar arbitraryList = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return {\n        arbitrary: Test_QuickCheck_Gen.sized(function (n) {\n            return bind(Test_QuickCheck_Gen.chooseInt(0)(n))(Data_Function.flip(Test_QuickCheck_Gen.listOf)(arbitrary1));\n        })\n    };\n};\nvar arbitraryProduct = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return function (dictArbitrary1) {\n        return {\n            arbitrary: apply(map1(Data_Generic_Rep.Product.create)(arbitrary1))(arbitrary(dictArbitrary1))\n        };\n    };\n};\nvar arbitraryRowListCons = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return function (dictArbitraryRowList) {\n        var arbitraryRecord1 = arbitraryRecord(dictArbitraryRowList);\n        return function () {\n            return function () {\n                return function () {\n                    return function (dictIsSymbol) {\n                        var insert = Record.insert(dictIsSymbol)()();\n                        return {\n                            arbitraryRecord: function (v) {\n                                return bind(arbitrary1)(function (value) {\n                                    return bind(arbitraryRecord1(Type_Proxy[\"Proxy\"].value))(function (previous) {\n                                        return pure(insert(Type_Proxy[\"Proxy\"].value)(value)(previous));\n                                    });\n                                });\n                            }\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar arbitrarySum = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return function (dictArbitraryGenericSum) {\n        return {\n            arbitrary: Test_QuickCheck_Gen.oneOf(fromJust(Data_Array_NonEmpty.fromArray(Data_Array.cons(map1(Data_Generic_Rep.Inl.create)(arbitrary1))(map(map1(Data_Generic_Rep.Inr.create))(arbitraryGenericSum(dictArbitraryGenericSum))))))\n        };\n    };\n};\nvar genericArbitrary = function (dictGeneric) {\n    var to = Data_Generic_Rep.to(dictGeneric);\n    return function (dictArbitrary) {\n        return map1(to)(arbitrary(dictArbitrary));\n    };\n};\nvar arbUnit = {\n    arbitrary: /* #__PURE__ */ pure(Data_Unit.unit)\n};\nvar arbTuple = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return function (dictArbitrary1) {\n        return {\n            arbitrary: apply(map1(Data_Tuple.Tuple.create)(arbitrary1))(arbitrary(dictArbitrary1))\n        };\n    };\n};\nvar arbOrdering = /* #__PURE__ */ (function () {\n    return {\n        arbitrary: Test_QuickCheck_Gen.elements(fromJust(Data_Array_NonEmpty.fromArray([ Data_Ordering.LT.value, Data_Ordering.EQ.value, Data_Ordering.GT.value ])))\n    };\n})();\nvar arbNumber = {\n    arbitrary: Test_QuickCheck_Gen.uniform\n};\nvar arbNonEmpty = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return function (dictArbitrary1) {\n        return {\n            arbitrary: apply(map1(Data_NonEmpty.NonEmpty.create)(arbitrary(dictArbitrary1)))(arbitrary1)\n        };\n    };\n};\nvar arbNonEmptyList = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_List_Types.NonEmptyList)(arbitrary(arbNonEmpty(arbitraryList(dictArbitrary))(dictArbitrary)))\n    };\n};\nvar arbMultiplicative = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Monoid_Multiplicative.Multiplicative)(arbitrary(dictArbitrary))\n    };\n};\nvar arbMaybe = function (dictArbitrary) {\n    return {\n        arbitrary: genMaybe(arbitrary(dictArbitrary))\n    };\n};\nvar arbLast = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Semigroup_Last.Last)(arbitrary(dictArbitrary))\n    };\n};\nvar arbInt = /* #__PURE__ */ (function () {\n    return {\n        arbitrary: Test_QuickCheck_Gen.chooseInt(-1000000 | 0)(1000000)\n    };\n})();\nvar arbGenSumSum = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return function (dictArbitraryGenericSum) {\n        return {\n            arbitraryGenericSum: Data_Array.cons(map1(Data_Generic_Rep.Inl.create)(arbitrary1))(map(map1(Data_Generic_Rep.Inr.create))(arbitraryGenericSum(dictArbitraryGenericSum)))\n        };\n    };\n};\nvar arbGenSumConstructor = function (dictArbitrary) {\n    return {\n        arbitraryGenericSum: [ arbitrary(arbitraryConstructor(dictArbitrary)) ]\n    };\n};\nvar arbFunction = function (dictCoarbitrary) {\n    var coarbitrary3 = coarbitrary(dictCoarbitrary);\n    return function (dictArbitrary) {\n        var arbitrary1 = arbitrary(dictArbitrary);\n        return {\n            arbitrary: Test_QuickCheck_Gen.repeatable(function (a) {\n                return coarbitrary3(a)(arbitrary1);\n            })\n        };\n    };\n};\nvar arbFirst = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Semigroup_First.First)(arbitrary(dictArbitrary))\n    };\n};\nvar arbEndo = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Monoid_Endo.Endo)(arbitrary(dictArbitrary))\n    };\n};\nvar arbEither = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(dictArbitrary);\n    return function (dictArbitrary1) {\n        return {\n            arbitrary: genEither(arbitrary1)(arbitrary(dictArbitrary1))\n        };\n    };\n};\nvar arbDual = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Monoid_Dual.Dual)(arbitrary(dictArbitrary))\n    };\n};\nvar arbDisj = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Monoid_Disj.Disj)(arbitrary(dictArbitrary))\n    };\n};\nvar arbConj = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Monoid_Conj.Conj)(arbitrary(dictArbitrary))\n    };\n};\nvar arbChar = {\n    arbitrary: /* #__PURE__ */ map1(/* #__PURE__ */ Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(/* #__PURE__ */ Data_Bounded.bottom(Data_Bounded.boundedChar))(/* #__PURE__ */ Data_Bounded.top(Data_Bounded.boundedChar)))(/* #__PURE__ */ Test_QuickCheck_Gen.chooseInt(0)(65536))\n};\nvar arbBoolean = {\n    arbitrary: /* #__PURE__ */ Control_Monad_Gen_Class.chooseBool(Test_QuickCheck_Gen.monadGenGen)\n};\nvar arbArray = function (dictArbitrary) {\n    return {\n        arbitrary: Test_QuickCheck_Gen.arrayOf(arbitrary(dictArbitrary))\n    };\n};\nvar arbNonEmptyArray = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(arbArray(dictArbitrary));\n    return {\n        arbitrary: bind(arbitrary(dictArbitrary))(function (x) {\n            return bind(arbitrary1)(function (xs) {\n                return pure(fromJust(Data_Array_NonEmpty.fromArray((function __do() {\n                    var mxs = Data_Array_ST.unsafeThaw(xs)();\n                    Data_Array_ST.push(x)(mxs)();\n                    return Data_Array_ST.unsafeFreeze(mxs)();\n                })())));\n            });\n        })\n    };\n};\nvar arbString = {\n    arbitrary: /* #__PURE__ */ map1(Data_String_CodeUnits.fromCharArray)(/* #__PURE__ */ arbitrary(/* #__PURE__ */ arbArray(arbChar)))\n};\nvar arbNonEmptyString = {\n    arbitrary: /* #__PURE__ */ apply(/* #__PURE__ */ map1(Data_String_NonEmpty_CodeUnits.cons)(/* #__PURE__ */ arbitrary(arbChar)))(/* #__PURE__ */ arbitrary(arbString))\n};\nvar coarbFunction = function (dictArbitrary) {\n    var arbitrary1 = arbitrary(arbArray(dictArbitrary));\n    return function (dictCoarbitrary) {\n        var coarbitrary3 = coarbitrary(coarbArray(dictCoarbitrary));\n        return {\n            coarbitrary: function (f) {\n                return function (gen) {\n                    return bind(arbitrary1)(function (xs) {\n                        return coarbitrary3(map(f)(xs))(gen);\n                    });\n                };\n            }\n        };\n    };\n};\nvar arbAdditive = function (dictArbitrary) {\n    return {\n        arbitrary: map1(Data_Monoid_Additive.Additive)(arbitrary(dictArbitrary))\n    };\n};\nexport {\n    arbitrary,\n    coarbitrary,\n    genericArbitrary,\n    genericCoarbitrary,\n    arbitraryGenericSum,\n    arbitraryRecord,\n    arbBoolean,\n    coarbBoolean,\n    arbNumber,\n    coarbNumber,\n    arbInt,\n    coarbInt,\n    arbString,\n    coarbString,\n    arbNonEmptyString,\n    coarbNonEmptyString,\n    arbChar,\n    coarbChar,\n    arbUnit,\n    coarbUnit,\n    arbOrdering,\n    coarbOrdering,\n    arbArray,\n    coarbArray,\n    arbNonEmptyArray,\n    coarbNonEmptyArray,\n    arbFunction,\n    coarbFunction,\n    arbFirst,\n    arbLast,\n    arbAdditive,\n    arbMultiplicative,\n    arbConj,\n    arbDisj,\n    arbDual,\n    arbEndo,\n    arbTuple,\n    coarbTuple,\n    arbMaybe,\n    coarbMaybe,\n    arbEither,\n    coarbEither,\n    arbitraryList,\n    coarbList,\n    arbitraryIdentity,\n    coarbIdentity,\n    arbitraryLazy,\n    coarbLazy,\n    arbNonEmpty,\n    coarbNonEmpty,\n    arbNonEmptyList,\n    coarbNonEmptyList,\n    arbitraryNoArguments,\n    coarbitraryNoArguments,\n    arbGenSumSum,\n    arbGenSumConstructor,\n    arbitrarySum,\n    coarbitrarySum,\n    arbitraryProduct,\n    coarbitraryProduct,\n    arbitraryConstructor,\n    coarbitraryConstructor,\n    arbitraryArgument,\n    coarbitraryArgument,\n    arbitraryRowListNil,\n    arbitraryRowListCons,\n    arbitraryRecordInstance\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Bolson_Control from \"../Bolson.Control/index.js\";\nimport * as Bolson_Core from \"../Bolson.Core/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Free from \"../Control.Monad.Free/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_String_Utils from \"../Data.String.Utils/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as Random_LCG from \"../Random.LCG/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nimport * as Test_QuickCheck_Arbitrary from \"../Test.QuickCheck.Arbitrary/index.js\";\nimport * as Test_QuickCheck_Gen from \"../Test.QuickCheck.Gen/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);\nvar arbitrary = /* #__PURE__ */ Test_QuickCheck_Arbitrary.arbitrary(Test_QuickCheck_Arbitrary.arbInt);\nvar add = /* #__PURE__ */ Data_Semiring.add(Data_Semiring.semiringInt);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(/* #__PURE__ */ Data_Monoid.monoidFn(/* #__PURE__ */ Control_Monad_ST_Internal.monoidST(Data_Monoid.monoidUnit)));\nvar empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar eq = /* #__PURE__ */ Data_Eq.eq(Bolson_Core.eqScope);\nvar join = /* #__PURE__ */ Control_Bind.join(Control_Monad_Free.freeBind);\nvar pure2 = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar MakeElement = /* #__PURE__ */ (function () {\n    function MakeElement(value0) {\n        this.value0 = value0;\n    };\n    MakeElement.create = function (value0) {\n        return new MakeElement(value0);\n    };\n    return MakeElement;\n})();\nvar MakeText = /* #__PURE__ */ (function () {\n    function MakeText(value0) {\n        this.value0 = value0;\n    };\n    MakeText.create = function (value0) {\n        return new MakeText(value0);\n    };\n    return MakeText;\n})();\nvar MakeOpenDynBeacon = /* #__PURE__ */ (function () {\n    function MakeOpenDynBeacon(value0) {\n        this.value0 = value0;\n    };\n    MakeOpenDynBeacon.create = function (value0) {\n        return new MakeOpenDynBeacon(value0);\n    };\n    return MakeOpenDynBeacon;\n})();\nvar MakeCloseDynBeacon = /* #__PURE__ */ (function () {\n    function MakeCloseDynBeacon(value0) {\n        this.value0 = value0;\n    };\n    MakeCloseDynBeacon.create = function (value0) {\n        return new MakeCloseDynBeacon(value0);\n    };\n    return MakeCloseDynBeacon;\n})();\nvar MakePursx = /* #__PURE__ */ (function () {\n    function MakePursx(value0) {\n        this.value0 = value0;\n    };\n    MakePursx.create = function (value0) {\n        return new MakePursx(value0);\n    };\n    return MakePursx;\n})();\nvar SetProp = /* #__PURE__ */ (function () {\n    function SetProp(value0) {\n        this.value0 = value0;\n    };\n    SetProp.create = function (value0) {\n        return new SetProp(value0);\n    };\n    return SetProp;\n})();\nvar SetText = /* #__PURE__ */ (function () {\n    function SetText(value0) {\n        this.value0 = value0;\n    };\n    SetText.create = function (value0) {\n        return new SetText(value0);\n    };\n    return SetText;\n})();\nvar UnsetAttribute = /* #__PURE__ */ (function () {\n    function UnsetAttribute(value0) {\n        this.value0 = value0;\n    };\n    UnsetAttribute.create = function (value0) {\n        return new UnsetAttribute(value0);\n    };\n    return UnsetAttribute;\n})();\nvar SendToPos = /* #__PURE__ */ (function () {\n    function SendToPos(value0) {\n        this.value0 = value0;\n    };\n    SendToPos.create = function (value0) {\n        return new SendToPos(value0);\n    };\n    return SendToPos;\n})();\nvar MakeRoot = /* #__PURE__ */ (function () {\n    function MakeRoot(value0) {\n        this.value0 = value0;\n    };\n    MakeRoot.create = function (value0) {\n        return new MakeRoot(value0);\n    };\n    return MakeRoot;\n})();\nvar GiveNewParent = /* #__PURE__ */ (function () {\n    function GiveNewParent(value0) {\n        this.value0 = value0;\n    };\n    GiveNewParent.create = function (value0) {\n        return new GiveNewParent(value0);\n    };\n    return GiveNewParent;\n})();\nvar DisconnectElement = /* #__PURE__ */ (function () {\n    function DisconnectElement(value0) {\n        this.value0 = value0;\n    };\n    DisconnectElement.create = function (value0) {\n        return new DisconnectElement(value0);\n    };\n    return DisconnectElement;\n})();\nvar RemoveDynBeacon = /* #__PURE__ */ (function () {\n    function RemoveDynBeacon(value0) {\n        this.value0 = value0;\n    };\n    RemoveDynBeacon.create = function (value0) {\n        return new RemoveDynBeacon(value0);\n    };\n    return RemoveDynBeacon;\n})();\nvar DeleteFromCache = /* #__PURE__ */ (function () {\n    function DeleteFromCache(value0) {\n        this.value0 = value0;\n    };\n    DeleteFromCache.create = function (value0) {\n        return new DeleteFromCache(value0);\n    };\n    return DeleteFromCache;\n})();\nvar RenderableInstruction = /* #__PURE__ */ (function () {\n    function RenderableInstruction(value0) {\n        this.value0 = value0;\n    };\n    RenderableInstruction.create = function (value0) {\n        return new RenderableInstruction(value0);\n    };\n    return RenderableInstruction;\n})();\nvar EliminatableInstruction = /* #__PURE__ */ (function () {\n    function EliminatableInstruction(value0) {\n        this.value0 = value0;\n    };\n    EliminatableInstruction.create = function (value0) {\n        return new EliminatableInstruction(value0);\n    };\n    return EliminatableInstruction;\n})();\nvar EFunctionOfFFIDOMSnapshot = function (x) {\n    return x;\n};\nvar functorEFunctionOfFFIDOMS = {\n    map: function (f) {\n        return function (m) {\n            return map(map1(map2(f)))(m);\n        };\n    }\n};\nvar ssrUnsetAttribute = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new RenderableInstruction(new UnsetAttribute(a)) ]);\n        })(i));\n    };\n};\nvar ssrSetText = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new RenderableInstruction(new SetText(a)) ]);\n        })(i));\n    };\n};\nvar ssrSetProp = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new RenderableInstruction(new SetProp(a)) ]);\n        })(i));\n    };\n};\nvar ssrSendToPos = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new EliminatableInstruction(new SendToPos(a)) ]);\n        })(i));\n    };\n};\nvar ssrRemoveDynBeacon = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new EliminatableInstruction(new RemoveDynBeacon(a)) ]);\n        })(i));\n    };\n};\nvar ssrMakeText = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new RenderableInstruction(new MakeText(a)) ]);\n        })(i));\n    };\n};\nvar ssrMakeRoot = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new EliminatableInstruction(new MakeRoot(a)) ]);\n        })(i));\n    };\n};\nvar ssrMakePursx = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new RenderableInstruction(new MakePursx(a)) ]);\n        })(i));\n    };\n};\nvar ssrMakeElement = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new RenderableInstruction(new MakeElement(a)) ]);\n        })(i));\n    };\n};\nvar ssrMakeDynBeacon = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new RenderableInstruction(new MakeOpenDynBeacon(a)), new RenderableInstruction(new MakeCloseDynBeacon(a)) ]);\n        })(i));\n    };\n};\nvar ssrGiveNewParent = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new EliminatableInstruction(new GiveNewParent(a)) ]);\n        })(i));\n    };\n};\nvar ssrDisconnectElement = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new EliminatableInstruction(new DisconnectElement(a)) ]);\n        })(i));\n    };\n};\nvar ssrDeleteFromCache = function (a) {\n    return function (i) {\n        return $$void(Control_Monad_ST_Internal.modify(function (v) {\n            return append(v)([ new EliminatableInstruction(new DeleteFromCache(a)) ]);\n        })(i));\n    };\n};\nvar ssrDOMInterpret = function (seed) {\n    return {\n        ids: function __do() {\n            var s = Control_Monad_ST_Internal.read(seed)();\n            var o = show(Test_QuickCheck_Gen.evalGen(arbitrary)({\n                newSeed: Random_LCG.mkSeed(s),\n                size: 5\n            }));\n            $$void(Control_Monad_ST_Internal.modify(add(1))(seed))();\n            return o;\n        },\n        makeElement: ssrMakeElement,\n        attributeParent: function (v) {\n            return function (v1) {\n                return pure(Data_Unit.unit);\n            };\n        },\n        makeRoot: ssrMakeRoot,\n        makeText: ssrMakeText,\n        makePursx: ssrMakePursx,\n        setProp: ssrSetProp,\n        unsetAttribute: ssrUnsetAttribute,\n        makeDynBeacon: ssrMakeDynBeacon,\n        setCb: function (v) {\n            return function (v1) {\n                return pure(Data_Unit.unit);\n            };\n        },\n        setText: ssrSetText,\n        sendToPos: ssrSendToPos,\n        deleteFromCache: ssrDeleteFromCache,\n        removeDynBeacon: ssrRemoveDynBeacon,\n        giveNewParent: ssrGiveNewParent,\n        disconnectElement: ssrDisconnectElement\n    };\n};\nvar runOnJust = function (v) {\n    return function (v1) {\n        if (v instanceof Data_Maybe.Just) {\n            return v1(v.value0);\n        };\n        return pure1(false);\n    };\n};\nvar sendToPos = function (a) {\n    return function (state) {\n        return function __do() {\n            var scope = $foreign.getScope(a.id)(state)();\n            var parent = $foreign.getParent(a.id)(state)();\n            var dynFamily = $foreign.getDynFamily(a.id)(state)();\n            var newA = {\n                scope: scope,\n                parent: parent,\n                dynFamily: dynFamily,\n                id: a.id,\n                pos: new Data_Maybe.Just(a.pos),\n                ez: false,\n                raiseId: mempty,\n                ctor: Bolson_Core.envy(empty)\n            };\n            return coerce($foreign.giveNewParent_(Data_Maybe.Just.create)(runOnJust)(newA))(state)();\n        };\n    };\n};\nvar __internalDekuFlatten = function (a) {\n    return function (b) {\n        return function (c) {\n            return Bolson_Control.flatten({\n                doLogic: function (pos) {\n                    return function (v) {\n                        return function (id) {\n                            return v.sendToPos({\n                                id: id,\n                                pos: pos\n                            });\n                        };\n                    };\n                },\n                ids: function ($82) {\n                    return (function (v) {\n                        return v.ids;\n                    })(unwrap($82));\n                },\n                disconnectElement: function (v) {\n                    return function (v1) {\n                        return v.disconnectElement({\n                            id: v1.id,\n                            scope: v1.scope,\n                            parent: v1.parent,\n                            scopeEq: eq\n                        });\n                    };\n                },\n                toElt: function (v) {\n                    return v;\n                }\n            })(a)(b)(coerce(c));\n        };\n    };\n};\nvar giveNewParentOrReconstruct = function (di) {\n    return function (just) {\n        return function (roj) {\n            return function (gnp) {\n                return join(Control_Monad_Free.liftF(pure2(function (ffi) {\n                    var needsFreshNut = (function () {\n                        var v = map(function (a) {\n                            return function (v1) {\n                                return pure1(a);\n                            };\n                        })(__internalDekuFlatten({\n                            dynFamily: gnp.dynFamily,\n                            ez: gnp.ez,\n                            parent: new Data_Maybe.Just(gnp.parent),\n                            pos: gnp.pos,\n                            raiseId: gnp.raiseId,\n                            scope: gnp.scope\n                        })(di)(gnp.ctor));\n                        return pure1(Control_Monad_Free.wrap(v));\n                    })();\n                    var hasIdAndInScope = pure1(Control_Monad_Free.liftF(pure2($foreign.giveNewParent_(just)(roj)(gnp))));\n                    return function __do() {\n                        var hasId = $foreign.stateHasKey(gnp.id)(ffi)();\n                        if (hasId) {\n                            var scope = $foreign.getScope(gnp.id)(ffi)();\n                            if (scope instanceof Bolson_Core.Global) {\n                                return hasIdAndInScope();\n                            };\n                            if (scope instanceof Bolson_Core.Local && gnp.scope instanceof Bolson_Core.Local) {\n                                var $79 = Data_String_Utils.includes(scope.value0)(gnp.scope.value0);\n                                if ($79) {\n                                    return hasIdAndInScope();\n                                };\n                                return needsFreshNut();\n                            };\n                            return needsFreshNut();\n                        };\n                        return needsFreshNut();\n                    };\n                })));\n            };\n        };\n    };\n};\nvar fullDOMInterpret = function (seed) {\n    var l = {\n        ids: function __do() {\n            var s = Control_Monad_ST_Internal.read(seed)();\n            var o = show(Test_QuickCheck_Gen.evalGen(arbitrary)({\n                newSeed: Random_LCG.mkSeed(s),\n                size: 5\n            }));\n            $$void(Control_Monad_ST_Internal.modify(add(1))(seed))();\n            return o;\n        },\n        makeElement: (function () {\n            var $83 = $foreign.makeElement_(runOnJust)(false);\n            return function ($84) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($83($84))));\n            };\n        })(),\n        makeDynBeacon: (function () {\n            var $85 = $foreign.makeDynBeacon_(runOnJust)(false);\n            return function ($86) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($85($86))));\n            };\n        })(),\n        attributeParent: (function () {\n            var $87 = $foreign.attributeParent_(runOnJust);\n            return function ($88) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($87($88))));\n            };\n        })(),\n        makeRoot: function ($89) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.makeRoot_($89))));\n        },\n        makeText: (function () {\n            var $90 = $foreign.makeText_(runOnJust)(false)(Data_Maybe.maybe(Data_Unit.unit));\n            return function ($91) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($90($91))));\n            };\n        })(),\n        makePursx: (function () {\n            var $92 = $foreign.makePursx_(runOnJust)(false)(Data_Maybe.maybe(Data_Unit.unit));\n            return function ($93) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($92($93))));\n            };\n        })(),\n        setProp: (function () {\n            var $94 = $foreign.setProp_(false);\n            return function ($95) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($94($95))));\n            };\n        })(),\n        setCb: (function () {\n            var $96 = $foreign.setCb_(false);\n            return function ($97) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($96($97))));\n            };\n        })(),\n        unsetAttribute: (function () {\n            var $98 = $foreign.unsetAttribute_(false);\n            return function ($99) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($98($99))));\n            };\n        })(),\n        setText: function ($100) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.setText_($100))));\n        },\n        sendToPos: function ($101) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2(sendToPos($101))));\n        },\n        removeDynBeacon: function ($102) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.removeDynBeacon_($102))));\n        },\n        deleteFromCache: function ($103) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.deleteFromCache_($103))));\n        },\n        giveNewParent: function (gnp) {\n            return giveNewParentOrReconstruct(l)(Data_Maybe.Just.create)(runOnJust)(gnp);\n        },\n        disconnectElement: function ($104) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.disconnectElement_($104))));\n        }\n    };\n    return l;\n};\nvar hydratingDOMInterpret = function (seed) {\n    var l = {\n        ids: function __do() {\n            var s = Control_Monad_ST_Internal.read(seed)();\n            var o = show(Test_QuickCheck_Gen.evalGen(arbitrary)({\n                newSeed: Random_LCG.mkSeed(s),\n                size: 5\n            }));\n            $$void(Control_Monad_ST_Internal.modify(add(1))(seed))();\n            return o;\n        },\n        makeElement: (function () {\n            var $105 = $foreign.makeElement_(runOnJust)(true);\n            return function ($106) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($105($106))));\n            };\n        })(),\n        makeDynBeacon: (function () {\n            var $107 = $foreign.makeDynBeacon_(runOnJust)(true);\n            return function ($108) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($107($108))));\n            };\n        })(),\n        attributeParent: (function () {\n            var $109 = $foreign.attributeParent_(runOnJust);\n            return function ($110) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($109($110))));\n            };\n        })(),\n        makeRoot: function ($111) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.makeRoot_($111))));\n        },\n        makeText: (function () {\n            var $112 = $foreign.makeText_(runOnJust)(true)(Data_Maybe.maybe(Data_Unit.unit));\n            return function ($113) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($112($113))));\n            };\n        })(),\n        makePursx: (function () {\n            var $114 = $foreign.makePursx_(runOnJust)(true)(Data_Maybe.maybe(Data_Unit.unit));\n            return function ($115) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($114($115))));\n            };\n        })(),\n        setProp: (function () {\n            var $116 = $foreign.setProp_(true);\n            return function ($117) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($116($117))));\n            };\n        })(),\n        setCb: (function () {\n            var $118 = $foreign.setCb_(true);\n            return function ($119) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($118($119))));\n            };\n        })(),\n        unsetAttribute: (function () {\n            var $120 = $foreign.unsetAttribute_(true);\n            return function ($121) {\n                return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($120($121))));\n            };\n        })(),\n        setText: function ($122) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.setText_($122))));\n        },\n        sendToPos: function ($123) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2(sendToPos($123))));\n        },\n        deleteFromCache: function ($124) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.deleteFromCache_($124))));\n        },\n        removeDynBeacon: function ($125) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.removeDynBeacon_($125))));\n        },\n        giveNewParent: function (gnp) {\n            return giveNewParentOrReconstruct(l)(Data_Maybe.Just.create)(runOnJust)(gnp);\n        },\n        disconnectElement: function ($126) {\n            return Control_Monad_Free.liftF(EFunctionOfFFIDOMSnapshot(pure2($foreign.disconnectElement_($126))));\n        }\n    };\n    return l;\n};\nexport {\n    getAllComments,\n    makeFFIDOMSnapshot,\n    setHydrating,\n    unSetHydrating\n} from \"./foreign.js\";\nexport {\n    SendToPos,\n    MakeRoot,\n    GiveNewParent,\n    DisconnectElement,\n    RemoveDynBeacon,\n    DeleteFromCache,\n    RenderableInstruction,\n    EliminatableInstruction,\n    MakeElement,\n    MakeText,\n    MakeOpenDynBeacon,\n    MakeCloseDynBeacon,\n    MakePursx,\n    SetProp,\n    SetText,\n    UnsetAttribute,\n    EFunctionOfFFIDOMSnapshot,\n    fullDOMInterpret,\n    hydratingDOMInterpret,\n    ssrDOMInterpret,\n    functorEFunctionOfFFIDOMS\n};\n", "const windowImpl = function () {\n  return window;\n};\nexport { windowImpl as window };\n", "/* eslint-disable no-eq-null, eqeqeq */\n\nconst nullImpl = null;\nexport { nullImpl as null };\n\nexport function nullable(a, r, f) {\n  return a == null ? r : f(a);\n}\n\nexport function notNull(x) {\n  return x;\n}\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar toNullable = /* #__PURE__ */ Data_Maybe.maybe($foreign[\"null\"])($foreign.notNull);\nvar toMaybe = function (n) {\n    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);\n};\nvar showNullable = function (dictShow) {\n    return {\n        show: (function () {\n            var $17 = Data_Maybe.maybe(\"null\")(Data_Show.show(dictShow));\n            return function ($18) {\n                return $17(toMaybe($18));\n            };\n        })()\n    };\n};\nvar eqNullable = function (dictEq) {\n    return {\n        eq: Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe)\n    };\n};\nvar ordNullable = function (dictOrd) {\n    var eqNullable1 = eqNullable(dictOrd.Eq0());\n    return {\n        compare: Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe),\n        Eq0: function () {\n            return eqNullable1;\n        }\n    };\n};\nvar eq1Nullable = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqNullable(dictEq));\n    }\n};\nvar ord1Nullable = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordNullable(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Nullable;\n    }\n};\nexport {\n    null,\n    notNull\n} from \"./foreign.js\";\nexport {\n    toMaybe,\n    toNullable,\n    showNullable,\n    eqNullable,\n    eq1Nullable,\n    ordNullable,\n    ord1Nullable\n};\n", "export function _documentElement(doc) {\n  return doc.documentElement;\n}\n\nexport function _head(doc) {\n  return doc.head;\n}\n\nexport function _body(doc) {\n  return doc.body;\n}\n\nexport function _readyState(doc) {\n  return doc.readyState;\n}\n\nexport function _visibilityState(doc) {\n  return doc.readyState;\n}\n\nexport function _activeElement(doc) {\n  return doc.activeElement;\n}\n\nexport function _currentScript(doc) {\n  return doc.currentScript;\n}\n\nexport function _referrer(doc) {\n  return doc.referrer;\n}\n\nexport function _title(doc) {\n  return doc.title;\n}\n\nexport function _setTitle(title, doc) {\n  doc.title = title;\n}\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_HTML_HTMLDocument_ReadyState from \"../Web.HTML.HTMLDocument.ReadyState/index.js\";\nimport * as Web_HTML_HTMLDocument_VisibilityState from \"../Web.HTML.HTMLDocument.VisibilityState/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);\nvar visibilityState = function (doc) {\n    return map((function () {\n        var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_VisibilityState.Visible.value);\n        return function ($3) {\n            return $2(Web_HTML_HTMLDocument_VisibilityState.parse($3));\n        };\n    })())(function () {\n        return $foreign[\"_visibilityState\"](doc);\n    });\n};\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toDocument = Unsafe_Coerce.unsafeCoerce;\nvar title = function (doc) {\n    return function () {\n        return $foreign[\"_title\"](doc);\n    };\n};\nvar setTitle = function (newTitle) {\n    return function (doc) {\n        return function () {\n            return $foreign[\"_setTitle\"](newTitle, doc);\n        };\n    };\n};\nvar referrer = function (doc) {\n    return function () {\n        return $foreign[\"_referrer\"](doc);\n    };\n};\nvar readyState = function (doc) {\n    return map((function () {\n        var $4 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);\n        return function ($5) {\n            return $4(Web_HTML_HTMLDocument_ReadyState.parse($5));\n        };\n    })())(function () {\n        return $foreign[\"_readyState\"](doc);\n    });\n};\nvar head = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_head\"](doc);\n    });\n};\nvar fromParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNonElementParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromDocument = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar documentElement = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_documentElement\"](doc);\n    });\n};\nvar currentScript = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_currentScript\"](doc);\n    });\n};\nvar body = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_body\"](doc);\n    });\n};\nvar activeElement = function (doc) {\n    return map(Data_Nullable.toMaybe)(function () {\n        return $foreign[\"_activeElement\"](doc);\n    });\n};\nexport {\n    fromDocument,\n    fromNode,\n    fromParentNode,\n    fromNonElementParentNode,\n    fromEventTarget,\n    toDocument,\n    toNode,\n    toParentNode,\n    toNonElementParentNode,\n    toEventTarget,\n    documentElement,\n    head,\n    body,\n    readyState,\n    visibilityState,\n    activeElement,\n    currentScript,\n    referrer,\n    title,\n    setTitle\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toElement = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar offsetParent = /* #__PURE__ */ (function () {\n    var $2 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($3) {\n        return $2($foreign[\"_offsetParent\"]($3));\n    };\n})();\nvar fromParentNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNonDocumentTypeChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromEventTarget = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromElement = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nexport {\n    title,\n    setTitle,\n    lang,\n    setLang,\n    dir,\n    setDir,\n    hidden,\n    setHidden,\n    tabIndex,\n    setTabIndex,\n    draggable,\n    setDraggable,\n    contentEditable,\n    setContentEditable,\n    isContentEditable,\n    spellcheck,\n    setSpellcheck,\n    click,\n    focus,\n    blur,\n    offsetTop,\n    offsetLeft,\n    offsetWidth,\n    offsetHeight\n} from \"./foreign.js\";\nexport {\n    fromElement,\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromParentNode,\n    fromEventTarget,\n    toElement,\n    toNode,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toParentNode,\n    toEventTarget,\n    offsetParent\n};\n", "export function document(window) {\n  return function () {\n    return window.document;\n  };\n}\n\nexport function navigator(window) {\n  return function () {\n    return window.navigator;\n  };\n}\n\nexport function location(window) {\n  return function () {\n    return window.location;\n  };\n}\n\nexport function history(window) {\n  return function() {\n    return window.history;\n  };\n}\n\nexport function innerWidth(window) {\n  return function () {\n    return window.innerWidth;\n  };\n}\n\nexport function innerHeight(window) {\n  return function () {\n    return window.innerHeight;\n  };\n}\n\nexport function alert(str) {\n  return function (window) {\n    return function () {\n      window.alert(str);\n    };\n  };\n}\n\nexport function confirm(str) {\n  return function (window) {\n    return function () {\n      return window.confirm(str);\n    };\n  };\n}\n\nexport function moveBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.moveBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function moveTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.moveTo(width, height);\n      };\n    };\n  };\n}\n\nexport function _open(url) {\n  return function (name) {\n    return function (features) {\n      return function (window) {\n        return function () {\n          return window.open(url, name, features);\n        };\n      };\n    };\n  };\n}\n\nexport function close(window) {\n  return function () {\n    return window.close();\n  };\n}\n\nexport function outerHeight(window) {\n  return function () {\n    return window.outerHeight;\n  };\n}\n\nexport function outerWidth(window) {\n  return function () {\n    return window.outerWidth;\n  };\n}\n\nexport function print(window) {\n  return function () {\n    window.print();\n  };\n}\n\nexport function _prompt(str) {\n  return function (defaultText) {\n    return function (window) {\n      return function () {\n        return window.prompt(str, defaultText);\n      };\n    };\n  };\n}\n\nexport function resizeBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.resizeBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function resizeTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.resizeTo(width, height);\n      };\n    };\n  };\n}\n\nexport function screenX(window) {\n  return function () {\n    return window.screenX;\n  };\n}\n\nexport function screenY(window) {\n  return function () {\n    return window.screenY;\n  };\n}\n\nexport function scroll(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scroll(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollBy(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scrollBy(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollX(window) {\n  return function () {\n    return window.scrollX;\n  };\n}\n\nexport function scrollY(window) {\n  return function () {\n    return window.scrollY;\n  };\n}\n\nexport function localStorage(window) {\n  return function () {\n    return window.localStorage;\n  };\n}\n\nexport function sessionStorage(window) {\n  return function () {\n    return window.sessionStorage;\n  };\n}\n\nexport function requestAnimationFrame(fn) {\n  return function(window) {\n    return function() {\n      return window.requestAnimationFrame(fn);\n    };\n  };\n}\n\nexport function cancelAnimationFrame(id) {\n  return function(window) {\n    return function() {\n      return window.cancelAnimationFrame(id);\n    };\n  };\n}\n\nexport function requestIdleCallback(opts) {\n  return function(fn) {\n    return function(window) {\n      return function() {\n        return window.requestIdleCallback(fn, opts);\n      };\n    };\n  };\n}\n\nexport function cancelIdleCallback(id) {\n  return function(window) {\n    return function() {\n      return window.cancelIdleCallback(id);\n    };\n  };\n}\n\nexport function parent(window) {\n  return function() {\n    return window.parent;\n  };\n}\n\nexport function _opener(window) {\n  return function() {\n    return window.opener;\n  };\n}\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Bolson_Control from \"../Bolson.Control/index.js\";\nimport * as Bolson_Core from \"../Bolson.Core/index.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Free from \"../Control.Monad.Free/index.js\";\nimport * as Control_Monad_ST_Class from \"../Control.Monad.ST.Class/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Deku_Control from \"../Deku.Control/index.js\";\nimport * as Deku_Interpret from \"../Deku.Interpret/index.js\";\nimport * as Deku_SSR from \"../Deku.SSR/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as FRP_Event_Class from \"../FRP.Event.Class/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar keepLatest = /* #__PURE__ */ FRP_Event_Class.keepLatest(FRP_Event.eventIsEvent);\nvar map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);\nvar resume = /* #__PURE__ */ Control_Monad_Free.resume(Deku_Interpret.functorEFunctionOfFFIDOMS);\nvar monoidEffect = /* #__PURE__ */ Effect.monoidEffect(Data_Monoid.monoidUnit);\nvar mempty = /* #__PURE__ */ Data_Monoid.mempty(/* #__PURE__ */ FRP_Event.monoidEvent(/* #__PURE__ */ Data_Monoid.monoidFn(monoidEffect)));\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);\nvar bind = /* #__PURE__ */ Control_Bind.bind(Effect.bindEffect);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Effect.functorEffect);\nvar liftST = /* #__PURE__ */ Control_Monad_ST_Class.liftST(Control_Monad_ST_Class.monadSTEffect);\nvar mempty1 = /* #__PURE__ */ Data_Monoid.mempty(/* #__PURE__ */ Effect.monoidEffect(monoidEffect));\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Effect.functorEffect);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar eq = /* #__PURE__ */ Data_Eq.eq(Bolson_Core.eqScope);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar alt = /* #__PURE__ */ Control_Alt.alt(FRP_Event.altEvent);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar pure2 = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar map2 = /* #__PURE__ */ Data_Functor.map(Control_Monad_ST_Internal.functorST);\nvar void1 = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar flattenToSingleEvent = function (ffi) {\n    var go$prime = function (n) {\n        var $52 = map(go(n));\n        return function ($53) {\n            return keepLatest($52($53));\n        };\n    };\n    var go = function (n) {\n        return function ($54) {\n            return (function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return keepLatest(map(f(n))(v.value0));\n                };\n                if (v instanceof Data_Either.Right) {\n                    return mempty;\n                };\n                throw new Error(\"Failed pattern match at Deku.Toplevel (line 47, column 21 - line 49, column 22): \" + [ v.constructor.name ]);\n            })(resume($54));\n        };\n    };\n    var f = function (n) {\n        return function (i) {\n            return go$prime(n + 1 | 0)(FRP_Event.makeEvent(function (k) {\n                return function __do() {\n                    Data_Unit.unit;\n                    bind(i(ffi))(k)();\n                    return pure(Data_Unit.unit);\n                };\n            }));\n        };\n    };\n    return go$prime(0);\n};\nvar runInElement$prime = function (elt) {\n    return function (eee) {\n        return function __do() {\n            var ffi = Deku_Interpret.makeFFIDOMSnapshot();\n            var evt = mapFlipped(liftST(Control_Monad_ST_Internal[\"new\"](0)))((function () {\n                var $55 = Deku_Control.deku(elt)(eee);\n                return function ($56) {\n                    return $55(Deku_Interpret.fullDOMInterpret($56));\n                };\n            })())();\n            return FRP_Event.subscribe(flattenToSingleEvent(ffi)(evt))(function (i) {\n                return i(ffi);\n            })();\n        };\n    };\n};\nvar runInBody$prime = function (eee) {\n    return function __do() {\n        var b$prime = bind(bind(Web_HTML.window)(Web_HTML_Window.document))(Web_HTML_HTMLDocument.body)();\n        return Data_Maybe.maybe(mempty1)(function (elt) {\n            return runInElement$prime(elt)(eee);\n        })(map1(Web_HTML_HTMLElement.toElement)(b$prime))();\n    };\n};\nvar runInBody = function (a) {\n    return $$void(runInBody$prime(a));\n};\nvar __internalDekuFlatten = function (a) {\n    return function (b) {\n        return function (c) {\n            return Bolson_Control.flatten({\n                doLogic: function (pos) {\n                    return function (v) {\n                        return function (id) {\n                            return v.sendToPos({\n                                id: id,\n                                pos: pos\n                            });\n                        };\n                    };\n                },\n                ids: function ($57) {\n                    return (function (v) {\n                        return v.ids;\n                    })(unwrap($57));\n                },\n                disconnectElement: function (v) {\n                    return function (v1) {\n                        return v.disconnectElement({\n                            id: v1.id,\n                            scope: v1.scope,\n                            parent: v1.parent,\n                            scopeEq: eq\n                        });\n                    };\n                },\n                toElt: function (v) {\n                    return v;\n                }\n            })(a)(b)(coerce(c));\n        };\n    };\n};\nvar hydrate$prime = function (children) {\n    return function __do() {\n        var ffi = Deku_Interpret.makeFFIDOMSnapshot();\n        Deku_Interpret.getAllComments(ffi)();\n        var di = mapFlipped(liftST(Control_Monad_ST_Internal[\"new\"](0)))(Deku_Interpret.hydratingDOMInterpret)();\n        coerce(Deku_Interpret.setHydrating)(ffi)();\n        var root = $foreign.dekuRoot();\n        var u = FRP_Event.subscribe(flattenToSingleEvent(ffi)(alt(pure1((unwrap(di)).makeRoot({\n            id: \"deku-root\",\n            root: root\n        })))(__internalDekuFlatten({\n            parent: new Data_Maybe.Just(\"deku-root\"),\n            scope: new Bolson_Core.Local(\"rootScope\"),\n            raiseId: function (v) {\n                return pure2(Data_Unit.unit);\n            },\n            ez: true,\n            pos: Data_Maybe.Nothing.value,\n            dynFamily: Data_Maybe.Nothing.value\n        })(di)(children))))(function (i) {\n            return i(ffi);\n        })();\n        coerce(Deku_Interpret.unSetHydrating)(ffi)();\n        return u;\n    };\n};\nvar hydrate = function (a) {\n    return $$void(hydrate$prime(a));\n};\nvar runSSR$prime = function (topTag) {\n    var go = function (v) {\n        return map2(Deku_SSR[\"ssr$prime\"](topTag))(function __do() {\n            var seed = Control_Monad_ST_Internal[\"new\"](0)();\n            var instr = Control_Monad_ST_Internal[\"new\"]([  ])();\n            var di = Deku_Interpret.ssrDOMInterpret(seed);\n            void1(FRP_Event.subscribePure(__internalDekuFlatten({\n                parent: new Data_Maybe.Just(\"deku-root\"),\n                scope: new Bolson_Core.Local(\"rootScope\"),\n                raiseId: function (v1) {\n                    return pure2(Data_Unit.unit);\n                },\n                ez: true,\n                pos: Data_Maybe.Nothing.value,\n                dynFamily: Data_Maybe.Nothing.value\n            })(di)(v))(function (i) {\n                return i(instr);\n            }))();\n            return Control_Monad_ST_Internal.read(instr)();\n        });\n    };\n    return go;\n};\nvar runSSR = /* #__PURE__ */ runSSR$prime(\"body\");\nexport {\n    dekuRoot\n} from \"./foreign.js\";\nexport {\n    flattenToSingleEvent,\n    runInElement$prime,\n    runInBody$prime,\n    runInBody,\n    hydrate$prime,\n    hydrate,\n    runSSR,\n    runSSR$prime,\n    __internalDekuFlatten\n};\n", "// Generated by purs version 0.15.10\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nvar Class = /* #__PURE__ */ (function () {\n    function Class() {\n\n    };\n    Class.value = new Class();\n    return Class;\n})();\nvar attrXdata_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrWbr_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrVideo_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrVar_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrUse_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrUl_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrU_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTt_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTspan_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTrack_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTr_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTitle_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTime_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrThead_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTh_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTfoot_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTextarea_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrText_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTextPath_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTemplate_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTd_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTbody_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTable_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSymbol_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSwitch_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSvg_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSup_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSummary_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSub_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStyle_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStrong_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStrike_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStop_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSpan_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSource_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSmall_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSet_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSelect_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSection_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrScript_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSamp_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrS_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRuby_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRt_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRp_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRect_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRadialGradient_ClassS = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrQ_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrProgress_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPre_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPolyline_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPolygon_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPicture_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPattern_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPath_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrParam_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrP_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOutput_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOption_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOptgroup_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOl_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrObject_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrNoscript_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrNoframes_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrNav_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMeter_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMeta_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMask_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMarker_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMark_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMap_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMain_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLink_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLinearGradient_ClassS = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLine_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLi_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLegend_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLabel_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrKbd_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrIns_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrInput_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrImg_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrImage_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrIframe_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrI_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHtml_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHr_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHeader_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHead_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH6_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH5_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH4_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH3_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH2_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH1_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrG_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFrameset_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFrame_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrForm_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrForeignObject_ClassSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFooter_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFont_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFilter_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFigure_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFigcaption_ClassStrin = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFieldset_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeTurbulence_ClassStr = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeTile_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeSpecularLighting_Cl = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeOffset_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeMorphology_ClassStr = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeMerge_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeImage_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeGaussianBlur_ClassS = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeFlood_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeDropShadow_ClassStr = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeDisplacementMap_Cla = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeDiffuseLighting_Cla = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeConvolveMatrix_Clas = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeComposite_ClassStri = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeComponentTransfer_C = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeColorMatrix_ClassSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeBlend_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrEmbed_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrEm_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrEllipse_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDt_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDl_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDiv_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDir_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDialog_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDfn_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDetails_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDesc_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDel_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDefs_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDd_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDatalist_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrColgroup_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCol_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCode_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrClipPath_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrClassUnit = {\n    attr: function (v) {\n        return function (v1) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"unset$prime\"]\n            });\n        };\n    }\n};\nvar attrCite_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCircle_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCenter_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCaption_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCanvas_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrButton_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBr_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBody_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBlockquote_ClassStrin = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBig_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBdo_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBdi_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBasefont_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBase_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrB_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAudio_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAside_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrArticle_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrArea_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrApplet_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAnimate_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAnimateMotion_ClassSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAddress_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAcronym_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAbbr_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrA_ClassString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"class\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nexport {\n    Class,\n    attrA_ClassString,\n    attrAbbr_ClassString,\n    attrAcronym_ClassString,\n    attrAddress_ClassString,\n    attrApplet_ClassString,\n    attrArea_ClassString,\n    attrArticle_ClassString,\n    attrAside_ClassString,\n    attrAudio_ClassString,\n    attrB_ClassString,\n    attrBase_ClassString,\n    attrBasefont_ClassString,\n    attrBdi_ClassString,\n    attrBdo_ClassString,\n    attrBig_ClassString,\n    attrBlockquote_ClassStrin,\n    attrBody_ClassString,\n    attrBr_ClassString,\n    attrButton_ClassString,\n    attrCanvas_ClassString,\n    attrCaption_ClassString,\n    attrCenter_ClassString,\n    attrCite_ClassString,\n    attrCode_ClassString,\n    attrCol_ClassString,\n    attrColgroup_ClassString,\n    attrXdata_ClassString,\n    attrDatalist_ClassString,\n    attrDd_ClassString,\n    attrDel_ClassString,\n    attrDetails_ClassString,\n    attrDfn_ClassString,\n    attrDialog_ClassString,\n    attrDir_ClassString,\n    attrDiv_ClassString,\n    attrDl_ClassString,\n    attrDt_ClassString,\n    attrEm_ClassString,\n    attrEmbed_ClassString,\n    attrFieldset_ClassString,\n    attrFigcaption_ClassStrin,\n    attrFigure_ClassString,\n    attrFont_ClassString,\n    attrFooter_ClassString,\n    attrForm_ClassString,\n    attrFrame_ClassString,\n    attrFrameset_ClassString,\n    attrH1_ClassString,\n    attrH2_ClassString,\n    attrH3_ClassString,\n    attrH4_ClassString,\n    attrH5_ClassString,\n    attrH6_ClassString,\n    attrHead_ClassString,\n    attrHeader_ClassString,\n    attrHr_ClassString,\n    attrHtml_ClassString,\n    attrI_ClassString,\n    attrIframe_ClassString,\n    attrImg_ClassString,\n    attrInput_ClassString,\n    attrIns_ClassString,\n    attrKbd_ClassString,\n    attrLabel_ClassString,\n    attrLegend_ClassString,\n    attrLi_ClassString,\n    attrLink_ClassString,\n    attrMain_ClassString,\n    attrMap_ClassString,\n    attrMark_ClassString,\n    attrMeta_ClassString,\n    attrMeter_ClassString,\n    attrNav_ClassString,\n    attrNoframes_ClassString,\n    attrNoscript_ClassString,\n    attrObject_ClassString,\n    attrOl_ClassString,\n    attrOptgroup_ClassString,\n    attrOption_ClassString,\n    attrOutput_ClassString,\n    attrP_ClassString,\n    attrParam_ClassString,\n    attrPicture_ClassString,\n    attrPre_ClassString,\n    attrProgress_ClassString,\n    attrQ_ClassString,\n    attrRp_ClassString,\n    attrRt_ClassString,\n    attrRuby_ClassString,\n    attrS_ClassString,\n    attrSamp_ClassString,\n    attrScript_ClassString,\n    attrSection_ClassString,\n    attrSelect_ClassString,\n    attrSmall_ClassString,\n    attrSource_ClassString,\n    attrSpan_ClassString,\n    attrStrike_ClassString,\n    attrStrong_ClassString,\n    attrStyle_ClassString,\n    attrSub_ClassString,\n    attrSummary_ClassString,\n    attrSup_ClassString,\n    attrSvg_ClassString,\n    attrTable_ClassString,\n    attrTbody_ClassString,\n    attrTd_ClassString,\n    attrTemplate_ClassString,\n    attrTextarea_ClassString,\n    attrTfoot_ClassString,\n    attrTh_ClassString,\n    attrThead_ClassString,\n    attrTime_ClassString,\n    attrTitle_ClassString,\n    attrTr_ClassString,\n    attrTrack_ClassString,\n    attrTt_ClassString,\n    attrU_ClassString,\n    attrUl_ClassString,\n    attrVar_ClassString,\n    attrVideo_ClassString,\n    attrWbr_ClassString,\n    attrAnimate_ClassString,\n    attrAnimateMotion_ClassSt,\n    attrCircle_ClassString,\n    attrClipPath_ClassString,\n    attrDefs_ClassString,\n    attrDesc_ClassString,\n    attrEllipse_ClassString,\n    attrFeBlend_ClassString,\n    attrFeColorMatrix_ClassSt,\n    attrFeComponentTransfer_C,\n    attrFeComposite_ClassStri,\n    attrFeConvolveMatrix_Clas,\n    attrFeDiffuseLighting_Cla,\n    attrFeDisplacementMap_Cla,\n    attrFeDropShadow_ClassStr,\n    attrFeFlood_ClassString,\n    attrFeGaussianBlur_ClassS,\n    attrFeImage_ClassString,\n    attrFeMerge_ClassString,\n    attrFeMorphology_ClassStr,\n    attrFeOffset_ClassString,\n    attrFeSpecularLighting_Cl,\n    attrFeTile_ClassString,\n    attrFeTurbulence_ClassStr,\n    attrFilter_ClassString,\n    attrForeignObject_ClassSt,\n    attrG_ClassString,\n    attrImage_ClassString,\n    attrLine_ClassString,\n    attrLinearGradient_ClassS,\n    attrMarker_ClassString,\n    attrMask_ClassString,\n    attrPath_ClassString,\n    attrPattern_ClassString,\n    attrPolygon_ClassString,\n    attrPolyline_ClassString,\n    attrRadialGradient_ClassS,\n    attrRect_ClassString,\n    attrSet_ClassString,\n    attrStop_ClassString,\n    attrSwitch_ClassString,\n    attrSymbol_ClassString,\n    attrText_ClassString,\n    attrTextPath_ClassString,\n    attrTspan_ClassString,\n    attrUse_ClassString,\n    attrClassUnit\n};\n", "// Generated by purs version 0.15.10\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nvar Href = /* #__PURE__ */ (function () {\n    function Href() {\n\n    };\n    Href.value = new Href();\n    return Href;\n})();\nvar attrUse_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTextPath_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRadialGradient_HrefSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPattern_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLink_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLinearGradient_HrefSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrImage_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHrefUnit = {\n    attr: function (v) {\n        return function (v1) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"unset$prime\"]\n            });\n        };\n    }\n};\nvar attrBase_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrArea_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrA_HrefString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"href\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nexport {\n    Href,\n    attrA_HrefString,\n    attrArea_HrefString,\n    attrBase_HrefString,\n    attrLink_HrefString,\n    attrImage_HrefString,\n    attrLinearGradient_HrefSt,\n    attrPattern_HrefString,\n    attrRadialGradient_HrefSt,\n    attrTextPath_HrefString,\n    attrUse_HrefString,\n    attrHrefUnit\n};\n", "// Generated by purs version 0.15.10\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nvar Style = /* #__PURE__ */ (function () {\n    function Style() {\n\n    };\n    Style.value = new Style();\n    return Style;\n})();\nvar attrXdata_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrWbr_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrVideo_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrVar_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrUse_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrUl_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrU_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTt_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTspan_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTrack_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTr_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTitle_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTime_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrThead_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTh_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTfoot_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTextarea_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrText_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTextPath_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTemplate_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTd_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTbody_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTable_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSymbol_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSwitch_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSvg_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSup_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSummary_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSub_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStyle_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStyleUnit = {\n    attr: function (v) {\n        return function (v1) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"unset$prime\"]\n            });\n        };\n    }\n};\nvar attrStrong_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStrike_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrStop_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSpan_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSource_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSmall_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSet_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSelect_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSection_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrScript_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSamp_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrS_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRuby_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRt_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRp_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRect_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrRadialGradient_StyleS = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrQ_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrProgress_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPre_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPolyline_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPolygon_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPicture_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPattern_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrPath_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrParam_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrP_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOutput_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOption_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOptgroup_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrOl_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrObject_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrNoscript_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrNoframes_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrNav_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMeter_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMeta_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMask_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMarker_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMark_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMap_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrMain_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLink_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLinearGradient_StyleS = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLine_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLi_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLegend_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrLabel_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrKbd_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrIns_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrInput_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrImg_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrImage_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrIframe_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrI_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHtml_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHr_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHeader_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrHead_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH6_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH5_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH4_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH3_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH2_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrH1_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrG_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFrameset_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFrame_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrForm_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrForeignObject_StyleSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFooter_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFont_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFilter_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFigure_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFigcaption_StyleStrin = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFieldset_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeTurbulence_StyleStr = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeTile_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeSpecularLighting_St = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeOffset_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeMorphology_StyleStr = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeMerge_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeImage_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeGaussianBlur_StyleS = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeFlood_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeDropShadow_StyleStr = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeDisplacementMap_Sty = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeDiffuseLighting_Sty = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeConvolveMatrix_Styl = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeComposite_StyleStri = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeComponentTransfer_S = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeColorMatrix_StyleSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrFeBlend_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrEmbed_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrEm_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrEllipse_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDt_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDl_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDiv_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDir_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDialog_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDfn_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDetails_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDesc_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDel_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDefs_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDd_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrDatalist_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrColgroup_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCol_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCode_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrClipPath_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCite_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCircle_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCenter_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCaption_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrCanvas_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrButton_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBr_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBody_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBlockquote_StyleStrin = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBig_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBdo_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBdi_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBasefont_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrBase_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrB_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAudio_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAside_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrArticle_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrArea_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrApplet_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAnimate_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAnimateMotion_StyleSt = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAddress_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAcronym_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAbbr_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrA_StyleString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"style\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nexport {\n    Style,\n    attrA_StyleString,\n    attrAbbr_StyleString,\n    attrAcronym_StyleString,\n    attrAddress_StyleString,\n    attrApplet_StyleString,\n    attrArea_StyleString,\n    attrArticle_StyleString,\n    attrAside_StyleString,\n    attrAudio_StyleString,\n    attrB_StyleString,\n    attrBase_StyleString,\n    attrBasefont_StyleString,\n    attrBdi_StyleString,\n    attrBdo_StyleString,\n    attrBig_StyleString,\n    attrBlockquote_StyleStrin,\n    attrBody_StyleString,\n    attrBr_StyleString,\n    attrButton_StyleString,\n    attrCanvas_StyleString,\n    attrCaption_StyleString,\n    attrCenter_StyleString,\n    attrCite_StyleString,\n    attrCode_StyleString,\n    attrCol_StyleString,\n    attrColgroup_StyleString,\n    attrXdata_StyleString,\n    attrDatalist_StyleString,\n    attrDd_StyleString,\n    attrDel_StyleString,\n    attrDetails_StyleString,\n    attrDfn_StyleString,\n    attrDialog_StyleString,\n    attrDir_StyleString,\n    attrDiv_StyleString,\n    attrDl_StyleString,\n    attrDt_StyleString,\n    attrEm_StyleString,\n    attrEmbed_StyleString,\n    attrFieldset_StyleString,\n    attrFigcaption_StyleStrin,\n    attrFigure_StyleString,\n    attrFont_StyleString,\n    attrFooter_StyleString,\n    attrForm_StyleString,\n    attrFrame_StyleString,\n    attrFrameset_StyleString,\n    attrH1_StyleString,\n    attrH2_StyleString,\n    attrH3_StyleString,\n    attrH4_StyleString,\n    attrH5_StyleString,\n    attrH6_StyleString,\n    attrHead_StyleString,\n    attrHeader_StyleString,\n    attrHr_StyleString,\n    attrHtml_StyleString,\n    attrI_StyleString,\n    attrIframe_StyleString,\n    attrImg_StyleString,\n    attrInput_StyleString,\n    attrIns_StyleString,\n    attrKbd_StyleString,\n    attrLabel_StyleString,\n    attrLegend_StyleString,\n    attrLi_StyleString,\n    attrLink_StyleString,\n    attrMain_StyleString,\n    attrMap_StyleString,\n    attrMark_StyleString,\n    attrMeta_StyleString,\n    attrMeter_StyleString,\n    attrNav_StyleString,\n    attrNoframes_StyleString,\n    attrNoscript_StyleString,\n    attrObject_StyleString,\n    attrOl_StyleString,\n    attrOptgroup_StyleString,\n    attrOption_StyleString,\n    attrOutput_StyleString,\n    attrP_StyleString,\n    attrParam_StyleString,\n    attrPicture_StyleString,\n    attrPre_StyleString,\n    attrProgress_StyleString,\n    attrQ_StyleString,\n    attrRp_StyleString,\n    attrRt_StyleString,\n    attrRuby_StyleString,\n    attrS_StyleString,\n    attrSamp_StyleString,\n    attrScript_StyleString,\n    attrSection_StyleString,\n    attrSelect_StyleString,\n    attrSmall_StyleString,\n    attrSource_StyleString,\n    attrSpan_StyleString,\n    attrStrike_StyleString,\n    attrStrong_StyleString,\n    attrStyle_StyleString,\n    attrSub_StyleString,\n    attrSummary_StyleString,\n    attrSup_StyleString,\n    attrSvg_StyleString,\n    attrTable_StyleString,\n    attrTbody_StyleString,\n    attrTd_StyleString,\n    attrTemplate_StyleString,\n    attrTextarea_StyleString,\n    attrTfoot_StyleString,\n    attrTh_StyleString,\n    attrThead_StyleString,\n    attrTime_StyleString,\n    attrTitle_StyleString,\n    attrTr_StyleString,\n    attrTrack_StyleString,\n    attrTt_StyleString,\n    attrU_StyleString,\n    attrUl_StyleString,\n    attrVar_StyleString,\n    attrVideo_StyleString,\n    attrWbr_StyleString,\n    attrAnimate_StyleString,\n    attrAnimateMotion_StyleSt,\n    attrCircle_StyleString,\n    attrClipPath_StyleString,\n    attrDefs_StyleString,\n    attrDesc_StyleString,\n    attrEllipse_StyleString,\n    attrFeBlend_StyleString,\n    attrFeColorMatrix_StyleSt,\n    attrFeComponentTransfer_S,\n    attrFeComposite_StyleStri,\n    attrFeConvolveMatrix_Styl,\n    attrFeDiffuseLighting_Sty,\n    attrFeDisplacementMap_Sty,\n    attrFeDropShadow_StyleStr,\n    attrFeFlood_StyleString,\n    attrFeGaussianBlur_StyleS,\n    attrFeImage_StyleString,\n    attrFeMerge_StyleString,\n    attrFeMorphology_StyleStr,\n    attrFeOffset_StyleString,\n    attrFeSpecularLighting_St,\n    attrFeTile_StyleString,\n    attrFeTurbulence_StyleStr,\n    attrFilter_StyleString,\n    attrForeignObject_StyleSt,\n    attrG_StyleString,\n    attrImage_StyleString,\n    attrLine_StyleString,\n    attrLinearGradient_StyleS,\n    attrMarker_StyleString,\n    attrMask_StyleString,\n    attrPath_StyleString,\n    attrPattern_StyleString,\n    attrPolygon_StyleString,\n    attrPolyline_StyleString,\n    attrRadialGradient_StyleS,\n    attrRect_StyleString,\n    attrSet_StyleString,\n    attrStop_StyleString,\n    attrSwitch_StyleString,\n    attrSymbol_StyleString,\n    attrText_StyleString,\n    attrTextPath_StyleString,\n    attrTspan_StyleString,\n    attrUse_StyleString,\n    attrStyleUnit\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nimport * as Deku_DOM_Attr_Class from \"../Deku.DOM.Attr.Class/index.js\";\nimport * as Deku_DOM_Attr_Href from \"../Deku.DOM.Attr.Href/index.js\";\nimport * as Deku_DOM_Attr_Id from \"../Deku.DOM.Attr.Id/index.js\";\nimport * as Deku_DOM_Attr_Style from \"../Deku.DOM.Attr.Style/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(FRP_Event.functorEvent);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar style = function (dictAttr) {\n    var attr = Deku_Attribute.attr(dictAttr);\n    return function (e) {\n        return mapFlipped(e)(function (v) {\n            return attr(Deku_DOM_Attr_Style.Style.value)(v);\n        });\n    };\n};\nvar style_ = function (dictAttr) {\n    var $23 = style(dictAttr);\n    return function ($24) {\n        return $23(pure($24));\n    };\n};\nvar klass = function (dictAttr) {\n    var attr = Deku_Attribute.attr(dictAttr);\n    return function (e) {\n        return mapFlipped(e)(function (v) {\n            return attr(Deku_DOM_Attr_Class.Class.value)(v);\n        });\n    };\n};\nvar klass_ = function (dictAttr) {\n    var $25 = klass(dictAttr);\n    return function ($26) {\n        return $25(pure($26));\n    };\n};\nvar id = function (dictAttr) {\n    var attr = Deku_Attribute.attr(dictAttr);\n    return function (e) {\n        return mapFlipped(e)(function (v) {\n            return attr(Deku_DOM_Attr_Id.Id.value)(v);\n        });\n    };\n};\nvar id_ = function (dictAttr) {\n    var $27 = id(dictAttr);\n    return function ($28) {\n        return $27(pure($28));\n    };\n};\nvar href = function (dictAttr) {\n    var attr = Deku_Attribute.attr(dictAttr);\n    return function (e) {\n        return mapFlipped(e)(function (v) {\n            return attr(Deku_DOM_Attr_Href.Href.value)(v);\n        });\n    };\n};\nvar href_ = function (dictAttr) {\n    var $29 = href(dictAttr);\n    return function ($30) {\n        return $29(pure($30));\n    };\n};\nexport {\n    href,\n    href_,\n    id,\n    id_,\n    klass,\n    klass_,\n    style,\n    style_\n};\n", "// Generated by purs version 0.15.10\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nvar Src = /* #__PURE__ */ (function () {\n    function Src() {\n\n    };\n    Src.value = new Src();\n    return Src;\n})();\nvar attrVideo_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrTrack_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrSrcUnit = {\n    attr: function (v) {\n        return function (v1) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"unset$prime\"]\n            });\n        };\n    }\n};\nvar attrSource_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrScript_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrInput_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrImg_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrIframe_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrEmbed_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nvar attrAudio_SrcString = {\n    attr: function (v) {\n        return function (value) {\n            return Deku_Attribute.unsafeAttribute({\n                key: \"src\",\n                value: Deku_Attribute[\"prop$prime\"](value)\n            });\n        };\n    }\n};\nexport {\n    Src,\n    attrAudio_SrcString,\n    attrEmbed_SrcString,\n    attrIframe_SrcString,\n    attrImg_SrcString,\n    attrInput_SrcString,\n    attrScript_SrcString,\n    attrSource_SrcString,\n    attrTrack_SrcString,\n    attrVideo_SrcString,\n    attrSrcUnit\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Deku_Control from \"../Deku.Control/index.js\";\nvar button = /* #__PURE__ */ Deku_Control.elementify2(\"button\");\nvar button_ = /* #__PURE__ */ button(/* #__PURE__ */ Control_Plus.empty(Control_Plus.plusArray));\nvar button__ = function (t) {\n    return button_([ Deku_Control.text_(t) ]);\n};\nexport {\n    button,\n    button_,\n    button__\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Deku_Control from \"../Deku.Control/index.js\";\nvar div = /* #__PURE__ */ Deku_Control.elementify2(\"div\");\nvar div_ = /* #__PURE__ */ div(/* #__PURE__ */ Control_Plus.empty(Control_Plus.plusArray));\nvar div__ = function (t) {\n    return div_([ Deku_Control.text_(t) ]);\n};\nexport {\n    div,\n    div_,\n    div__\n};\n", "// Generated by purs version 0.15.10\nvar bind = function (f) {\n    return function (a) {\n        return f(a);\n    };\n};\nvar discard = bind;\nexport {\n    bind,\n    discard\n};\n", "/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */\n/* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */\nvar Aff = function () {\n  // A unique value for empty.\n  var EMPTY = {};\n\n  /*\n\n  An awkward approximation. We elide evidence we would otherwise need in PS for\n  efficiency sake.\n\n  data Aff eff a\n    = Pure a\n    | Throw Error\n    | Catch (Aff eff a) (Error -> Aff eff a)\n    | Sync (Eff eff a)\n    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))\n    | forall b. Bind (Aff eff b) (b -> Aff eff a)\n    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)\n    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)\n    | Sequential (ParAff aff a)\n\n  */\n  var PURE    = \"Pure\";\n  var THROW   = \"Throw\";\n  var CATCH   = \"Catch\";\n  var SYNC    = \"Sync\";\n  var ASYNC   = \"Async\";\n  var BIND    = \"Bind\";\n  var BRACKET = \"Bracket\";\n  var FORK    = \"Fork\";\n  var SEQ     = \"Sequential\";\n\n  /*\n\n  data ParAff eff a\n    = forall b. Map (b -> a) (ParAff eff b)\n    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)\n    | Alt (ParAff eff a) (ParAff eff a)\n    | ?Par (Aff eff a)\n\n  */\n  var MAP   = \"Map\";\n  var APPLY = \"Apply\";\n  var ALT   = \"Alt\";\n\n  // Various constructors used in interpretation\n  var CONS      = \"Cons\";      // Cons-list, for stacks\n  var RESUME    = \"Resume\";    // Continue indiscriminately\n  var RELEASE   = \"Release\";   // Continue with bracket finalizers\n  var FINALIZER = \"Finalizer\"; // A non-interruptible effect\n  var FINALIZED = \"Finalized\"; // Marker for finalization\n  var FORKED    = \"Forked\";    // Reference to a forked fiber, with resumption stack\n  var FIBER     = \"Fiber\";     // Actual fiber reference\n  var THUNK     = \"Thunk\";     // Primed effect, ready to invoke\n\n  function Aff(tag, _1, _2, _3) {\n    this.tag = tag;\n    this._1  = _1;\n    this._2  = _2;\n    this._3  = _3;\n  }\n\n  function AffCtr(tag) {\n    var fn = function (_1, _2, _3) {\n      return new Aff(tag, _1, _2, _3);\n    };\n    fn.tag = tag;\n    return fn;\n  }\n\n  function nonCanceler(error) {\n    return new Aff(PURE, void 0);\n  }\n\n  function runEff(eff) {\n    try {\n      eff();\n    } catch (error) {\n      setTimeout(function () {\n        throw error;\n      }, 0);\n    }\n  }\n\n  function runSync(left, right, eff) {\n    try {\n      return right(eff());\n    } catch (error) {\n      return left(error);\n    }\n  }\n\n  function runAsync(left, eff, k) {\n    try {\n      return eff(k)();\n    } catch (error) {\n      k(left(error))();\n      return nonCanceler;\n    }\n  }\n\n  var Scheduler = function () {\n    var limit    = 1024;\n    var size     = 0;\n    var ix       = 0;\n    var queue    = new Array(limit);\n    var draining = false;\n\n    function drain() {\n      var thunk;\n      draining = true;\n      while (size !== 0) {\n        size--;\n        thunk     = queue[ix];\n        queue[ix] = void 0;\n        ix        = (ix + 1) % limit;\n        thunk();\n      }\n      draining = false;\n    }\n\n    return {\n      isDraining: function () {\n        return draining;\n      },\n      enqueue: function (cb) {\n        var i, tmp;\n        if (size === limit) {\n          tmp = draining;\n          drain();\n          draining = tmp;\n        }\n\n        queue[(ix + size) % limit] = cb;\n        size++;\n\n        if (!draining) {\n          drain();\n        }\n      }\n    };\n  }();\n\n  function Supervisor(util) {\n    var fibers  = {};\n    var fiberId = 0;\n    var count   = 0;\n\n    return {\n      register: function (fiber) {\n        var fid = fiberId++;\n        fiber.onComplete({\n          rethrow: true,\n          handler: function (result) {\n            return function () {\n              count--;\n              delete fibers[fid];\n            };\n          }\n        })();\n        fibers[fid] = fiber;\n        count++;\n      },\n      isEmpty: function () {\n        return count === 0;\n      },\n      killAll: function (killError, cb) {\n        return function () {\n          if (count === 0) {\n            return cb();\n          }\n\n          var killCount = 0;\n          var kills     = {};\n\n          function kill(fid) {\n            kills[fid] = fibers[fid].kill(killError, function (result) {\n              return function () {\n                delete kills[fid];\n                killCount--;\n                if (util.isLeft(result) && util.fromLeft(result)) {\n                  setTimeout(function () {\n                    throw util.fromLeft(result);\n                  }, 0);\n                }\n                if (killCount === 0) {\n                  cb();\n                }\n              };\n            })();\n          }\n\n          for (var k in fibers) {\n            if (fibers.hasOwnProperty(k)) {\n              killCount++;\n              kill(k);\n            }\n          }\n\n          fibers  = {};\n          fiberId = 0;\n          count   = 0;\n\n          return function (error) {\n            return new Aff(SYNC, function () {\n              for (var k in kills) {\n                if (kills.hasOwnProperty(k)) {\n                  kills[k]();\n                }\n              }\n            });\n          };\n        };\n      }\n    };\n  }\n\n  // Fiber state machine\n  var SUSPENDED   = 0; // Suspended, pending a join.\n  var CONTINUE    = 1; // Interpret the next instruction.\n  var STEP_BIND   = 2; // Apply the next bind.\n  var STEP_RESULT = 3; // Handle potential failure from a result.\n  var PENDING     = 4; // An async effect is running.\n  var RETURN      = 5; // The current stack has returned.\n  var COMPLETED   = 6; // The entire fiber has completed.\n\n  function Fiber(util, supervisor, aff) {\n    // Monotonically increasing tick, increased on each asynchronous turn.\n    var runTick = 0;\n\n    // The current branch of the state machine.\n    var status = SUSPENDED;\n\n    // The current point of interest for the state machine branch.\n    var step      = aff;  // Successful step\n    var fail      = null; // Failure step\n    var interrupt = null; // Asynchronous interrupt\n\n    // Stack of continuations for the current fiber.\n    var bhead = null;\n    var btail = null;\n\n    // Stack of attempts and finalizers for error recovery. Every `Cons` is also\n    // tagged with current `interrupt` state. We use this to track which items\n    // should be ignored or evaluated as a result of a kill.\n    var attempts = null;\n\n    // A special state is needed for Bracket, because it cannot be killed. When\n    // we enter a bracket acquisition or finalizer, we increment the counter,\n    // and then decrement once complete.\n    var bracketCount = 0;\n\n    // Each join gets a new id so they can be revoked.\n    var joinId  = 0;\n    var joins   = null;\n    var rethrow = true;\n\n    // Each invocation of `run` requires a tick. When an asynchronous effect is\n    // resolved, we must check that the local tick coincides with the fiber\n    // tick before resuming. This prevents multiple async continuations from\n    // accidentally resuming the same fiber. A common example may be invoking\n    // the provided callback in `makeAff` more than once, but it may also be an\n    // async effect resuming after the fiber was already cancelled.\n    function run(localRunTick) {\n      var tmp, result, attempt;\n      while (true) {\n        tmp       = null;\n        result    = null;\n        attempt   = null;\n\n        switch (status) {\n        case STEP_BIND:\n          status = CONTINUE;\n          try {\n            step   = bhead(step);\n            if (btail === null) {\n              bhead = null;\n            } else {\n              bhead = btail._1;\n              btail = btail._2;\n            }\n          } catch (e) {\n            status = RETURN;\n            fail   = util.left(e);\n            step   = null;\n          }\n          break;\n\n        case STEP_RESULT:\n          if (util.isLeft(step)) {\n            status = RETURN;\n            fail   = step;\n            step   = null;\n          } else if (bhead === null) {\n            status = RETURN;\n          } else {\n            status = STEP_BIND;\n            step   = util.fromRight(step);\n          }\n          break;\n\n        case CONTINUE:\n          switch (step.tag) {\n          case BIND:\n            if (bhead) {\n              btail = new Aff(CONS, bhead, btail);\n            }\n            bhead  = step._2;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case PURE:\n            if (bhead === null) {\n              status = RETURN;\n              step   = util.right(step._1);\n            } else {\n              status = STEP_BIND;\n              step   = step._1;\n            }\n            break;\n\n          case SYNC:\n            status = STEP_RESULT;\n            step   = runSync(util.left, util.right, step._1);\n            break;\n\n          case ASYNC:\n            status = PENDING;\n            step   = runAsync(util.left, step._1, function (result) {\n              return function () {\n                if (runTick !== localRunTick) {\n                  return;\n                }\n                runTick++;\n                Scheduler.enqueue(function () {\n                  // It's possible to interrupt the fiber between enqueuing and\n                  // resuming, so we need to check that the runTick is still\n                  // valid.\n                  if (runTick !== localRunTick + 1) {\n                    return;\n                  }\n                  status = STEP_RESULT;\n                  step   = result;\n                  run(runTick);\n                });\n              };\n            });\n            return;\n\n          case THROW:\n            status = RETURN;\n            fail   = util.left(step._1);\n            step   = null;\n            break;\n\n          // Enqueue the Catch so that we can call the error handler later on\n          // in case of an exception.\n          case CATCH:\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead    = null;\n            btail    = null;\n            status   = CONTINUE;\n            step     = step._1;\n            break;\n\n          // Enqueue the Bracket so that we can call the appropriate handlers\n          // after resource acquisition.\n          case BRACKET:\n            bracketCount++;\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead  = null;\n            btail  = null;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case FORK:\n            status = STEP_RESULT;\n            tmp    = Fiber(util, supervisor, step._2);\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n            if (step._1) {\n              tmp.run();\n            }\n            step = util.right(tmp);\n            break;\n\n          case SEQ:\n            status = CONTINUE;\n            step   = sequential(util, supervisor, step._1);\n            break;\n          }\n          break;\n\n        case RETURN:\n          bhead = null;\n          btail = null;\n          // If the current stack has returned, and we have no other stacks to\n          // resume or finalizers to run, the fiber has halted and we can\n          // invoke all join callbacks. Otherwise we need to resume.\n          if (attempts === null) {\n            status = COMPLETED;\n            step   = interrupt || fail || step;\n          } else {\n            // The interrupt status for the enqueued item.\n            tmp      = attempts._3;\n            attempt  = attempts._1;\n            attempts = attempts._2;\n\n            switch (attempt.tag) {\n            // We cannot recover from an unmasked interrupt. Otherwise we should\n            // continue stepping, or run the exception handler if an exception\n            // was raised.\n            case CATCH:\n              // We should compare the interrupt status as well because we\n              // only want it to apply if there has been an interrupt since\n              // enqueuing the catch.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                status = RETURN;\n              } else if (fail) {\n                status = CONTINUE;\n                step   = attempt._2(util.fromLeft(fail));\n                fail   = null;\n              }\n              break;\n\n            // We cannot resume from an unmasked interrupt or exception.\n            case RESUME:\n              // As with Catch, we only want to ignore in the case of an\n              // interrupt since enqueing the item.\n              if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {\n                status = RETURN;\n              } else {\n                bhead  = attempt._1;\n                btail  = attempt._2;\n                status = STEP_BIND;\n                step   = util.fromRight(step);\n              }\n              break;\n\n            // If we have a bracket, we should enqueue the handlers,\n            // and continue with the success branch only if the fiber has\n            // not been interrupted. If the bracket acquisition failed, we\n            // should not run either.\n            case BRACKET:\n              bracketCount--;\n              if (fail === null) {\n                result   = util.fromRight(step);\n                // We need to enqueue the Release with the same interrupt\n                // status as the Bracket that is initiating it.\n                attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);\n                // We should only coninue as long as the interrupt status has not changed or\n                // we are currently within a non-interruptable finalizer.\n                if (interrupt === tmp || bracketCount > 0) {\n                  status = CONTINUE;\n                  step   = attempt._3(result);\n                }\n              }\n              break;\n\n            // Enqueue the appropriate handler. We increase the bracket count\n            // because it should not be cancelled.\n            case RELEASE:\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              // It has only been killed if the interrupt status has changed\n              // since we enqueued the item, and the bracket count is 0. If the\n              // bracket count is non-zero then we are in a masked state so it's\n              // impossible to be killed.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);\n              } else if (fail) {\n                step = attempt._1.failed(util.fromLeft(fail))(attempt._2);\n              } else {\n                step = attempt._1.completed(util.fromRight(step))(attempt._2);\n              }\n              fail = null;\n              bracketCount++;\n              break;\n\n            case FINALIZER:\n              bracketCount++;\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              step     = attempt._1;\n              break;\n\n            case FINALIZED:\n              bracketCount--;\n              status = RETURN;\n              step   = attempt._1;\n              fail   = attempt._2;\n              break;\n            }\n          }\n          break;\n\n        case COMPLETED:\n          for (var k in joins) {\n            if (joins.hasOwnProperty(k)) {\n              rethrow = rethrow && joins[k].rethrow;\n              runEff(joins[k].handler(step));\n            }\n          }\n          joins = null;\n          // If we have an interrupt and a fail, then the thread threw while\n          // running finalizers. This should always rethrow in a fresh stack.\n          if (interrupt && fail) {\n            setTimeout(function () {\n              throw util.fromLeft(fail);\n            }, 0);\n          // If we have an unhandled exception, and no other fiber has joined\n          // then we need to throw the exception in a fresh stack.\n          } else if (util.isLeft(step) && rethrow) {\n            setTimeout(function () {\n              // Guard on reathrow because a completely synchronous fiber can\n              // still have an observer which was added after-the-fact.\n              if (rethrow) {\n                throw util.fromLeft(step);\n              }\n            }, 0);\n          }\n          return;\n        case SUSPENDED:\n          status = CONTINUE;\n          break;\n        case PENDING: return;\n        }\n      }\n    }\n\n    function onComplete(join) {\n      return function () {\n        if (status === COMPLETED) {\n          rethrow = rethrow && join.rethrow;\n          join.handler(step)();\n          return function () {};\n        }\n\n        var jid    = joinId++;\n        joins      = joins || {};\n        joins[jid] = join;\n\n        return function() {\n          if (joins !== null) {\n            delete joins[jid];\n          }\n        };\n      };\n    }\n\n    function kill(error, cb) {\n      return function () {\n        if (status === COMPLETED) {\n          cb(util.right(void 0))();\n          return function () {};\n        }\n\n        var canceler = onComplete({\n          rethrow: false,\n          handler: function (/* unused */) {\n            return cb(util.right(void 0));\n          }\n        })();\n\n        switch (status) {\n        case SUSPENDED:\n          interrupt = util.left(error);\n          status    = COMPLETED;\n          step      = interrupt;\n          run(runTick);\n          break;\n        case PENDING:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            if (status === PENDING) {\n              attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);\n            }\n            status   = RETURN;\n            step     = null;\n            fail     = null;\n            run(++runTick);\n          }\n          break;\n        default:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            status = RETURN;\n            step   = null;\n            fail   = null;\n          }\n        }\n\n        return canceler;\n      };\n    }\n\n    function join(cb) {\n      return function () {\n        var canceler = onComplete({\n          rethrow: false,\n          handler: cb\n        })();\n        if (status === SUSPENDED) {\n          run(runTick);\n        }\n        return canceler;\n      };\n    }\n\n    return {\n      kill: kill,\n      join: join,\n      onComplete: onComplete,\n      isSuspended: function () {\n        return status === SUSPENDED;\n      },\n      run: function () {\n        if (status === SUSPENDED) {\n          if (!Scheduler.isDraining()) {\n            Scheduler.enqueue(function () {\n              run(runTick);\n            });\n          } else {\n            run(runTick);\n          }\n        }\n      }\n    };\n  }\n\n  function runPar(util, supervisor, par, cb) {\n    // Table of all forked fibers.\n    var fiberId   = 0;\n    var fibers    = {};\n\n    // Table of currently running cancelers, as a product of `Alt` behavior.\n    var killId    = 0;\n    var kills     = {};\n\n    // Error used for early cancelation on Alt branches.\n    var early     = new Error(\"[ParAff] Early exit\");\n\n    // Error used to kill the entire tree.\n    var interrupt = null;\n\n    // The root pointer of the tree.\n    var root      = EMPTY;\n\n    // Walks a tree, invoking all the cancelers. Returns the table of pending\n    // cancellation fibers.\n    function kill(error, par, cb) {\n      var step  = par;\n      var head  = null;\n      var tail  = null;\n      var count = 0;\n      var kills = {};\n      var tmp, kid;\n\n      loop: while (true) {\n        tmp = null;\n\n        switch (step.tag) {\n        case FORKED:\n          if (step._3 === EMPTY) {\n            tmp = fibers[step._1];\n            kills[count++] = tmp.kill(error, function (result) {\n              return function () {\n                count--;\n                if (count === 0) {\n                  cb(result)();\n                }\n              };\n            });\n          }\n          // Terminal case.\n          if (head === null) {\n            break loop;\n          }\n          // Go down the right side of the tree.\n          step = head._2;\n          if (tail === null) {\n            head = null;\n          } else {\n            head = tail._1;\n            tail = tail._2;\n          }\n          break;\n        case MAP:\n          step = step._2;\n          break;\n        case APPLY:\n        case ALT:\n          if (head) {\n            tail = new Aff(CONS, head, tail);\n          }\n          head = step;\n          step = step._1;\n          break;\n        }\n      }\n\n      if (count === 0) {\n        cb(util.right(void 0))();\n      } else {\n        // Run the cancelation effects. We alias `count` because it's mutable.\n        kid = 0;\n        tmp = count;\n        for (; kid < tmp; kid++) {\n          kills[kid] = kills[kid]();\n        }\n      }\n\n      return kills;\n    }\n\n    // When a fiber resolves, we need to bubble back up the tree with the\n    // result, computing the applicative nodes.\n    function join(result, head, tail) {\n      var fail, step, lhs, rhs, tmp, kid;\n\n      if (util.isLeft(result)) {\n        fail = result;\n        step = null;\n      } else {\n        step = result;\n        fail = null;\n      }\n\n      loop: while (true) {\n        lhs = null;\n        rhs = null;\n        tmp = null;\n        kid = null;\n\n        // We should never continue if the entire tree has been interrupted.\n        if (interrupt !== null) {\n          return;\n        }\n\n        // We've made it all the way to the root of the tree, which means\n        // the tree has fully evaluated.\n        if (head === null) {\n          cb(fail || step)();\n          return;\n        }\n\n        // The tree has already been computed, so we shouldn't try to do it\n        // again. This should never happen.\n        // TODO: Remove this?\n        if (head._3 !== EMPTY) {\n          return;\n        }\n\n        switch (head.tag) {\n        case MAP:\n          if (fail === null) {\n            head._3 = util.right(head._1(util.fromRight(step)));\n            step    = head._3;\n          } else {\n            head._3 = fail;\n          }\n          break;\n        case APPLY:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // If we have a failure we should kill the other side because we\n          // can't possible yield a result anymore.\n          if (fail) {\n            head._3 = fail;\n            tmp     = true;\n            kid     = killId++;\n\n            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(fail, null, null);\n                } else {\n                  join(fail, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          } else if (lhs === EMPTY || rhs === EMPTY) {\n            // We can only proceed if both sides have resolved.\n            return;\n          } else {\n            step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));\n            head._3 = step;\n          }\n          break;\n        case ALT:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // We can only proceed if both have resolved or we have a success\n          if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {\n            return;\n          }\n          // If both sides resolve with an error, we should continue with the\n          // first error\n          if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {\n            fail    = step === lhs ? rhs : lhs;\n            step    = null;\n            head._3 = fail;\n          } else {\n            head._3 = step;\n            tmp     = true;\n            kid     = killId++;\n            // Once a side has resolved, we need to cancel the side that is still\n            // pending before we can continue.\n            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(step, null, null);\n                } else {\n                  join(step, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          }\n          break;\n        }\n\n        if (tail === null) {\n          head = null;\n        } else {\n          head = tail._1;\n          tail = tail._2;\n        }\n      }\n    }\n\n    function resolve(fiber) {\n      return function (result) {\n        return function () {\n          delete fibers[fiber._1];\n          fiber._3 = result;\n          join(result, fiber._2._1, fiber._2._2);\n        };\n      };\n    }\n\n    // Walks the applicative tree, substituting non-applicative nodes with\n    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot\n    // as a mutable slot for memoization. In an unresolved state, the `_3`\n    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk\n    // the left side first, because both operations are left-associative. As\n    // we `RETURN` from those branches, we then walk the right side.\n    function run() {\n      var status = CONTINUE;\n      var step   = par;\n      var head   = null;\n      var tail   = null;\n      var tmp, fid;\n\n      loop: while (true) {\n        tmp = null;\n        fid = null;\n\n        switch (status) {\n        case CONTINUE:\n          switch (step.tag) {\n          case MAP:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(MAP, step._1, EMPTY, EMPTY);\n            step = step._2;\n            break;\n          case APPLY:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(APPLY, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          case ALT:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(ALT, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          default:\n            // When we hit a leaf value, we suspend the stack in the `FORKED`.\n            // When the fiber resolves, it can bubble back up the tree.\n            fid    = fiberId++;\n            status = RETURN;\n            tmp    = step;\n            step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);\n            tmp    = Fiber(util, supervisor, tmp);\n            tmp.onComplete({\n              rethrow: false,\n              handler: resolve(step)\n            })();\n            fibers[fid] = tmp;\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n          }\n          break;\n        case RETURN:\n          // Terminal case, we are back at the root.\n          if (head === null) {\n            break loop;\n          }\n          // If we are done with the right side, we need to continue down the\n          // left. Otherwise we should continue up the stack.\n          if (head._1 === EMPTY) {\n            head._1 = step;\n            status  = CONTINUE;\n            step    = head._2;\n            head._2 = EMPTY;\n          } else {\n            head._2 = step;\n            step    = head;\n            if (tail === null) {\n              head  = null;\n            } else {\n              head  = tail._1;\n              tail  = tail._2;\n            }\n          }\n        }\n      }\n\n      // Keep a reference to the tree root so it can be cancelled.\n      root = step;\n\n      for (fid = 0; fid < fiberId; fid++) {\n        fibers[fid].run();\n      }\n    }\n\n    // Cancels the entire tree. If there are already subtrees being canceled,\n    // we need to first cancel those joins. We will then add fresh joins for\n    // all pending branches including those that were in the process of being\n    // canceled.\n    function cancel(error, cb) {\n      interrupt = util.left(error);\n      var innerKills;\n      for (var kid in kills) {\n        if (kills.hasOwnProperty(kid)) {\n          innerKills = kills[kid];\n          for (kid in innerKills) {\n            if (innerKills.hasOwnProperty(kid)) {\n              innerKills[kid]();\n            }\n          }\n        }\n      }\n\n      kills = null;\n      var newKills = kill(error, root, cb);\n\n      return function (killError) {\n        return new Aff(ASYNC, function (killCb) {\n          return function () {\n            for (var kid in newKills) {\n              if (newKills.hasOwnProperty(kid)) {\n                newKills[kid]();\n              }\n            }\n            return nonCanceler;\n          };\n        });\n      };\n    }\n\n    run();\n\n    return function (killError) {\n      return new Aff(ASYNC, function (killCb) {\n        return function () {\n          return cancel(killError, killCb);\n        };\n      });\n    };\n  }\n\n  function sequential(util, supervisor, par) {\n    return new Aff(ASYNC, function (cb) {\n      return function () {\n        return runPar(util, supervisor, par, cb);\n      };\n    });\n  }\n\n  Aff.EMPTY       = EMPTY;\n  Aff.Pure        = AffCtr(PURE);\n  Aff.Throw       = AffCtr(THROW);\n  Aff.Catch       = AffCtr(CATCH);\n  Aff.Sync        = AffCtr(SYNC);\n  Aff.Async       = AffCtr(ASYNC);\n  Aff.Bind        = AffCtr(BIND);\n  Aff.Bracket     = AffCtr(BRACKET);\n  Aff.Fork        = AffCtr(FORK);\n  Aff.Seq         = AffCtr(SEQ);\n  Aff.ParMap      = AffCtr(MAP);\n  Aff.ParApply    = AffCtr(APPLY);\n  Aff.ParAlt      = AffCtr(ALT);\n  Aff.Fiber       = Fiber;\n  Aff.Supervisor  = Supervisor;\n  Aff.Scheduler   = Scheduler;\n  Aff.nonCanceler = nonCanceler;\n\n  return Aff;\n}();\n\nexport const _pure = Aff.Pure;\nexport const _throwError = Aff.Throw;\n\nexport function _catchError(aff) {\n  return function (k) {\n    return Aff.Catch(aff, k);\n  };\n}\n\nexport function _map(f) {\n  return function (aff) {\n    if (aff.tag === Aff.Pure.tag) {\n      return Aff.Pure(f(aff._1));\n    } else {\n      return Aff.Bind(aff, function (value) {\n        return Aff.Pure(f(value));\n      });\n    }\n  };\n}\n\nexport function _bind(aff) {\n  return function (k) {\n    return Aff.Bind(aff, k);\n  };\n}\n\nexport function _fork(immediate) {\n  return function (aff) {\n    return Aff.Fork(immediate, aff);\n  };\n}\n\nexport const _liftEffect = Aff.Sync;\n\nexport function _parAffMap(f) {\n  return function (aff) {\n    return Aff.ParMap(f, aff);\n  };\n}\n\nexport function _parAffApply(aff1) {\n  return function (aff2) {\n    return Aff.ParApply(aff1, aff2);\n  };\n}\n\nexport function _parAffAlt(aff1) {\n  return function (aff2) {\n    return Aff.ParAlt(aff1, aff2);\n  };\n}\n\nexport const makeAff = Aff.Async;\n\nexport function generalBracket(acquire) {\n  return function (options) {\n    return function (k) {\n      return Aff.Bracket(acquire, options, k);\n    };\n  };\n}\n\nexport function _makeFiber(util, aff) {\n  return function () {\n    return Aff.Fiber(util, null, aff);\n  };\n}\n\nexport function _makeSupervisedFiber(util, aff) {\n  return function () {\n    var supervisor = Aff.Supervisor(util);\n    return {\n      fiber: Aff.Fiber(util, supervisor, aff),\n      supervisor: supervisor\n    };\n  };\n}\n\nexport function _killAll(error, supervisor, cb) {\n  return supervisor.killAll(error, cb);\n}\n\nexport const _delay = function () {\n  function setDelay(n, k) {\n    if (n === 0 && typeof setImmediate !== \"undefined\") {\n      return setImmediate(k);\n    } else {\n      return setTimeout(k, n);\n    }\n  }\n\n  function clearDelay(n, t) {\n    if (n === 0 && typeof clearImmediate !== \"undefined\") {\n      return clearImmediate(t);\n    } else {\n      return clearTimeout(t);\n    }\n  }\n\n  return function (right, ms) {\n    return Aff.Async(function (cb) {\n      return function () {\n        var timer = setDelay(ms, cb(right()));\n        return function () {\n          return Aff.Sync(function () {\n            return right(clearDelay(ms, timer));\n          });\n        };\n      };\n    });\n  };\n}();\n\nexport const _sequential = Aff.Seq;\n", "// Generated by purs version 0.15.10\nimport * as Bolson_Core from \"../Bolson.Core/index.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_ST_Class from \"../Control.Monad.ST.Class/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Deku_Core from \"../Deku.Core/index.js\";\nimport * as Deku_Do from \"../Deku.Do/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Aff from \"../Effect.Aff/index.js\";\nimport * as Effect_Exception from \"../Effect.Exception/index.js\";\nimport * as Effect_Uncurried from \"../Effect.Uncurried/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as FRP_Event_Class from \"../FRP.Event.Class/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);\nvar liftST = /* #__PURE__ */ Control_Monad_ST_Class.liftST(Control_Monad_ST_Class.monadSTEffect);\nvar $$void = /* #__PURE__ */ Data_Functor[\"void\"](Control_Monad_ST_Internal.functorST);\nvar map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);\nvar alt = /* #__PURE__ */ Control_Alt.alt(FRP_Event.altEvent);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar for_ = /* #__PURE__ */ Data_Foldable.for_(Control_Monad_ST_Internal.applicativeST)(Data_Foldable.foldableMaybe);\nvar keepLatest = /* #__PURE__ */ FRP_Event_Class.keepLatest(FRP_Event.eventIsEvent);\nvar mapAccum = /* #__PURE__ */ FRP_Event_Class.mapAccum(FRP_Event.eventIsEvent);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Effect_Aff.applicativeFiber);\nvar discard3 = /* #__PURE__ */ discard(Effect_Aff.bindAff);\nvar bind2 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);\nvar map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);\nvar useState$prime = Deku_Core.bussedUncurried;\nvar useRef = function (a) {\n    return function (e) {\n        return function (f) {\n            var ee = FRP_Event.makeLemmingEvent(function (s) {\n                return function (k) {\n                    return function __do() {\n                        var r = Control_Monad_ST_Internal[\"new\"](a)();\n                        k(f(liftST(Control_Monad_ST_Internal.read(r))))();\n                        return s(e)(function (i) {\n                            return $$void(Control_Monad_ST_Internal.write(i)(r));\n                        })();\n                    };\n                };\n            });\n            var eee = map(function (v) {\n                return v;\n            })(ee);\n            var eeee = Bolson_Core.envy(map(function (v) {\n                return v;\n            })(eee));\n            return eeee;\n        };\n    };\n};\nvar useMemoized$prime = function (f0) {\n    return function (f1) {\n        var fx = function (v) {\n            var ee = FRP_Event.memoize(f0(v.value1))(function (c) {\n                return f1(new Data_Tuple.Tuple(v.value0, c));\n            });\n            var eee = map(function (v1) {\n                return v1;\n            })(ee);\n            var eeee = Bolson_Core.envy(map(function (v1) {\n                return v1;\n            })(eee));\n            return eeee;\n        };\n        return Deku_Core.bussedUncurried(fx);\n    };\n};\nvar useMemoized = function (e) {\n    return function (f1) {\n        var ee = FRP_Event.memoize(e)(f1);\n        var eee = map(function (v) {\n            return v;\n        })(ee);\n        var eeee = Bolson_Core.envy(map(function (v) {\n            return v;\n        })(eee));\n        return eeee;\n    };\n};\nvar useState = function (a) {\n    return function (f) {\n        return Deku_Do.bind(useState$prime)(function (v) {\n            return Deku_Do.bind(useMemoized(alt(v.value1)(pure(a))))(function (m) {\n                return f(new Data_Tuple.Tuple(v.value0, m));\n            });\n        });\n    };\n};\nvar useMailboxed = function (dictOrd) {\n    var mailboxed = FRP_Event.mailboxed(dictOrd);\n    return function (f) {\n        var fx = function (v) {\n            var ee = mailboxed(v.value1)(function (c) {\n                return f(new Data_Tuple.Tuple(v.value0, c));\n            });\n            var eee = map(function (v1) {\n                return v1;\n            })(ee);\n            var eeee = Bolson_Core.envy(map(function (v1) {\n                return v1;\n            })(eee));\n            return eeee;\n        };\n        return Deku_Core.bussedUncurried(fx);\n    };\n};\nvar useHot$prime = function (f) {\n    var ee = Bolson_Core.envy(coerce(FRP_Event.makeLemmingEventO(function (v, k) {\n        var v1 = FRP_Event.createPure();\n        var current = Control_Monad_ST_Internal[\"new\"](Data_Maybe.Nothing.value)();\n        var writeVal = function (v2) {\n            return Control_Monad_ST_Internal.write(new Data_Maybe.Just(v2))(current);\n        };\n        var push$prime$prime = function (i) {\n            return liftST(function __do() {\n                writeVal(i)();\n                return v1.push(i)();\n            });\n        };\n        var event$prime = FRP_Event.makeLemmingEventO(function (v2, k$prime) {\n            var val = Control_Monad_ST_Internal.read(current)();\n            for_(val)(function (x) {\n                return function () {\n                    return k$prime(x);\n                };\n            })();\n            return v(v1.event, k$prime);\n        });\n        k((function (v2) {\n            return v2;\n        })(f(new Data_Tuple.Tuple(push$prime$prime, event$prime))));\n        return v(v1.event, function (v2) {\n            return $$void(writeVal(v2))();\n        });\n    })));\n    return ee;\n};\nvar useHot = function (a) {\n    return function (f) {\n        var ee = Bolson_Core.envy(coerce(FRP_Event.makeLemmingEventO(function (v, k) {\n            var v1 = FRP_Event.createPure();\n            var current = Control_Monad_ST_Internal[\"new\"](Data_Maybe.Nothing.value)();\n            var writeVal = function (v2) {\n                return Control_Monad_ST_Internal.write(new Data_Maybe.Just(v2))(current);\n            };\n            var push$prime$prime = function (i) {\n                return liftST(function __do() {\n                    writeVal(i)();\n                    return v1.push(i)();\n                });\n            };\n            var event$prime = FRP_Event.makeLemmingEventO(function (v2, k$prime) {\n                var val = Control_Monad_ST_Internal.read(current)();\n                k$prime(Data_Maybe.fromMaybe(a)(val));\n                return v(v1.event, k$prime);\n            });\n            k((function (v2) {\n                return v2;\n            })(f(new Data_Tuple.Tuple(push$prime$prime, event$prime))));\n            return v(v1.event, function (v2) {\n                return $$void(writeVal(v2))();\n            });\n        })));\n        return ee;\n    };\n};\nvar useEffect = function (e) {\n    return function (f1) {\n        return function (f2) {\n            var eee = alt(pure(f2(Data_Unit.unit)))(FRP_Event.makeEventO(function (v) {\n                return FRP_Event.subscribeO(e, Effect_Uncurried.mkEffectFn1(f1));\n            }));\n            var eeee = map(function (v) {\n                return v;\n            })(eee);\n            var eeeee = map(function (v) {\n                return v;\n            })(eeee);\n            var ee = Bolson_Core.envy(eeeee);\n            return ee;\n        };\n    };\n};\nvar useDyn$prime = function (i) {\n    return function (f) {\n        return keepLatest(Deku_Do.bind(function ($111) {\n            return Deku_Core.bus(Data_Tuple.curry($111));\n        })(function (v) {\n            return alt(pure(Deku_Core.insert(i)(f({\n                remove: v.value0(Deku_Core.remove),\n                sendTo: function ($112) {\n                    return v.value0(Deku_Core.sendToPos($112));\n                }\n            }))))(v.value1);\n        }));\n    };\n};\nvar useDyn = function (e) {\n    return function (f) {\n        return Deku_Core.dyn(map(function (v) {\n            return Deku_Do.bind(useDyn$prime(v.value0))(function (v1) {\n                return f({\n                    remove: v1.remove,\n                    sendTo: v1.sendTo,\n                    value: v.value1\n                });\n            });\n        })(e));\n    };\n};\nvar useDynAtBeginning = function (e) {\n    return useDyn(map(function (v) {\n        return new Data_Tuple.Tuple(0, v);\n    })(e));\n};\nvar useDynAtEnd = function (e) {\n    return useDyn(mapAccum(function (a) {\n        return function (b) {\n            return new Data_Tuple.Tuple(a + 1 | 0, new Data_Tuple.Tuple(a, b));\n        };\n    })(0)(e));\n};\nvar useAffWithCancellation = function (e) {\n    return function (f1) {\n        return function (f2) {\n            var eee = FRP_Event.makeEventO(function (k) {\n                var r = liftST(Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit)))();\n                k(f2(Data_Unit.unit));\n                return FRP_Event.subscribeO(e, function (a) {\n                    var r$prime = liftST(Control_Monad_ST_Internal.read(r))();\n                    var r$prime$prime = Effect_Aff.launchAff(discard3(Effect_Aff.killFiber(Effect_Exception.error(\"useAffWithCancellation\"))(r$prime))(function () {\n                        return f1(a);\n                    }))();\n                    return liftST($$void(Control_Monad_ST_Internal.write(r$prime$prime)(r)))();\n                });\n            });\n            var eeee = map(function (v) {\n                return v;\n            })(eee);\n            var eeeee = map(function (v) {\n                return v;\n            })(eeee);\n            var ee = Bolson_Core.envy(eeeee);\n            return ee;\n        };\n    };\n};\nvar useAffSequentiallyOrDie = function (e) {\n    return function (f1) {\n        return function (f2) {\n            var eee = FRP_Event.makeEventO(function (k) {\n                var r = liftST(Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit)))();\n                k(f2(Data_Unit.unit));\n                return FRP_Event.subscribeO(e, function (v) {\n                    if (v instanceof Data_Either.Right) {\n                        var r$prime = liftST(Control_Monad_ST_Internal.read(r))();\n                        var r$prime$prime = Effect_Aff.launchAff(bind2(Effect_Aff.joinFiber(r$prime))(function () {\n                            return f1(v.value0);\n                        }))();\n                        return liftST($$void(Control_Monad_ST_Internal.write(r$prime$prime)(r)))();\n                    };\n                    if (v instanceof Data_Either.Left) {\n                        var r$prime = liftST(Control_Monad_ST_Internal.read(r))();\n                        Effect_Aff.launchAff(Effect_Aff.killFiber(v.value0)(r$prime))();\n                        return liftST($$void(Control_Monad_ST_Internal.write(pure1(Data_Unit.unit))(r)))();\n                    };\n                    throw new Error(\"Failed pattern match at Deku.Hooks (line 399, column 49 - line 410, column 52): \" + [ v.constructor.name ]);\n                });\n            });\n            var eeee = map(function (v) {\n                return v;\n            })(eee);\n            var eeeee = map(function (v) {\n                return v;\n            })(eeee);\n            var ee = Bolson_Core.envy(eeeee);\n            return ee;\n        };\n    };\n};\nvar useAffSequentially = function (e) {\n    return function (f1) {\n        return function (f2) {\n            var eee = FRP_Event.makeEventO(function (k) {\n                var r = liftST(Control_Monad_ST_Internal[\"new\"](pure1(Data_Unit.unit)))();\n                k(f2(Data_Unit.unit));\n                return FRP_Event.subscribeO(e, function (a) {\n                    var r$prime = liftST(Control_Monad_ST_Internal.read(r))();\n                    var r$prime$prime = Effect_Aff.launchAff(bind2(Effect_Aff.joinFiber(r$prime))(function () {\n                        return f1(a);\n                    }))();\n                    return liftST($$void(Control_Monad_ST_Internal.write(r$prime$prime)(r)))();\n                });\n            });\n            var eeee = map(function (v) {\n                return v;\n            })(eee);\n            var eeeee = map(function (v) {\n                return v;\n            })(eeee);\n            var ee = Bolson_Core.envy(eeeee);\n            return ee;\n        };\n    };\n};\nvar useAffOrDie = function (e) {\n    return function (f1) {\n        return function (f2) {\n            var eee = FRP_Event.makeEventO(function (k) {\n                var r = liftST(Control_Monad_ST_Internal[\"new\"]([  ]))();\n                k(f2(Data_Unit.unit));\n                return FRP_Event.subscribeO(e, function (v) {\n                    if (v instanceof Data_Either.Right) {\n                        var r$prime = Effect_Aff.launchAff(f1(v.value0))();\n                        return liftST($$void(Control_Monad_ST_Internal.modify(Data_Array.cons(r$prime))(r)))();\n                    };\n                    if (v instanceof Data_Either.Left) {\n                        var arr = liftST(Control_Monad_ST_Internal.read(r))();\n                        liftST($$void(Control_Monad_ST_Internal.write([  ])(r)))();\n                        return Effect.foreachE(arr)(function (r$prime) {\n                            return Effect_Aff.launchAff_(Effect_Aff.killFiber(v.value0)(r$prime));\n                        })();\n                    };\n                    throw new Error(\"Failed pattern match at Deku.Hooks (line 435, column 49 - line 444, column 29): \" + [ v.constructor.name ]);\n                });\n            });\n            var eeee = map(function (v) {\n                return v;\n            })(eee);\n            var eeeee = map(function (v) {\n                return v;\n            })(eeee);\n            var ee = Bolson_Core.envy(eeeee);\n            return ee;\n        };\n    };\n};\nvar useAff = function (e) {\n    var $113 = useEffect(e);\n    var $114 = map1(Effect_Aff.launchAff_);\n    return function ($115) {\n        return $113($114($115));\n    };\n};\nexport {\n    useState$prime,\n    useState,\n    useRef,\n    useMemoized$prime,\n    useMemoized,\n    useMailboxed,\n    useEffect,\n    useAff,\n    useAffWithCancellation,\n    useAffSequentially,\n    useAffSequentiallyOrDie,\n    useAffOrDie,\n    useHot,\n    useHot$prime,\n    useDyn,\n    useDynAtBeginning,\n    useDynAtEnd\n};\n", "// Generated by purs version 0.15.10\nimport * as Bolson_Control from \"../Bolson.Control/index.js\";\nimport * as Bolson_Core from \"../Bolson.Core/index.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Monad_ST_Internal from \"../Control.Monad.ST.Internal/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Profunctor from \"../Data.Profunctor/index.js\";\nimport * as Data_Reflectable from \"../Data.Reflectable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nimport * as Foreign_Object from \"../Foreign.Object/index.js\";\nimport * as Record from \"../Record/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);\nvar merge = /* #__PURE__ */ FRP_Event.merge(Data_Foldable.foldableArray);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);\nvar pure1 = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);\nvar Reflectable$dollarDict = {\n    reflectType: function () {\n        return \"~\";\n    }\n};\nvar alt = /* #__PURE__ */ Control_Alt.alt(FRP_Event.altEvent);\nvar map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);\nvar lcmap = /* #__PURE__ */ Data_Profunctor.lcmap(Data_Profunctor.profunctorFn);\nvar unwrap = /* #__PURE__ */ Data_Newtype.unwrap();\nvar eq = /* #__PURE__ */ Data_Eq.eq(Bolson_Core.eqScope);\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar skipUntilCommentEnd$34$minus$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar skipUntilCommentEnd = function () {\n    return function () {\n        return {};\n    };\n};\nvar preEndTagFromTrailing$34z$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34y$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34x$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34w$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34v$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34u$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34t$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34s$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34r$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34q$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34p$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34o$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34n$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34m$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34l$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34k$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34j$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34i$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34h$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34g$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34f$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34e$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34d$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34c$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34b$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34a$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34$bslashx0 = function () {\n    return function () {\n        return {};\n    };\n};\nvar preEndTagFromTrailing$34$bslashx01 = function () {\n    return function () {\n        return {};\n    };\n};\nvar preEndTagFromTrailing$34$minus$34 = function () {\n    return {};\n};\nvar preEndTagFromTrailing$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreName$34z$34 = function () {\n    return {};\n};\nvar pXTagPreName$34y$34 = function () {\n    return {};\n};\nvar pXTagPreName$34x$34 = function () {\n    return {};\n};\nvar pXTagPreName$34w$34 = function () {\n    return {};\n};\nvar pXTagPreName$34v$34 = function () {\n    return {};\n};\nvar pXTagPreName$34u$34 = function () {\n    return {};\n};\nvar pXTagPreName$34t$34 = function () {\n    return {};\n};\nvar pXTagPreName$34s$34 = function () {\n    return {};\n};\nvar pXTagPreName$34r$34 = function () {\n    return {};\n};\nvar pXTagPreName$34q$34 = function () {\n    return {};\n};\nvar pXTagPreName$34p$34 = function () {\n    return {};\n};\nvar pXTagPreName$34o$34 = function () {\n    return {};\n};\nvar pXTagPreName$34n$34 = function () {\n    return {};\n};\nvar pXTagPreName$34m$34 = function () {\n    return {};\n};\nvar pXTagPreName$34l$34 = function () {\n    return {};\n};\nvar pXTagPreName$34k$34 = function () {\n    return {};\n};\nvar pXTagPreName$34j$34 = function () {\n    return {};\n};\nvar pXTagPreName$34i$34 = function () {\n    return {};\n};\nvar pXTagPreName$34h$34 = function () {\n    return {};\n};\nvar pXTagPreName$34g$34 = function () {\n    return {};\n};\nvar pXTagPreName$34f$34 = function () {\n    return {};\n};\nvar pXTagPreName$34e$34 = function () {\n    return {};\n};\nvar pXTagPreName$34d$34 = function () {\n    return {};\n};\nvar pXTagPreName$34c$34 = function () {\n    return {};\n};\nvar pXTagPreName$34b$34 = function () {\n    return {};\n};\nvar pXTagPreName$34a$34 = function () {\n    return {};\n};\nvar pXTagPreName$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreName$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreName$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreAttrValue$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreAttrValue$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreAttrValue$34$bslash$34$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreAttrValue$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreAttrNameFalse = function () {\n    return function () {\n        return function () {\n            return function () {\n                return {};\n            };\n        };\n    };\n};\nvar pXTagPreAttrName$34z$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34y$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34x$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34w$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34v$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34u$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34t$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34s$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34r$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34q$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34p$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34o$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34n$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34m$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34l$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34k$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34j$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34i$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34h$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34g$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34f$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34e$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34d$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34c$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34b$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34a$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreAttrName$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPreAttrName$34Z$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34Y$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34X$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34W$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34V$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34U$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34T$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34S$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34R$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34Q$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34P$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34O$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34N$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34M$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34L$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34K$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34J$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34I$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34H$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34G$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34F$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34E$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34D$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34C$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34B$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34A$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34$greater$34 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return {};\n            };\n        };\n    };\n};\nvar pXTagPreAttrName$34$div$34 = function () {\n    return {};\n};\nvar pXTagPreAttrName$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPostAttrName$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPostAttrName$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPostAttrName$34$eq$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagPostAttrName$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagName$34z$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34y$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34x$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34w$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34v$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34u$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34t$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34s$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34r$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34q$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34p$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34o$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34n$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34m$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34l$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34k$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34j$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34i$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34h$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34g$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34f$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34e$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34d$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34c$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34b$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34a$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagName$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagName$34$greater$34 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return {};\n            };\n        };\n    };\n};\nvar pXTagName$349$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$348$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$347$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$346$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$345$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$344$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$343$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$342$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$341$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$340$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34$minus$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXTagName$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$tilde$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34z$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34y$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34x$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34w$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34v$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34u$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34t$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34s$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34r$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34q$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34p$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34o$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34n$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34m$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34l$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34k$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34j$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34i$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34h$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34g$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34f$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34e$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34d$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34c$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34b$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$96$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34_$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$up$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$bslash$bslash$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$bslash$34$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34Z$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34Y$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34X$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34W$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34V$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34U$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34T$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34S$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34R$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34Q$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34P$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34O$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34N$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34M$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34L$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34K$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34J$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34I$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34H$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34G$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34F$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34E$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34D$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34C$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34B$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34A$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$at$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$qmark$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$greater$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$eq$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$less$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$59$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$colon$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$349$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$348$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$347$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$346$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$345$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$344$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$343$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$342$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$341$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$340$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$div$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$dot$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$minus$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$44$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$times$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$41$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$40$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$prime$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$amp$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$percent$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$dollar$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$hash$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$bang$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrValue$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34z$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34y$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34x$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34w$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34v$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34u$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34t$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34s$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34r$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34q$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34p$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34o$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34n$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34m$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34l$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34k$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34j$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34i$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34h$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34g$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34f$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34e$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34d$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34c$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34b$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34Z$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34Y$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34X$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34W$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34V$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34U$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34T$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34S$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34R$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34Q$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34P$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34O$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34N$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34M$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34L$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34K$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34J$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34I$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34H$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34G$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34F$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34E$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34D$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34C$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34B$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34A$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34$eq$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$349$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$348$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$347$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$346$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$345$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$344$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$343$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$342$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$341$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$340$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34$minus$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXTagAttrName$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXStart$34$bslashx0a$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXStart$34$bslashx09$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXStart$34$less$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar pXStart$34$32$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXBody$34$less$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXBody = function () {\n    return function () {\n        return {};\n    };\n};\nvar pXBody1 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return {};\n            };\n        };\n    };\n};\nvar isWhiteSpace$34$34 = {};\nvar isWhiteSpace = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar isSingleWhiteSpace$34$bslashx0a$34 = {};\nvar isSingleWhiteSpace$34$bslashx09$34 = {};\nvar isSingleWhiteSpace$34$32$34 = {};\nvar endTagFromTrailing$34z$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34y$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34x$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34w$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34v$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34u$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34t$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34s$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34r$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34q$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34p$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34o$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34n$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34m$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34l$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34k$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34j$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34i$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34h$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34g$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34f$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34e$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34d$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34c$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34b$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34a$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34$greater$34 = {};\nvar endTagFromTrailing$349$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$348$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$347$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$346$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$345$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$344$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$343$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$342$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$341$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$340$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar endTagFromTrailing$34$minus$34 = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar doVerbForDOM = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar doVerbForDOM1 = function () {\n    return {};\n};\nvar doVerbForAttr = function () {\n    return function () {\n        return function () {\n            return {};\n        };\n    };\n};\nvar doVerbForAttr1 = function () {\n    return function () {\n        return {};\n    };\n};\nvar commendEndCandidate2$34$greater$34 = {};\nvar commendEndCandidate2 = function () {\n    return function () {\n        return {};\n    };\n};\nvar commendEndCandidate1$34$minus$34 = function () {\n    return function () {\n        return {};\n    };\n};\nvar commendEndCandidate1 = function () {\n    return function () {\n        return {};\n    };\n};\nvar closeOrRepeat$34$div$34 = {};\nvar closeOrRepeat$34$bang$34 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function () {\n                    return function () {\n                        return {};\n                    };\n                };\n            };\n        };\n    };\n};\nvar closeOrRepeat = function () {\n    return function () {\n        return function () {\n            return function () {\n                return {};\n            };\n        };\n    };\n};\nvar pursxToElementNil = {\n    pursxToElement: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {\n                    cache: Foreign_Object.empty,\n                    element: new Bolson_Core[\"Element$prime\"](function (v3) {\n                        return function (v4) {\n                            return empty;\n                        };\n                    })\n                };\n            };\n        };\n    }\n};\nvar pursxToElement = function (dict) {\n    return dict.pursxToElement;\n};\nvar pursx = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar domableToNode = function (v) {\n    var step1 = function (v1) {\n        if (v1 instanceof Bolson_Core[\"Element$prime\"]) {\n            return v1.value0;\n        };\n        return function (v2) {\n            return function (v3) {\n                return empty;\n            };\n        };\n    };\n    return step1(v);\n};\nvar makePursx$prime = function (dictReflectable) {\n    var reflectType = Data_Reflectable.reflectType(dictReflectable);\n    return function (dictReflectable1) {\n        var reflectType1 = Data_Reflectable.reflectType(dictReflectable1);\n        return function () {\n            return function () {\n                return function (dictPursxToElement) {\n                    var pursxToElement1 = pursxToElement(dictPursxToElement);\n                    return function (verb) {\n                        return function (html) {\n                            return function (r) {\n                                var go = function (v) {\n                                    return function (v1) {\n                                        return FRP_Event.makeLemmingEventO(function (v2, k1) {\n                                            var me = v1.ids();\n                                            var pxScope = v1.ids();\n                                            v.raiseId(me)();\n                                            var v3 = pursxToElement1(pxScope)(Type_Proxy[\"Proxy\"].value)(r);\n                                            var v4 = domableToNode(v3.element);\n                                            var unsub = v2(merge([ pure(v1.makePursx({\n                                                id: me,\n                                                parent: v.parent,\n                                                cache: v3.cache,\n                                                dynFamily: v.dynFamily,\n                                                pos: v.pos,\n                                                pxScope: pxScope,\n                                                scope: v.scope,\n                                                html: reflectType(html),\n                                                verb: reflectType1(verb)\n                                            })), v4(v)(v1), Data_Maybe.maybe(empty)(function (p) {\n                                                return pure(v1.attributeParent({\n                                                    id: me,\n                                                    parent: p,\n                                                    pos: v.pos,\n                                                    dynFamily: v.dynFamily,\n                                                    ez: false\n                                                }));\n                                            })(v.parent) ]), k1);\n                                            return function __do() {\n                                                k1(v1.deleteFromCache({\n                                                    id: me\n                                                }));\n                                                return unsub();\n                                            };\n                                        });\n                                    };\n                                };\n                                var ee = new Bolson_Core[\"Element$prime\"](go);\n                                return ee;\n                            };\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nvar makePursx = function (dictReflectable) {\n    var makePursx$prime1 = makePursx$prime(dictReflectable)(Reflectable$dollarDict)()();\n    return function () {\n        return function () {\n            return function (dictPursxToElement) {\n                return makePursx$prime1(dictPursxToElement)(Type_Proxy[\"Proxy\"].value);\n            };\n        };\n    };\n};\nvar psx = function (dictReflectable) {\n    var makePursx1 = makePursx(dictReflectable)()();\n    return function () {\n        return function (dictPursxToElement) {\n            var makePursx2 = makePursx1(dictPursxToElement);\n            return function (px) {\n                return makePursx2(px)({});\n            };\n        };\n    };\n};\nvar pursxToElementConsAttr = function () {\n    return function (dictPursxToElement) {\n        var pursxToElement1 = pursxToElement(dictPursxToElement);\n        return function (dictReflectable) {\n            var reflectType = Data_Reflectable.reflectType(dictReflectable);\n            return function (dictIsSymbol) {\n                var get = Record.get(dictIsSymbol)();\n                return {\n                    pursxToElement: function (pxScope) {\n                        return function (v) {\n                            return function (r) {\n                                var v1 = pursxToElement1(pxScope)(Type_Proxy[\"Proxy\"].value)(r);\n                                return {\n                                    cache: Foreign_Object.insert(reflectType(Type_Proxy[\"Proxy\"].value))(true)(v1.cache),\n                                    element: new Bolson_Core[\"Element$prime\"](function (parent) {\n                                        return function (v2) {\n                                            return alt(map(lcmap(Deku_Attribute.unsafeUnAttribute)(function (v3) {\n                                                if (v3.value instanceof Deku_Attribute[\"Prop$prime\"]) {\n                                                    return v2.setProp({\n                                                        id: reflectType(Type_Proxy[\"Proxy\"].value) + (\"@!%\" + pxScope),\n                                                        key: v3.key,\n                                                        value: v3.value.value0\n                                                    });\n                                                };\n                                                if (v3.value instanceof Deku_Attribute[\"Cb$prime\"]) {\n                                                    return v2.setCb({\n                                                        id: reflectType(Type_Proxy[\"Proxy\"].value) + (\"@!%\" + pxScope),\n                                                        key: v3.key,\n                                                        value: v3.value.value0\n                                                    });\n                                                };\n                                                if (v3.value instanceof Deku_Attribute[\"Unset$prime\"]) {\n                                                    return v2.unsetAttribute({\n                                                        id: reflectType(Type_Proxy[\"Proxy\"].value) + (\"@!%\" + pxScope),\n                                                        key: v3.key\n                                                    });\n                                                };\n                                                throw new Error(\"Failed pattern match at Deku.Pursx (line 2487, column 52 - line 2504, column 38): \" + [ v3.value.constructor.name ]);\n                                            }))(get(Type_Proxy[\"Proxy\"].value)(r)))((function () {\n                                                var v3 = domableToNode(v1.element);\n                                                return v3;\n                                            })()(parent)(v2));\n                                        };\n                                    })\n                                };\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nvar unsafeMakePursx$prime = function () {\n    return function (dictPursxToElement) {\n        var pursxToElement1 = pursxToElement(dictPursxToElement);\n        return function (verb) {\n            return function (html) {\n                return function (r) {\n                    var go = function (v) {\n                        return function (v1) {\n                            return FRP_Event.makeLemmingEventO(function (v2, k1) {\n                                var me = v1.ids();\n                                var pxScope = v1.ids();\n                                v.raiseId(me)();\n                                var v3 = pursxToElement1(pxScope)(Type_Proxy[\"Proxy\"].value)(r);\n                                var v4 = domableToNode(v3.element);\n                                var unsub = v2(merge([ pure(v1.makePursx({\n                                    id: me,\n                                    parent: v.parent,\n                                    cache: v3.cache,\n                                    dynFamily: v.dynFamily,\n                                    pos: v.pos,\n                                    pxScope: pxScope,\n                                    scope: v.scope,\n                                    html: html,\n                                    verb: verb\n                                })), v4(v)(v1), Data_Maybe.maybe(empty)(function (p) {\n                                    return pure(v1.attributeParent({\n                                        id: me,\n                                        parent: p,\n                                        pos: v.pos,\n                                        dynFamily: v.dynFamily,\n                                        ez: false\n                                    }));\n                                })(v.parent) ]), k1);\n                                return function __do() {\n                                    k1(v1.deleteFromCache({\n                                        id: me\n                                    }));\n                                    return unsub();\n                                };\n                            });\n                        };\n                    };\n                    var ee = new Bolson_Core[\"Element$prime\"](go);\n                    return ee;\n                };\n            };\n        };\n    };\n};\nvar unsafeMakePursx$prime1 = /* #__PURE__ */ unsafeMakePursx$prime();\nvar unsafeMakePursx = function () {\n    return function (dictPursxToElement) {\n        return unsafeMakePursx$prime1(dictPursxToElement)(\"~\");\n    };\n};\nvar __internalDekuFlatten = function (a) {\n    return function (b) {\n        return function (c) {\n            return Bolson_Control.flatten({\n                doLogic: function (pos) {\n                    return function (v) {\n                        return function (id) {\n                            return v.sendToPos({\n                                id: id,\n                                pos: pos\n                            });\n                        };\n                    };\n                },\n                ids: function ($543) {\n                    return (function (v) {\n                        return v.ids;\n                    })(unwrap($543));\n                },\n                disconnectElement: function (v) {\n                    return function (v1) {\n                        return v.disconnectElement({\n                            id: v1.id,\n                            scope: v1.scope,\n                            parent: v1.parent,\n                            scopeEq: eq\n                        });\n                    };\n                },\n                toElt: function (v) {\n                    return v;\n                }\n            })(a)(b)(coerce(c));\n        };\n    };\n};\nvar pursxToElementConsInsert = function () {\n    return function (dictPursxToElement) {\n        var pursxToElement1 = pursxToElement(dictPursxToElement);\n        return function (dictReflectable) {\n            var reflectType = Data_Reflectable.reflectType(dictReflectable);\n            return function (dictIsSymbol) {\n                var get = Record.get(dictIsSymbol)();\n                return {\n                    pursxToElement: function (pxScope) {\n                        return function (v) {\n                            return function (r) {\n                                var v1 = pursxToElement1(pxScope)(Type_Proxy[\"Proxy\"].value)(r);\n                                return {\n                                    cache: Foreign_Object.insert(reflectType(Type_Proxy[\"Proxy\"].value))(false)(v1.cache),\n                                    element: new Bolson_Core[\"Element$prime\"](function (info) {\n                                        return function (di) {\n                                            return alt(__internalDekuFlatten({\n                                                parent: new Data_Maybe.Just(reflectType(Type_Proxy[\"Proxy\"].value) + (\"@!%\" + pxScope)),\n                                                scope: info.scope,\n                                                raiseId: function (v2) {\n                                                    return pure1(Data_Unit.unit);\n                                                },\n                                                pos: info.pos,\n                                                ez: false,\n                                                dynFamily: Data_Maybe.Nothing.value\n                                            })(di)((function (v2) {\n                                                return v2;\n                                            })(get(Type_Proxy[\"Proxy\"].value)(r))))((function () {\n                                                var v2 = domableToNode(v1.element);\n                                                return v2;\n                                            })()(info)(di));\n                                        };\n                                    })\n                                };\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    pursxToElement,\n    pursx,\n    domableToNode,\n    psx,\n    makePursx,\n    makePursx$prime,\n    unsafeMakePursx,\n    unsafeMakePursx$prime,\n    __internalDekuFlatten,\n    doVerbForAttr1,\n    doVerbForAttr,\n    doVerbForDOM1,\n    doVerbForDOM,\n    isWhiteSpace$34$34,\n    isWhiteSpace,\n    isSingleWhiteSpace$34$32$34,\n    isSingleWhiteSpace$34$bslashx09$34,\n    isSingleWhiteSpace$34$bslashx0a$34,\n    pXStart$34$32$34,\n    pXStart$34$bslashx09$34,\n    pXStart$34$bslashx0a$34,\n    pXStart$34$less$34,\n    pXTagPreName$34$32$34,\n    pXTagPreName$34$bslashx09$34,\n    pXTagPreName$34$bslashx0a$34,\n    pXTagPreName$34a$34,\n    pXTagPreName$34b$34,\n    pXTagPreName$34c$34,\n    pXTagPreName$34d$34,\n    pXTagPreName$34e$34,\n    pXTagPreName$34f$34,\n    pXTagPreName$34g$34,\n    pXTagPreName$34h$34,\n    pXTagPreName$34i$34,\n    pXTagPreName$34j$34,\n    pXTagPreName$34k$34,\n    pXTagPreName$34l$34,\n    pXTagPreName$34m$34,\n    pXTagPreName$34n$34,\n    pXTagPreName$34o$34,\n    pXTagPreName$34p$34,\n    pXTagPreName$34q$34,\n    pXTagPreName$34r$34,\n    pXTagPreName$34s$34,\n    pXTagPreName$34t$34,\n    pXTagPreName$34u$34,\n    pXTagPreName$34v$34,\n    pXTagPreName$34w$34,\n    pXTagPreName$34x$34,\n    pXTagPreName$34y$34,\n    pXTagPreName$34z$34,\n    pXTagName$34$greater$34,\n    pXTagName$34a$34,\n    pXTagName$34b$34,\n    pXTagName$34c$34,\n    pXTagName$34d$34,\n    pXTagName$34e$34,\n    pXTagName$34f$34,\n    pXTagName$34g$34,\n    pXTagName$34h$34,\n    pXTagName$34i$34,\n    pXTagName$34j$34,\n    pXTagName$34k$34,\n    pXTagName$34l$34,\n    pXTagName$34m$34,\n    pXTagName$34n$34,\n    pXTagName$34o$34,\n    pXTagName$34p$34,\n    pXTagName$34q$34,\n    pXTagName$34r$34,\n    pXTagName$34s$34,\n    pXTagName$34t$34,\n    pXTagName$34u$34,\n    pXTagName$34v$34,\n    pXTagName$34w$34,\n    pXTagName$34x$34,\n    pXTagName$34y$34,\n    pXTagName$34z$34,\n    pXTagName$34$minus$34,\n    pXTagName$340$34,\n    pXTagName$341$34,\n    pXTagName$342$34,\n    pXTagName$343$34,\n    pXTagName$344$34,\n    pXTagName$345$34,\n    pXTagName$346$34,\n    pXTagName$347$34,\n    pXTagName$348$34,\n    pXTagName$349$34,\n    pXTagName$34$32$34,\n    pXTagName$34$bslashx09$34,\n    pXTagName$34$bslashx0a$34,\n    preEndTagFromTrailing$34$32$34,\n    preEndTagFromTrailing$34$bslashx01,\n    preEndTagFromTrailing$34$bslashx0,\n    preEndTagFromTrailing$34a$34,\n    preEndTagFromTrailing$34b$34,\n    preEndTagFromTrailing$34c$34,\n    preEndTagFromTrailing$34d$34,\n    preEndTagFromTrailing$34e$34,\n    preEndTagFromTrailing$34f$34,\n    preEndTagFromTrailing$34g$34,\n    preEndTagFromTrailing$34h$34,\n    preEndTagFromTrailing$34i$34,\n    preEndTagFromTrailing$34j$34,\n    preEndTagFromTrailing$34k$34,\n    preEndTagFromTrailing$34l$34,\n    preEndTagFromTrailing$34m$34,\n    preEndTagFromTrailing$34n$34,\n    preEndTagFromTrailing$34o$34,\n    preEndTagFromTrailing$34p$34,\n    preEndTagFromTrailing$34q$34,\n    preEndTagFromTrailing$34r$34,\n    preEndTagFromTrailing$34s$34,\n    preEndTagFromTrailing$34t$34,\n    preEndTagFromTrailing$34u$34,\n    preEndTagFromTrailing$34v$34,\n    preEndTagFromTrailing$34w$34,\n    preEndTagFromTrailing$34x$34,\n    preEndTagFromTrailing$34y$34,\n    preEndTagFromTrailing$34z$34,\n    preEndTagFromTrailing$34$minus$34,\n    endTagFromTrailing$34a$34,\n    endTagFromTrailing$34b$34,\n    endTagFromTrailing$34c$34,\n    endTagFromTrailing$34d$34,\n    endTagFromTrailing$34e$34,\n    endTagFromTrailing$34f$34,\n    endTagFromTrailing$34g$34,\n    endTagFromTrailing$34h$34,\n    endTagFromTrailing$34i$34,\n    endTagFromTrailing$34j$34,\n    endTagFromTrailing$34k$34,\n    endTagFromTrailing$34l$34,\n    endTagFromTrailing$34m$34,\n    endTagFromTrailing$34n$34,\n    endTagFromTrailing$34o$34,\n    endTagFromTrailing$34p$34,\n    endTagFromTrailing$34q$34,\n    endTagFromTrailing$34r$34,\n    endTagFromTrailing$34s$34,\n    endTagFromTrailing$34t$34,\n    endTagFromTrailing$34u$34,\n    endTagFromTrailing$34v$34,\n    endTagFromTrailing$34w$34,\n    endTagFromTrailing$34x$34,\n    endTagFromTrailing$34y$34,\n    endTagFromTrailing$34z$34,\n    endTagFromTrailing$34$minus$34,\n    endTagFromTrailing$340$34,\n    endTagFromTrailing$341$34,\n    endTagFromTrailing$342$34,\n    endTagFromTrailing$343$34,\n    endTagFromTrailing$344$34,\n    endTagFromTrailing$345$34,\n    endTagFromTrailing$346$34,\n    endTagFromTrailing$347$34,\n    endTagFromTrailing$348$34,\n    endTagFromTrailing$349$34,\n    endTagFromTrailing$34$greater$34,\n    pXTagPreAttrName$34$div$34,\n    pXTagPreAttrName$34$greater$34,\n    pXTagPreAttrName$34$32$34,\n    pXTagPreAttrName$34$bslashx09$34,\n    pXTagPreAttrName$34$bslashx0a$34,\n    pXTagPreAttrName$34a$34,\n    pXTagPreAttrName$34b$34,\n    pXTagPreAttrName$34c$34,\n    pXTagPreAttrName$34d$34,\n    pXTagPreAttrName$34e$34,\n    pXTagPreAttrName$34f$34,\n    pXTagPreAttrName$34g$34,\n    pXTagPreAttrName$34h$34,\n    pXTagPreAttrName$34i$34,\n    pXTagPreAttrName$34j$34,\n    pXTagPreAttrName$34k$34,\n    pXTagPreAttrName$34l$34,\n    pXTagPreAttrName$34m$34,\n    pXTagPreAttrName$34n$34,\n    pXTagPreAttrName$34o$34,\n    pXTagPreAttrName$34p$34,\n    pXTagPreAttrName$34q$34,\n    pXTagPreAttrName$34r$34,\n    pXTagPreAttrName$34s$34,\n    pXTagPreAttrName$34t$34,\n    pXTagPreAttrName$34u$34,\n    pXTagPreAttrName$34v$34,\n    pXTagPreAttrName$34w$34,\n    pXTagPreAttrName$34x$34,\n    pXTagPreAttrName$34y$34,\n    pXTagPreAttrName$34z$34,\n    pXTagPreAttrName$34A$34,\n    pXTagPreAttrName$34B$34,\n    pXTagPreAttrName$34C$34,\n    pXTagPreAttrName$34D$34,\n    pXTagPreAttrName$34E$34,\n    pXTagPreAttrName$34F$34,\n    pXTagPreAttrName$34G$34,\n    pXTagPreAttrName$34H$34,\n    pXTagPreAttrName$34I$34,\n    pXTagPreAttrName$34J$34,\n    pXTagPreAttrName$34K$34,\n    pXTagPreAttrName$34L$34,\n    pXTagPreAttrName$34M$34,\n    pXTagPreAttrName$34N$34,\n    pXTagPreAttrName$34O$34,\n    pXTagPreAttrName$34P$34,\n    pXTagPreAttrName$34Q$34,\n    pXTagPreAttrName$34R$34,\n    pXTagPreAttrName$34S$34,\n    pXTagPreAttrName$34T$34,\n    pXTagPreAttrName$34U$34,\n    pXTagPreAttrName$34V$34,\n    pXTagPreAttrName$34W$34,\n    pXTagPreAttrName$34X$34,\n    pXTagPreAttrName$34Y$34,\n    pXTagPreAttrName$34Z$34,\n    pXTagPreAttrNameFalse,\n    pXTagAttrName$34a$34,\n    pXTagAttrName$34b$34,\n    pXTagAttrName$34c$34,\n    pXTagAttrName$34d$34,\n    pXTagAttrName$34e$34,\n    pXTagAttrName$34f$34,\n    pXTagAttrName$34g$34,\n    pXTagAttrName$34h$34,\n    pXTagAttrName$34i$34,\n    pXTagAttrName$34j$34,\n    pXTagAttrName$34k$34,\n    pXTagAttrName$34l$34,\n    pXTagAttrName$34m$34,\n    pXTagAttrName$34n$34,\n    pXTagAttrName$34o$34,\n    pXTagAttrName$34p$34,\n    pXTagAttrName$34q$34,\n    pXTagAttrName$34r$34,\n    pXTagAttrName$34s$34,\n    pXTagAttrName$34t$34,\n    pXTagAttrName$34u$34,\n    pXTagAttrName$34v$34,\n    pXTagAttrName$34w$34,\n    pXTagAttrName$34x$34,\n    pXTagAttrName$34y$34,\n    pXTagAttrName$34z$34,\n    pXTagAttrName$34A$34,\n    pXTagAttrName$34B$34,\n    pXTagAttrName$34C$34,\n    pXTagAttrName$34D$34,\n    pXTagAttrName$34E$34,\n    pXTagAttrName$34F$34,\n    pXTagAttrName$34G$34,\n    pXTagAttrName$34H$34,\n    pXTagAttrName$34I$34,\n    pXTagAttrName$34J$34,\n    pXTagAttrName$34K$34,\n    pXTagAttrName$34L$34,\n    pXTagAttrName$34M$34,\n    pXTagAttrName$34N$34,\n    pXTagAttrName$34O$34,\n    pXTagAttrName$34P$34,\n    pXTagAttrName$34Q$34,\n    pXTagAttrName$34R$34,\n    pXTagAttrName$34S$34,\n    pXTagAttrName$34T$34,\n    pXTagAttrName$34U$34,\n    pXTagAttrName$34V$34,\n    pXTagAttrName$34W$34,\n    pXTagAttrName$34X$34,\n    pXTagAttrName$34Y$34,\n    pXTagAttrName$34Z$34,\n    pXTagAttrName$34$minus$34,\n    pXTagAttrName$340$34,\n    pXTagAttrName$341$34,\n    pXTagAttrName$342$34,\n    pXTagAttrName$343$34,\n    pXTagAttrName$344$34,\n    pXTagAttrName$345$34,\n    pXTagAttrName$346$34,\n    pXTagAttrName$347$34,\n    pXTagAttrName$348$34,\n    pXTagAttrName$349$34,\n    pXTagAttrName$34$eq$34,\n    pXTagAttrName$34$32$34,\n    pXTagAttrName$34$bslashx09$34,\n    pXTagAttrName$34$bslashx0a$34,\n    pXTagPostAttrName$34$32$34,\n    pXTagPostAttrName$34$bslashx09$34,\n    pXTagPostAttrName$34$bslashx0a$34,\n    pXTagPostAttrName$34$eq$34,\n    pXTagPreAttrValue$34$32$34,\n    pXTagPreAttrValue$34$bslashx09$34,\n    pXTagPreAttrValue$34$bslashx0a$34,\n    pXTagPreAttrValue$34$bslash$34$34,\n    pXTagAttrValue$34a$34,\n    pXTagAttrValue$34b$34,\n    pXTagAttrValue$34c$34,\n    pXTagAttrValue$34d$34,\n    pXTagAttrValue$34e$34,\n    pXTagAttrValue$34f$34,\n    pXTagAttrValue$34g$34,\n    pXTagAttrValue$34h$34,\n    pXTagAttrValue$34i$34,\n    pXTagAttrValue$34j$34,\n    pXTagAttrValue$34k$34,\n    pXTagAttrValue$34l$34,\n    pXTagAttrValue$34m$34,\n    pXTagAttrValue$34n$34,\n    pXTagAttrValue$34o$34,\n    pXTagAttrValue$34p$34,\n    pXTagAttrValue$34q$34,\n    pXTagAttrValue$34r$34,\n    pXTagAttrValue$34s$34,\n    pXTagAttrValue$34t$34,\n    pXTagAttrValue$34u$34,\n    pXTagAttrValue$34v$34,\n    pXTagAttrValue$34w$34,\n    pXTagAttrValue$34x$34,\n    pXTagAttrValue$34y$34,\n    pXTagAttrValue$34z$34,\n    pXTagAttrValue$34A$34,\n    pXTagAttrValue$34B$34,\n    pXTagAttrValue$34C$34,\n    pXTagAttrValue$34D$34,\n    pXTagAttrValue$34E$34,\n    pXTagAttrValue$34F$34,\n    pXTagAttrValue$34G$34,\n    pXTagAttrValue$34H$34,\n    pXTagAttrValue$34I$34,\n    pXTagAttrValue$34J$34,\n    pXTagAttrValue$34K$34,\n    pXTagAttrValue$34L$34,\n    pXTagAttrValue$34M$34,\n    pXTagAttrValue$34N$34,\n    pXTagAttrValue$34O$34,\n    pXTagAttrValue$34P$34,\n    pXTagAttrValue$34Q$34,\n    pXTagAttrValue$34R$34,\n    pXTagAttrValue$34S$34,\n    pXTagAttrValue$34T$34,\n    pXTagAttrValue$34U$34,\n    pXTagAttrValue$34V$34,\n    pXTagAttrValue$34W$34,\n    pXTagAttrValue$34X$34,\n    pXTagAttrValue$34Y$34,\n    pXTagAttrValue$34Z$34,\n    pXTagAttrValue$340$34,\n    pXTagAttrValue$341$34,\n    pXTagAttrValue$342$34,\n    pXTagAttrValue$343$34,\n    pXTagAttrValue$344$34,\n    pXTagAttrValue$345$34,\n    pXTagAttrValue$346$34,\n    pXTagAttrValue$347$34,\n    pXTagAttrValue$348$34,\n    pXTagAttrValue$349$34,\n    pXTagAttrValue$34$colon$34,\n    pXTagAttrValue$34$44$34,\n    pXTagAttrValue$34$59$34,\n    pXTagAttrValue$34$prime$34,\n    pXTagAttrValue$34$bang$34,\n    pXTagAttrValue$34$qmark$34,\n    pXTagAttrValue$34$at$34,\n    pXTagAttrValue$34$hash$34,\n    pXTagAttrValue$34$dollar$34,\n    pXTagAttrValue$34$percent$34,\n    pXTagAttrValue$34$up$34,\n    pXTagAttrValue$34$amp$34,\n    pXTagAttrValue$34$times$34,\n    pXTagAttrValue$34$40$34,\n    pXTagAttrValue$34$41$34,\n    pXTagAttrValue$34_$34,\n    pXTagAttrValue$34$minus$34,\n    pXTagAttrValue$34$eq$34,\n    pXTagAttrValue$34$96$34,\n    pXTagAttrValue$34$tilde$34,\n    pXTagAttrValue$34$less$34,\n    pXTagAttrValue$34$greater$34,\n    pXTagAttrValue$34$div$34,\n    pXTagAttrValue$34$dot$34,\n    pXTagAttrValue$34$bslash$bslash$34,\n    pXTagAttrValue$34$32$34,\n    pXTagAttrValue$34$bslashx09$34,\n    pXTagAttrValue$34$bslashx0a$34,\n    pXTagAttrValue$34$bslash$34$34,\n    commendEndCandidate2$34$greater$34,\n    commendEndCandidate2,\n    commendEndCandidate1$34$minus$34,\n    commendEndCandidate1,\n    skipUntilCommentEnd$34$minus$34,\n    skipUntilCommentEnd,\n    closeOrRepeat$34$div$34,\n    closeOrRepeat$34$bang$34,\n    closeOrRepeat,\n    pXBody$34$less$34,\n    pXBody1,\n    pXBody,\n    pursxToElementConsInsert,\n    pursxToElementConsAttr,\n    pursxToElementNil\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Number from \"../Data.Number/index.js\";\nvar Degrees = /* #__PURE__ */ (function () {\n    function Degrees() {\n\n    };\n    Degrees.value = new Degrees();\n    return Degrees;\n})();\nvar Radians = /* #__PURE__ */ (function () {\n    function Radians() {\n\n    };\n    Radians.value = new Radians();\n    return Radians;\n})();\nvar Turns = /* #__PURE__ */ (function () {\n    function Turns() {\n\n    };\n    Turns.value = new Turns();\n    return Turns;\n})();\nvar Angle = function (x) {\n    return x;\n};\nvar semigroupAngle = {\n    append: function (v) {\n        return function (v1) {\n            return v + v1;\n        };\n    }\n};\nvar monoidAngle = {\n    mempty: 0.0,\n    Semigroup0: function () {\n        return semigroupAngle;\n    }\n};\nvar groupAngle = {\n    invert: function (v) {\n        return -v;\n    },\n    Monoid0: function () {\n        return monoidAngle;\n    }\n};\nvar turnsToRadians = function (turns) {\n    return turns * 2.0 * Data_Number.pi;\n};\nvar sine = function (v) {\n    return Data_Number.sin(v);\n};\nvar radiansToTurns = function (radians) {\n    return radians / (2.0 * Data_Number.pi);\n};\nvar radiansToDegrees = function (radians) {\n    return (radians * 180.0) / Data_Number.pi;\n};\nvar degreesToRadians = function (degrees) {\n    return (degrees * Data_Number.pi) / 180.0;\n};\nvar cosine = function (v) {\n    return Data_Number.cos(v);\n};\nvar construct = function (x) {\n    return function (v) {\n        if (v instanceof Radians) {\n            return x;\n        };\n        if (v instanceof Degrees) {\n            return degreesToRadians(x);\n        };\n        if (v instanceof Turns) {\n            return turnsToRadians(x);\n        };\n        throw new Error(\"Failed pattern match at Data.Angle (line 24, column 3 - line 27, column 38): \" + [ v.constructor.name ]);\n    };\n};\nvar as = function (v) {\n    return function (v1) {\n        if (v1 instanceof Radians) {\n            return v;\n        };\n        if (v1 instanceof Degrees) {\n            return radiansToDegrees(v);\n        };\n        if (v1 instanceof Turns) {\n            return radiansToTurns(v);\n        };\n        throw new Error(\"Failed pattern match at Data.Angle (line 31, column 3 - line 34, column 36): \" + [ v1.constructor.name ]);\n    };\n};\nvar arctan = function (y) {\n    return function (x) {\n        return Data_Number.atan2(y)(x);\n    };\n};\nexport {\n    Degrees,\n    Radians,\n    Turns,\n    sine,\n    cosine,\n    arctan,\n    construct,\n    as,\n    semigroupAngle,\n    monoidAngle,\n    groupAngle\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar $$undefined = Data_Unit.unit;\nexport {\n    $$undefined as undefined\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Typelevel_Undefined from \"../Data.Typelevel.Undefined/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nvar mod = /* #__PURE__ */ Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);\nvar div = /* #__PURE__ */ Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt);\nvar toInt = function (dict) {\n    return dict.toInt;\n};\nvar toInt$prime = function (dictNat) {\n    var toInt1 = toInt(dictNat);\n    return function (v) {\n        return toInt1(Data_Typelevel_Undefined[\"undefined\"]);\n    };\n};\nvar natD9 = {\n    toInt: function (v) {\n        return 9;\n    }\n};\nvar posD9 = {\n    Nat0: function () {\n        return natD9;\n    }\n};\nvar natD8 = {\n    toInt: function (v) {\n        return 8;\n    }\n};\nvar posD8 = {\n    Nat0: function () {\n        return natD8;\n    }\n};\nvar natD7 = {\n    toInt: function (v) {\n        return 7;\n    }\n};\nvar posD7 = {\n    Nat0: function () {\n        return natD7;\n    }\n};\nvar natD6 = {\n    toInt: function (v) {\n        return 6;\n    }\n};\nvar posD6 = {\n    Nat0: function () {\n        return natD6;\n    }\n};\nvar natD5 = {\n    toInt: function (v) {\n        return 5;\n    }\n};\nvar posD5 = {\n    Nat0: function () {\n        return natD5;\n    }\n};\nvar natD4 = {\n    toInt: function (v) {\n        return 4;\n    }\n};\nvar posD4 = {\n    Nat0: function () {\n        return natD4;\n    }\n};\nvar natD3 = {\n    toInt: function (v) {\n        return 3;\n    }\n};\nvar posD3 = {\n    Nat0: function () {\n        return natD3;\n    }\n};\nvar natD2 = {\n    toInt: function (v) {\n        return 2;\n    }\n};\nvar posD2 = {\n    Nat0: function () {\n        return natD2;\n    }\n};\nvar natD1 = {\n    toInt: function (v) {\n        return 1;\n    }\n};\nvar posD1 = {\n    Nat0: function () {\n        return natD1;\n    }\n};\nvar natD0 = {\n    toInt: function (v) {\n        return 0;\n    }\n};\nvar div10Dec = function (dictNat) {\n    return function (v) {\n        return Data_Typelevel_Undefined[\"undefined\"];\n    };\n};\nvar subLastDec = function (dictNat) {\n    var div10Dec1 = div10Dec(dictNat);\n    return function (dictNat1) {\n        var $146 = toInt(dictNat1);\n        return function ($147) {\n            return (function (v) {\n                return 10 * v | 0;\n            })($146(div10Dec1($147)));\n        };\n    };\n};\nvar posNatD0 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD0(dictPos))(Nat0)(n);\n        }\n    };\n};\nvar posPosD0 = function (dictPos) {\n    var posNatD01 = posNatD0(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD01;\n        }\n    };\n};\nvar posNatD1 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD1(dictPos))(Nat0)(n) + 1 | 0;\n        }\n    };\n};\nvar posPosD1 = function (dictPos) {\n    var posNatD11 = posNatD1(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD11;\n        }\n    };\n};\nvar posNatD2 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD2(dictPos))(Nat0)(n) + 2 | 0;\n        }\n    };\n};\nvar posPosD2 = function (dictPos) {\n    var posNatD21 = posNatD2(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD21;\n        }\n    };\n};\nvar posNatD3 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD3(dictPos))(Nat0)(n) + 3 | 0;\n        }\n    };\n};\nvar posPosD3 = function (dictPos) {\n    var posNatD31 = posNatD3(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD31;\n        }\n    };\n};\nvar posNatD4 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD4(dictPos))(Nat0)(n) + 4 | 0;\n        }\n    };\n};\nvar posPosD4 = function (dictPos) {\n    var posNatD41 = posNatD4(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD41;\n        }\n    };\n};\nvar posNatD5 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD5(dictPos))(Nat0)(n) + 5 | 0;\n        }\n    };\n};\nvar posPosD5 = function (dictPos) {\n    var posNatD51 = posNatD5(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD51;\n        }\n    };\n};\nvar posNatD6 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD6(dictPos))(Nat0)(n) + 6 | 0;\n        }\n    };\n};\nvar posPosD6 = function (dictPos) {\n    var posNatD61 = posNatD6(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD61;\n        }\n    };\n};\nvar posNatD7 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD7(dictPos))(Nat0)(n) + 7 | 0;\n        }\n    };\n};\nvar posPosD7 = function (dictPos) {\n    var posNatD71 = posNatD7(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD71;\n        }\n    };\n};\nvar posNatD8 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD8(dictPos))(Nat0)(n) + 8 | 0;\n        }\n    };\n};\nvar posPosD8 = function (dictPos) {\n    var posNatD81 = posNatD8(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD81;\n        }\n    };\n};\nvar posNatD9 = function (dictPos) {\n    var Nat0 = dictPos.Nat0();\n    return {\n        toInt: function (n) {\n            return subLastDec(posNatD9(dictPos))(Nat0)(n) + 9 | 0;\n        }\n    };\n};\nvar posPosD9 = function (dictPos) {\n    var posNatD91 = posNatD9(dictPos);\n    return {\n        Nat0: function () {\n            return posNatD91;\n        }\n    };\n};\nvar reifyIntP = function ($copy_i) {\n    return function ($copy_f) {\n        var $tco_var_i = $copy_i;\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(i, f) {\n            if (i < 1) {\n                $tco_done = true;\n                return Partial_Unsafe.unsafeCrashWith(\"reifyIntP: integral < 1\");\n            };\n            if (i === 1) {\n                $tco_done = true;\n                return f(posD1)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 2) {\n                $tco_done = true;\n                return f(posD2)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 3) {\n                $tco_done = true;\n                return f(posD3)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 4) {\n                $tco_done = true;\n                return f(posD4)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 5) {\n                $tco_done = true;\n                return f(posD5)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 6) {\n                $tco_done = true;\n                return f(posD6)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 7) {\n                $tco_done = true;\n                return f(posD7)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 8) {\n                $tco_done = true;\n                return f(posD8)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (i === 9) {\n                $tco_done = true;\n                return f(posD9)(Data_Typelevel_Undefined[\"undefined\"]);\n            };\n            if (Data_Boolean.otherwise) {\n                var f9 = function (dictPos) {\n                    var f10 = f(posPosD9(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f8 = function (dictPos) {\n                    var f10 = f(posPosD8(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f7 = function (dictPos) {\n                    var f10 = f(posPosD7(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f6 = function (dictPos) {\n                    var f10 = f(posPosD6(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f5 = function (dictPos) {\n                    var f10 = f(posPosD5(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f4 = function (dictPos) {\n                    var f10 = f(posPosD4(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f3 = function (dictPos) {\n                    var f10 = f(posPosD3(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f2 = function (dictPos) {\n                    var f10 = f(posPosD2(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f11 = function (dictPos) {\n                    var f10 = f(posPosD1(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var f0 = function (dictPos) {\n                    var f10 = f(posPosD0(dictPos));\n                    return function (v) {\n                        return f10(Data_Typelevel_Undefined[\"undefined\"]);\n                    };\n                };\n                var m = mod(i)(10);\n                var d = div(i)(10);\n                if (m === 0) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f0(dictPos);\n                    };\n                    return;\n                };\n                if (m === 1) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f11(dictPos);\n                    };\n                    return;\n                };\n                if (m === 2) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f2(dictPos);\n                    };\n                    return;\n                };\n                if (m === 3) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f3(dictPos);\n                    };\n                    return;\n                };\n                if (m === 4) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f4(dictPos);\n                    };\n                    return;\n                };\n                if (m === 5) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f5(dictPos);\n                    };\n                    return;\n                };\n                if (m === 6) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f6(dictPos);\n                    };\n                    return;\n                };\n                if (m === 7) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f7(dictPos);\n                    };\n                    return;\n                };\n                if (m === 8) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f8(dictPos);\n                    };\n                    return;\n                };\n                if (m === 9) {\n                    $tco_var_i = d;\n                    $copy_f = function (dictPos) {\n                        return f9(dictPos);\n                    };\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Typelevel.Num.Sets (line 88, column 24 - line 98, column 26): \" + [ m.constructor.name ]);\n            };\n            throw new Error(\"Failed pattern match at Data.Typelevel.Num.Sets (line 73, column 1 - line 73, column 63): \" + [ i.constructor.name, f.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($tco_var_i, $copy_f);\n        };\n        return $tco_result;\n    };\n};\nvar reifyInt = function (i) {\n    return function (f) {\n        if (i < 0) {\n            return Partial_Unsafe.unsafeCrashWith(\"reifyInt: integral < 0\");\n        };\n        if (i === 0) {\n            return f(natD0)(Data_Typelevel_Undefined[\"undefined\"]);\n        };\n        if (Data_Boolean.otherwise) {\n            return reifyIntP(i)(function (dictPos) {\n                return f(dictPos.Nat0());\n            });\n        };\n        throw new Error(\"Failed pattern match at Data.Typelevel.Num.Sets (line 67, column 1 - line 67, column 62): \" + [ i.constructor.name, f.constructor.name ]);\n    };\n};\nexport {\n    toInt,\n    toInt$prime,\n    subLastDec,\n    div10Dec,\n    reifyInt,\n    reifyIntP,\n    natD0,\n    natD1,\n    natD2,\n    natD3,\n    natD4,\n    natD5,\n    natD6,\n    natD7,\n    natD8,\n    natD9,\n    posNatD0,\n    posNatD1,\n    posNatD2,\n    posNatD3,\n    posNatD4,\n    posNatD5,\n    posNatD6,\n    posNatD7,\n    posNatD8,\n    posNatD9,\n    posD1,\n    posD2,\n    posD3,\n    posD4,\n    posD5,\n    posD6,\n    posD7,\n    posD8,\n    posD9,\n    posPosD0,\n    posPosD1,\n    posPosD2,\n    posPosD3,\n    posPosD4,\n    posPosD5,\n    posPosD6,\n    posPosD7,\n    posPosD8,\n    posPosD9\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Enum from \"../Data.Enum/index.js\";\nimport * as Data_Typelevel_Num_Aliases from \"../Data.Typelevel.Num.Aliases/index.js\";\nimport * as Data_Typelevel_Num_Sets from \"../Data.Typelevel.Num.Sets/index.js\";\nimport * as Data_Unfoldable1 from \"../Data.Unfoldable1/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar enumFromTo = /* #__PURE__ */ Data_Enum.enumFromTo(Data_Enum.enumInt)(Data_Unfoldable1.unfoldable1Array);\nvar proxy = /* #__PURE__ */ (function () {\n    return Type_Proxy[\"Proxy\"].value;\n})();\nvar knownInt = function (dictNat) {\n    return Data_Typelevel_Num_Sets[\"toInt$prime\"](dictNat);\n};\nvar natsUnder = function (dictNat) {\n    var knownInt1 = knownInt(dictNat);\n    return function (proxy1) {\n        var n = knownInt1(proxy1);\n        return enumFromTo(0)(n - 1 | 0);\n    };\n};\nexport {\n    knownInt,\n    natsUnder,\n    proxy\n};\nexport {\n    d10,\n    d11,\n    d12,\n    d13,\n    d14,\n    d15,\n    d16,\n    d17,\n    d18,\n    d19,\n    d20,\n    d21,\n    d22,\n    d23,\n    d24,\n    d25,\n    d26,\n    d27,\n    d28,\n    d29,\n    d30,\n    d31,\n    d32,\n    d33,\n    d34,\n    d35,\n    d36,\n    d37,\n    d38,\n    d39,\n    d40,\n    d41,\n    d42,\n    d43,\n    d44,\n    d45,\n    d46,\n    d47,\n    d48,\n    d49,\n    d50,\n    d51,\n    d52,\n    d53,\n    d54,\n    d55,\n    d56,\n    d57,\n    d58,\n    d59,\n    d60,\n    d61,\n    d62,\n    d63,\n    d64,\n    d65,\n    d66,\n    d67,\n    d68,\n    d69,\n    d70,\n    d71,\n    d72,\n    d73,\n    d74,\n    d75,\n    d76,\n    d77,\n    d78,\n    d79,\n    d80,\n    d81,\n    d82,\n    d83,\n    d84,\n    d85,\n    d86,\n    d87,\n    d88,\n    d89,\n    d90,\n    d91,\n    d92,\n    d93,\n    d94,\n    d95,\n    d96,\n    d97,\n    d98,\n    d99\n} from \"../Data.Typelevel.Num.Aliases/index.js\";\nexport {\n    toInt$prime\n} from \"../Data.Typelevel.Num.Sets/index.js\";\nexport {\n    Proxy\n} from \"../Type.Proxy/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Nat from \"../Data.Nat/index.js\";\nimport * as Data_Ring from \"../Data.Ring/index.js\";\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar coerce = /* #__PURE__ */ Safe_Coerce.coerce();\nvar eq = /* #__PURE__ */ Data_Eq.eq(Data_Eq.eqInt);\nvar mod = /* #__PURE__ */ Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);\nvar div = /* #__PURE__ */ Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt);\nvar Precedes = /* #__PURE__ */ (function () {\n    function Precedes() {\n\n    };\n    Precedes.value = new Precedes();\n    return Precedes;\n})();\nvar Exceeds = /* #__PURE__ */ (function () {\n    function Exceeds() {\n\n    };\n    Exceeds.value = new Exceeds();\n    return Exceeds;\n})();\nvar Equal = /* #__PURE__ */ (function () {\n    function Equal() {\n\n    };\n    Equal.value = new Equal();\n    return Equal;\n})();\nvar Opposite = /* #__PURE__ */ (function () {\n    function Opposite() {\n\n    };\n    Opposite.value = new Opposite();\n    return Opposite;\n})();\nvar MkCyclic = function (x) {\n    return x;\n};\nvar finitaryCyclic = function (dictPos) {\n    return {\n        inhabitants: coerce(Data_Nat.natsUnder(dictPos.Nat0())(Data_Nat.proxy))\n    };\n};\nvar eqCyclicOrdering = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof Precedes && y instanceof Precedes) {\n                return true;\n            };\n            if (x instanceof Exceeds && y instanceof Exceeds) {\n                return true;\n            };\n            if (x instanceof Equal && y instanceof Equal) {\n                return true;\n            };\n            if (x instanceof Opposite && y instanceof Opposite) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar eqCyclic = {\n    eq: function (x) {\n        return function (y) {\n            return x === y;\n        };\n    }\n};\nvar unCyclic = function (v) {\n    return v;\n};\nvar even = /* #__PURE__ */ (function () {\n    var $69 = eq(0);\n    return function ($70) {\n        return $69((function (v) {\n            return mod(v)(2);\n        })($70));\n    };\n})();\nvar cyclic = function (dictPos) {\n    var knownInt = Data_Nat.knownInt(dictPos.Nat0());\n    return function (k) {\n        return mod(k)(knownInt(Data_Nat.proxy));\n    };\n};\nvar semiringCyclic = function (dictPos) {\n    var cyclic1 = cyclic(dictPos);\n    return {\n        zero: 0,\n        one: cyclic1(1),\n        add: function (v) {\n            return function (v1) {\n                return cyclic1(v + v1 | 0);\n            };\n        },\n        mul: function (v) {\n            return function (v1) {\n                return cyclic1(v * v1 | 0);\n            };\n        }\n    };\n};\nvar ringCyclic = function (dictPos) {\n    var cyclic1 = cyclic(dictPos);\n    var semiringCyclic1 = semiringCyclic(dictPos);\n    return {\n        sub: function (v) {\n            return function (v1) {\n                return cyclic1(v - v1 | 0);\n            };\n        },\n        Semiring0: function () {\n            return semiringCyclic1;\n        }\n    };\n};\nvar distance = function (dictPos) {\n    var sub1 = Data_Ring.sub(ringCyclic(dictPos));\n    return function (a) {\n        return function (b) {\n            var v = sub1(a)(b);\n            var v1 = sub1(b)(a);\n            var $65 = v < v1;\n            if ($65) {\n                return v;\n            };\n            return v1;\n        };\n    };\n};\nvar compareCyclic = function (dictPos) {\n    var knownInt = Data_Nat.knownInt(dictPos.Nat0());\n    var sub1 = Data_Ring.sub(ringCyclic(dictPos));\n    return function (a) {\n        return function (b) {\n            var k = knownInt(Data_Nat.proxy);\n            var halfway = div(k)(2);\n            var difference = unCyclic(sub1(b)(a));\n            var $66 = difference === 0;\n            if ($66) {\n                return Equal.value;\n            };\n            var $67 = even(k) && difference === halfway;\n            if ($67) {\n                return Opposite.value;\n            };\n            var $68 = difference <= halfway;\n            if ($68) {\n                return Precedes.value;\n            };\n            return Exceeds.value;\n        };\n    };\n};\nexport {\n    cyclic,\n    unCyclic,\n    compareCyclic,\n    Precedes,\n    Exceeds,\n    Equal,\n    Opposite,\n    distance,\n    eqCyclic,\n    semiringCyclic,\n    ringCyclic,\n    finitaryCyclic,\n    eqCyclicOrdering\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Enum from \"../Data.Enum/index.js\";\nimport * as Data_Unfoldable1 from \"../Data.Unfoldable1/index.js\";\nvar inhabitants = function (dict) {\n    return dict.inhabitants;\n};\nvar boundedEnumInhabitants = function (dictBounded) {\n    var bottom = Data_Bounded.bottom(dictBounded);\n    var top = Data_Bounded.top(dictBounded);\n    return function (dictEnum) {\n        return Data_Enum.enumFromTo(dictEnum)(Data_Unfoldable1.unfoldable1Array)(bottom)(top);\n    };\n};\nexport {\n    inhabitants,\n    boundedEnumInhabitants\n};\n", "export const intercalate = function (separator) {\n  return function (xs) {\n    return xs.join(separator);\n  };\n};\n", "// Generated by purs version 0.15.10\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);\nvar genericShowArgsNoArguments = {\n    genericShowArgs: function (v) {\n        return [  ];\n    }\n};\nvar genericShowArgsArgument = function (dictShow) {\n    var show = Data_Show.show(dictShow);\n    return {\n        genericShowArgs: function (v) {\n            return [ show(v) ];\n        }\n    };\n};\nvar genericShowArgs = function (dict) {\n    return dict.genericShowArgs;\n};\nvar genericShowArgsProduct = function (dictGenericShowArgs) {\n    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);\n    return function (dictGenericShowArgs1) {\n        var genericShowArgs2 = genericShowArgs(dictGenericShowArgs1);\n        return {\n            genericShowArgs: function (v) {\n                return append(genericShowArgs1(v.value0))(genericShowArgs2(v.value1));\n            }\n        };\n    };\n};\nvar genericShowConstructor = function (dictGenericShowArgs) {\n    var genericShowArgs1 = genericShowArgs(dictGenericShowArgs);\n    return function (dictIsSymbol) {\n        var reflectSymbol = Data_Symbol.reflectSymbol(dictIsSymbol);\n        return {\n            \"genericShow'\": function (v) {\n                var ctor = reflectSymbol(Type_Proxy[\"Proxy\"].value);\n                var v1 = genericShowArgs1(v);\n                if (v1.length === 0) {\n                    return ctor;\n                };\n                return \"(\" + ($foreign.intercalate(\" \")(append([ ctor ])(v1)) + \")\");\n            }\n        };\n    };\n};\nvar genericShow$prime = function (dict) {\n    return dict[\"genericShow'\"];\n};\nvar genericShowNoConstructors = {\n    \"genericShow'\": function (a) {\n        return genericShow$prime(genericShowNoConstructors)(a);\n    }\n};\nvar genericShowSum = function (dictGenericShow) {\n    var genericShow$prime1 = genericShow$prime(dictGenericShow);\n    return function (dictGenericShow1) {\n        var genericShow$prime2 = genericShow$prime(dictGenericShow1);\n        return {\n            \"genericShow'\": function (v) {\n                if (v instanceof Data_Generic_Rep.Inl) {\n                    return genericShow$prime1(v.value0);\n                };\n                if (v instanceof Data_Generic_Rep.Inr) {\n                    return genericShow$prime2(v.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar genericShow = function (dictGeneric) {\n    var from = Data_Generic_Rep.from(dictGeneric);\n    return function (dictGenericShow) {\n        var genericShow$prime1 = genericShow$prime(dictGenericShow);\n        return function (x) {\n            return genericShow$prime1(from(x));\n        };\n    };\n};\nexport {\n    genericShow$prime,\n    genericShow,\n    genericShowArgs,\n    genericShowNoConstructors,\n    genericShowArgsNoArguments,\n    genericShowSum,\n    genericShowArgsProduct,\n    genericShowConstructor,\n    genericShowArgsArgument\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Alternative from \"../Control.Alternative/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Cyclic from \"../Data.Cyclic/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Finitary from \"../Data.Finitary/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Group from \"../Data.Group/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Permutation from \"../Data.Permutation/index.js\";\nimport * as Data_Show_Generic from \"../Data.Show.Generic/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Typelevel_Num_Sets from \"../Data.Typelevel.Num.Sets/index.js\";\nimport * as Partial_Unsafe from \"../Partial.Unsafe/index.js\";\nvar genericShowConstructor = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments);\nvar eq = /* #__PURE__ */ Data_Eq.eq(Data_Cyclic.eqCyclic);\nvar fromJust = /* #__PURE__ */ Data_Maybe.fromJust();\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar posPosD8 = /* #__PURE__ */ Data_Typelevel_Num_Sets.posPosD8(Data_Typelevel_Num_Sets.posD1);\nvar cyclic = /* #__PURE__ */ Data_Cyclic.cyclic(posPosD8);\nvar div = /* #__PURE__ */ Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt);\nvar mod = /* #__PURE__ */ Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(Data_Maybe.functorMaybe);\nvar lookup = /* #__PURE__ */ Data_Map_Internal.lookup(Data_Ord.ordInt);\nvar fromFoldable = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Data_Ord.ordInt);\nvar inhabitants = /* #__PURE__ */ Data_Finitary.inhabitants(/* #__PURE__ */ Data_Cyclic.finitaryCyclic(posPosD8));\nvar cycles = /* #__PURE__ */ Data_Permutation.cycles(Data_Foldable.foldableArray);\nvar cycle = /* #__PURE__ */ Data_Permutation.cycle(Data_Foldable.foldableArray);\nvar pow = /* #__PURE__ */ Data_Group.pow(/* #__PURE__ */ Data_Permutation.groupPermutation(/* #__PURE__ */ Data_Typelevel_Num_Sets.posNatD4(Data_Typelevel_Num_Sets.posD5)));\nvar alt = /* #__PURE__ */ Control_Alt.alt(Data_Maybe.altMaybe);\nvar applySecond = /* #__PURE__ */ Control_Apply.applySecond(Data_Maybe.applyMaybe);\nvar guard = /* #__PURE__ */ Control_Alternative.guard(Data_Maybe.alternativeMaybe);\nvar pure = /* #__PURE__ */ Control_Applicative.pure(Data_Maybe.applicativeMaybe);\nvar Clockwise = /* #__PURE__ */ (function () {\n    function Clockwise() {\n\n    };\n    Clockwise.value = new Clockwise();\n    return Clockwise;\n})();\nvar AntiClockwise = /* #__PURE__ */ (function () {\n    function AntiClockwise() {\n\n    };\n    AntiClockwise.value = new AntiClockwise();\n    return AntiClockwise;\n})();\nvar LeftRing = /* #__PURE__ */ (function () {\n    function LeftRing() {\n\n    };\n    LeftRing.value = new LeftRing();\n    return LeftRing;\n})();\nvar CenterRing = /* #__PURE__ */ (function () {\n    function CenterRing() {\n\n    };\n    CenterRing.value = new CenterRing();\n    return CenterRing;\n})();\nvar RightRing = /* #__PURE__ */ (function () {\n    function RightRing() {\n\n    };\n    RightRing.value = new RightRing();\n    return RightRing;\n})();\nvar Rotation = function (x) {\n    return x;\n};\nvar Motion = function (x) {\n    return x;\n};\nvar Location = function (x) {\n    return x;\n};\nvar White = /* #__PURE__ */ (function () {\n    function White() {\n\n    };\n    White.value = new White();\n    return White;\n})();\nvar Yellow = /* #__PURE__ */ (function () {\n    function Yellow() {\n\n    };\n    Yellow.value = new Yellow();\n    return Yellow;\n})();\nvar Black = /* #__PURE__ */ (function () {\n    function Black() {\n\n    };\n    Black.value = new Black();\n    return Black;\n})();\nvar Red = /* #__PURE__ */ (function () {\n    function Red() {\n\n    };\n    Red.value = new Red();\n    return Red;\n})();\nvar Green = /* #__PURE__ */ (function () {\n    function Green() {\n\n    };\n    Green.value = new Green();\n    return Green;\n})();\nvar Blue = /* #__PURE__ */ (function () {\n    function Blue() {\n\n    };\n    Blue.value = new Blue();\n    return Blue;\n})();\nvar Gemini = function (x) {\n    return x;\n};\nvar ChoseLeft = /* #__PURE__ */ (function () {\n    function ChoseLeft() {\n\n    };\n    ChoseLeft.value = new ChoseLeft();\n    return ChoseLeft;\n})();\nvar ChoseRight = /* #__PURE__ */ (function () {\n    function ChoseRight() {\n\n    };\n    ChoseRight.value = new ChoseRight();\n    return ChoseRight;\n})();\nvar Obvious = /* #__PURE__ */ (function () {\n    function Obvious(value0) {\n        this.value0 = value0;\n    };\n    Obvious.create = function (value0) {\n        return new Obvious(value0);\n    };\n    return Obvious;\n})();\nvar Ambiguous = /* #__PURE__ */ (function () {\n    function Ambiguous(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Ambiguous.create = function (value0) {\n        return function (value1) {\n            return new Ambiguous(value0, value1);\n        };\n    };\n    return Ambiguous;\n})();\nvar genericColor_ = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return White.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {\n            return Yellow.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {\n            return Black.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {\n            return Red.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {\n            return Green.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {\n            return Blue.value;\n        };\n        throw new Error(\"Failed pattern match at Data.Gemini (line 124, column 1 - line 124, column 32): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof White) {\n            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n        };\n        if (x instanceof Yellow) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));\n        };\n        if (x instanceof Black) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));\n        };\n        if (x instanceof Red) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));\n        };\n        if (x instanceof Green) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));\n        };\n        if (x instanceof Blue) {\n            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)))));\n        };\n        throw new Error(\"Failed pattern match at Data.Gemini (line 124, column 1 - line 124, column 32): \" + [ x.constructor.name ]);\n    }\n};\nvar showColor = {\n    show: /* #__PURE__ */ Data_Show_Generic.genericShow(genericColor_)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n        reflectSymbol: function () {\n            return \"White\";\n        }\n    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n        reflectSymbol: function () {\n            return \"Yellow\";\n        }\n    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n        reflectSymbol: function () {\n            return \"Black\";\n        }\n    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n        reflectSymbol: function () {\n            return \"Red\";\n        }\n    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({\n        reflectSymbol: function () {\n            return \"Green\";\n        }\n    }))(/* #__PURE__ */ genericShowConstructor({\n        reflectSymbol: function () {\n            return \"Blue\";\n        }\n    })))))))\n};\nvar finitaryRotationDirection = /* #__PURE__ */ (function () {\n    return {\n        inhabitants: [ Clockwise.value, AntiClockwise.value ]\n    };\n})();\nvar finitaryRing = /* #__PURE__ */ (function () {\n    return {\n        inhabitants: [ LeftRing.value, CenterRing.value, RightRing.value ]\n    };\n})();\nvar eqRing = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof LeftRing && y instanceof LeftRing) {\n                return true;\n            };\n            if (x instanceof CenterRing && y instanceof CenterRing) {\n                return true;\n            };\n            if (x instanceof RightRing && y instanceof RightRing) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar eq1 = /* #__PURE__ */ Data_Eq.eq(eqRing);\nvar eqLocation = {\n    eq: function (x) {\n        return function (y) {\n            return eq(x.position)(y.position) && eq1(x.ring)(y.ring);\n        };\n    }\n};\nvar eq2 = /* #__PURE__ */ Data_Eq.eq(eqLocation);\nvar notEq = /* #__PURE__ */ Data_Eq.notEq(eqLocation);\nvar unsafeFromJust = function (m) {\n    return fromJust(m);\n};\nvar toPerm = function (dict) {\n    return dict.toPerm;\n};\nvar rotation = function (ring) {\n    return function (direction) {\n        return {\n            ring: ring,\n            direction: direction\n        };\n    };\n};\nvar finitaryRotation = {\n    inhabitants: /* #__PURE__ */ Control_Apply.apply(Control_Apply.applyArray)(/* #__PURE__ */ map(rotation)(/* #__PURE__ */ Data_Finitary.inhabitants(finitaryRing)))(/* #__PURE__ */ Data_Finitary.inhabitants(finitaryRotationDirection))\n};\nvar r = function (amount) {\n    return {\n        amount: amount,\n        rotation: rotation(RightRing.value)(Clockwise.value)\n    };\n};\nvar location = function (ring) {\n    return function (position) {\n        return {\n            ring: ring,\n            position: cyclic(position)\n        };\n    };\n};\nvar l = function (amount) {\n    return {\n        amount: amount,\n        rotation: rotation(LeftRing.value)(Clockwise.value)\n    };\n};\nvar divMod = function (x) {\n    return function (y) {\n        return new Data_Tuple.Tuple(div(x)(y), mod(x)(y));\n    };\n};\nvar indexToLocation = function (n) {\n    var v = divMod(n)(18);\n    var ring = (function () {\n        if (v.value0 === 0) {\n            return LeftRing.value;\n        };\n        if (v.value0 === 1) {\n            return CenterRing.value;\n        };\n        if (v.value0 === 2) {\n            return RightRing.value;\n        };\n        return Partial_Unsafe.unsafeCrashWith(\"indexToLocation\");\n    })();\n    return {\n        ring: ring,\n        position: cyclic(v.value1)\n    };\n};\nvar disk = function (color) {\n    return function (label) {\n        return {\n            color: color,\n            label: label\n        };\n    };\n};\nvar c = function (amount) {\n    return {\n        amount: amount,\n        rotation: rotation(CenterRing.value)(Clockwise.value)\n    };\n};\nvar ambiguousLocations = /* #__PURE__ */ (function () {\n    return [ {\n        canonical: location(LeftRing.value)(2),\n        alternate: location(CenterRing.value)(16)\n    }, {\n        canonical: location(LeftRing.value)(7),\n        alternate: location(CenterRing.value)(11)\n    }, {\n        canonical: location(CenterRing.value)(2),\n        alternate: location(RightRing.value)(16)\n    }, {\n        canonical: location(CenterRing.value)(7),\n        alternate: location(RightRing.value)(11)\n    } ];\n})();\nvar canonical = function (location1) {\n    return Data_Maybe.fromMaybe(location1)(mapFlipped(Data_Array.find(function (v) {\n        return eq2(v.alternate)(location1);\n    })(ambiguousLocations))(function (v) {\n        return v.canonical;\n    }));\n};\nvar locationToIndex = /* #__PURE__ */ (function () {\n    var ringIndex = function (v) {\n        if (v instanceof LeftRing) {\n            return 0;\n        };\n        if (v instanceof CenterRing) {\n            return 1;\n        };\n        if (v instanceof RightRing) {\n            return 2;\n        };\n        throw new Error(\"Failed pattern match at Data.Gemini (line 267, column 17 - line 270, column 22): \" + [ v.constructor.name ]);\n    };\n    var index = function (v) {\n        return (ringIndex(v.ring) * 18 | 0) + Data_Cyclic.unCyclic(v.position) | 0;\n    };\n    return function ($141) {\n        return index(canonical($141));\n    };\n})();\nvar geminiLookup = function (location1) {\n    return function (v) {\n        return unsafeFromJust(lookup(locationToIndex(location1))(v));\n    };\n};\nvar unsafeGemini = function (dictFunctor) {\n    var map1 = Data_Functor.map(dictFunctor);\n    return function (dictFoldable) {\n        var fromFoldable1 = fromFoldable(dictFoldable);\n        return function (items) {\n            return fromFoldable1(map1(function (v) {\n                return new Data_Tuple.Tuple(locationToIndex(v.value0), v.value1);\n            })(items));\n        };\n    };\n};\nvar initialGemini = /* #__PURE__ */ (function () {\n    return unsafeGemini(Data_Functor.functorArray)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(location(LeftRing.value)(12), disk(Red.value)(1)), new Data_Tuple.Tuple(location(LeftRing.value)(13), disk(Red.value)(2)), new Data_Tuple.Tuple(location(LeftRing.value)(14), disk(Red.value)(3)), new Data_Tuple.Tuple(location(LeftRing.value)(15), disk(Red.value)(4)), new Data_Tuple.Tuple(location(LeftRing.value)(16), disk(Red.value)(5)), new Data_Tuple.Tuple(location(LeftRing.value)(17), disk(Red.value)(6)), new Data_Tuple.Tuple(location(LeftRing.value)(0), disk(Red.value)(7)), new Data_Tuple.Tuple(location(LeftRing.value)(1), disk(Red.value)(8)), new Data_Tuple.Tuple(location(LeftRing.value)(3), disk(Yellow.value)(1)), new Data_Tuple.Tuple(location(LeftRing.value)(4), disk(Yellow.value)(2)), new Data_Tuple.Tuple(location(LeftRing.value)(5), disk(Yellow.value)(3)), new Data_Tuple.Tuple(location(LeftRing.value)(6), disk(Yellow.value)(4)), new Data_Tuple.Tuple(location(LeftRing.value)(7), disk(Yellow.value)(5)), new Data_Tuple.Tuple(location(LeftRing.value)(8), disk(Yellow.value)(6)), new Data_Tuple.Tuple(location(LeftRing.value)(9), disk(Yellow.value)(7)), new Data_Tuple.Tuple(location(LeftRing.value)(10), disk(Yellow.value)(8)), new Data_Tuple.Tuple(location(LeftRing.value)(11), disk(Yellow.value)(9)), new Data_Tuple.Tuple(location(CenterRing.value)(12), disk(Black.value)(1)), new Data_Tuple.Tuple(location(CenterRing.value)(13), disk(Black.value)(2)), new Data_Tuple.Tuple(location(CenterRing.value)(14), disk(Black.value)(3)), new Data_Tuple.Tuple(location(CenterRing.value)(15), disk(Black.value)(4)), new Data_Tuple.Tuple(location(CenterRing.value)(16), disk(Black.value)(5)), new Data_Tuple.Tuple(location(CenterRing.value)(17), disk(Black.value)(6)), new Data_Tuple.Tuple(location(CenterRing.value)(0), disk(Black.value)(7)), new Data_Tuple.Tuple(location(CenterRing.value)(1), disk(Black.value)(8)), new Data_Tuple.Tuple(location(CenterRing.value)(3), disk(Blue.value)(1)), new Data_Tuple.Tuple(location(CenterRing.value)(4), disk(Blue.value)(2)), new Data_Tuple.Tuple(location(CenterRing.value)(5), disk(Blue.value)(3)), new Data_Tuple.Tuple(location(CenterRing.value)(6), disk(Blue.value)(4)), new Data_Tuple.Tuple(location(CenterRing.value)(7), disk(Blue.value)(5)), new Data_Tuple.Tuple(location(CenterRing.value)(8), disk(Blue.value)(6)), new Data_Tuple.Tuple(location(CenterRing.value)(9), disk(Blue.value)(7)), new Data_Tuple.Tuple(location(CenterRing.value)(10), disk(Blue.value)(8)), new Data_Tuple.Tuple(location(RightRing.value)(3), disk(Green.value)(1)), new Data_Tuple.Tuple(location(RightRing.value)(4), disk(Green.value)(2)), new Data_Tuple.Tuple(location(RightRing.value)(5), disk(Green.value)(3)), new Data_Tuple.Tuple(location(RightRing.value)(6), disk(Green.value)(4)), new Data_Tuple.Tuple(location(RightRing.value)(7), disk(Green.value)(5)), new Data_Tuple.Tuple(location(RightRing.value)(8), disk(Green.value)(6)), new Data_Tuple.Tuple(location(RightRing.value)(9), disk(Green.value)(7)), new Data_Tuple.Tuple(location(RightRing.value)(10), disk(Green.value)(8)), new Data_Tuple.Tuple(location(RightRing.value)(12), disk(White.value)(1)), new Data_Tuple.Tuple(location(RightRing.value)(13), disk(White.value)(2)), new Data_Tuple.Tuple(location(RightRing.value)(14), disk(White.value)(3)), new Data_Tuple.Tuple(location(RightRing.value)(15), disk(White.value)(4)), new Data_Tuple.Tuple(location(RightRing.value)(16), disk(White.value)(5)), new Data_Tuple.Tuple(location(RightRing.value)(17), disk(White.value)(6)), new Data_Tuple.Tuple(location(RightRing.value)(0), disk(White.value)(7)), new Data_Tuple.Tuple(location(RightRing.value)(1), disk(White.value)(8)), new Data_Tuple.Tuple(location(RightRing.value)(2), disk(White.value)(9)) ]);\n})();\nvar toPermutationRotation = {\n    toPerm: function (v) {\n        var positions = (function () {\n            if (v.direction instanceof Clockwise) {\n                return inhabitants;\n            };\n            if (v.direction instanceof AntiClockwise) {\n                return Data_Array.reverse(inhabitants);\n            };\n            throw new Error(\"Failed pattern match at Data.Gemini (line 148, column 19 - line 150, column 51): \" + [ v.direction.constructor.name ]);\n        })();\n        return Data_Permutation.fromCycles(cycles(Data_Array.singleton(cycle(Data_Function.flip(map)(positions)(function ($142) {\n            return locationToIndex(Location((function (v1) {\n                return {\n                    ring: v.ring,\n                    position: v1\n                };\n            })($142)));\n        })))));\n    }\n};\nvar toPerm1 = /* #__PURE__ */ toPerm(toPermutationRotation);\nvar toPermutationMotion = {\n    toPerm: function (v) {\n        return pow(toPerm1(v.rotation))(Data_Cyclic.unCyclic(v.amount));\n    }\n};\nvar alternate = function (location1) {\n    return location1;\n};\nvar sibling = function (l1) {\n    var c1 = canonical(l1);\n    var a = alternate(l1);\n    return alt(applySecond(guard(notEq(a)(l1)))(pure(a)))(applySecond(guard(notEq(c1)(l1)))(pure(c1)));\n};\nvar dragRing = function (loc1) {\n    var v = sibling(loc1);\n    if (v instanceof Data_Maybe.Nothing) {\n        return new Obvious(loc1);\n    };\n    if (v instanceof Data_Maybe.Just) {\n        return new Ambiguous(loc1, v.value0);\n    };\n    throw new Error(\"Failed pattern match at Data.Gemini (line 242, column 3 - line 244, column 37): \" + [ v.constructor.name ]);\n};\nexport {\n    geminiLookup,\n    initialGemini,\n    l,\n    c,\n    r,\n    Location,\n    indexToLocation,\n    sibling,\n    ambiguousLocations,\n    canonical,\n    LeftRing,\n    CenterRing,\n    RightRing,\n    Rotation,\n    Clockwise,\n    AntiClockwise,\n    White,\n    Yellow,\n    Black,\n    Red,\n    Green,\n    Blue,\n    Motion,\n    toPerm,\n    Obvious,\n    Ambiguous,\n    dragRing,\n    ChoseLeft,\n    ChoseRight,\n    eqLocation,\n    finitaryRotation,\n    finitaryRotationDirection,\n    eqRing,\n    finitaryRing,\n    genericColor_,\n    showColor,\n    toPermutationRotation,\n    toPermutationMotion\n};\n", "// Generated by purs version 0.15.10\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Deku_Control from \"../Deku.Control/index.js\";\nvar span = /* #__PURE__ */ Deku_Control.elementify2(\"span\");\nvar span_ = /* #__PURE__ */ span(/* #__PURE__ */ Control_Plus.empty(Control_Plus.plusArray));\nvar span__ = function (t) {\n    return span_([ Deku_Control.text_(t) ]);\n};\nexport {\n    span,\n    span_,\n    span__\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Angle from \"../Data.Angle/index.js\";\nimport * as Data_Array from \"../Data.Array/index.js\";\nimport * as Data_Cyclic from \"../Data.Cyclic/index.js\";\nimport * as Data_Finitary from \"../Data.Finitary/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Gemini from \"../Data.Gemini/index.js\";\nimport * as Data_Int from \"../Data.Int/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Nat from \"../Data.Nat/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_String_Common from \"../Data.String.Common/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Typelevel_Num_Sets from \"../Data.Typelevel.Num.Sets/index.js\";\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nimport * as Deku_Attributes from \"../Deku.Attributes/index.js\";\nimport * as Deku_Control from \"../Deku.Control/index.js\";\nimport * as Deku_DOM_Attr_Class from \"../Deku.DOM.Attr.Class/index.js\";\nimport * as Deku_DOM_Attr_Style from \"../Deku.DOM.Attr.Style/index.js\";\nimport * as Deku_DOM_Elt_Div from \"../Deku.DOM.Elt.Div/index.js\";\nimport * as Deku_DOM_Elt_Span from \"../Deku.DOM.Elt.Span/index.js\";\nimport * as FRP_Event from \"../FRP.Event/index.js\";\nvar append = /* #__PURE__ */ Data_Semigroup.append(Data_Angle.semigroupAngle);\nvar posPosD8 = /* #__PURE__ */ Data_Typelevel_Num_Sets.posPosD8(Data_Typelevel_Num_Sets.posD1);\nvar show = /* #__PURE__ */ Data_Show.show(Data_Gemini.showColor);\nvar klass_ = /* #__PURE__ */ Deku_Attributes.klass_(Deku_DOM_Attr_Class.attrSpan_ClassString);\nvar klass_1 = /* #__PURE__ */ Deku_Attributes.klass_(Deku_DOM_Attr_Class.attrDiv_ClassString);\nvar pureAttr = /* #__PURE__ */ Deku_Attribute.pureAttr(Deku_DOM_Attr_Style.attrDiv_StyleString);\nvar fold = /* #__PURE__ */ Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString);\nvar show1 = /* #__PURE__ */ Data_Show.show(Data_Show.showNumber);\nvar map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);\nvar inhabitants = /* #__PURE__ */ Data_Finitary.inhabitants(/* #__PURE__ */ Data_Cyclic.finitaryCyclic(posPosD8));\nvar inhabitants1 = /* #__PURE__ */ Data_Finitary.inhabitants(Data_Gemini.finitaryRing);\nvar mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(FRP_Event.functorEvent);\nvar ringClass = /* #__PURE__ */ Data_Semigroup.append(/* #__PURE__ */ Data_Semigroup.semigroupFn(Data_Semigroup.semigroupString))(/* #__PURE__ */ Data_Function[\"const\"](\"ring \"))(function (v) {\n    if (v instanceof Data_Gemini.LeftRing) {\n        return \"left\";\n    };\n    if (v instanceof Data_Gemini.CenterRing) {\n        return \"center\";\n    };\n    if (v instanceof Data_Gemini.RightRing) {\n        return \"right\";\n    };\n    throw new Error(\"Failed pattern match at Gemini.Component.Puzzle (line 109, column 30 - line 112, column 24): \" + [ v.constructor.name ]);\n});\nvar angleOnCircle = function (dictPos) {\n    var knownInt = Data_Nat.knownInt(dictPos.Nat0());\n    return function (k) {\n        var turns = Data_Angle.construct(Data_Int.toNumber(Data_Cyclic.unCyclic(k)) / Data_Int.toNumber(knownInt(Data_Nat.proxy)))(Data_Angle.Turns.value);\n        return append(turns)(Data_Angle.construct(-90.0)(Data_Angle.Degrees.value));\n    };\n};\nvar angleOnCircle1 = /* #__PURE__ */ angleOnCircle(posPosD8);\nvar disk = function (v) {\n    return function (gemini) {\n        var diskAngle = angleOnCircle1(v.position);\n        var color = Data_String_Common.toLower(show((function (v1) {\n            return v1.color;\n        })(Data_Gemini.geminiLookup(v)(gemini))));\n        var v1 = new Data_Tuple.Tuple(43.0 * (1.0 + Data_Angle.cosine(diskAngle)), 43.0 * (1.0 + Data_Angle.sine(diskAngle)));\n        var toLabelSpan = function (label) {\n            return Deku_DOM_Elt_Span.span([ klass_(\"disk-label\") ])([ Deku_Control.text_(label) ]);\n        };\n        return Deku_DOM_Elt_Div.div([ klass_1(\"disk \" + color), pureAttr(Deku_DOM_Attr_Style.Style.value)(fold([ \"left: \", show1(v1.value0), \"%; top: \", show1(v1.value1), \"%\" ])) ])([  ]);\n    };\n};\nvar view = function (gemini) {\n    var disks = function (ring) {\n        return Data_Function.flip(map)(inhabitants)(function (position) {\n            var location = {\n                ring: ring,\n                position: position\n            };\n            return disk(location)(gemini);\n        });\n    };\n    var ringView = function (ring) {\n        return Deku_DOM_Elt_Div.div([ klass_1(ringClass(ring)) ])(disks(ring));\n    };\n    return Deku_DOM_Elt_Div.div([ klass_1(\"gemini\") ])(Data_Array.concat([ [ Deku_DOM_Elt_Div.div([ klass_1(\"background\") ])([  ]) ], map(ringView)(inhabitants1) ]));\n};\nvar component = function (event) {\n    return Deku_Control.switcherFlipped(mapFlipped(event)(function (v) {\n        return v.gemini;\n    }))(view);\n};\nexport {\n    component\n};\n", "// Generated by purs version 0.15.10\nimport * as Data_Gemini from \"../Data.Gemini/index.js\";\nimport * as Data_Map_Internal from \"../Data.Map.Internal/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nvar Prod = /* #__PURE__ */ (function () {\n    function Prod() {\n\n    };\n    Prod.value = new Prod();\n    return Prod;\n})();\nvar Dev = /* #__PURE__ */ (function () {\n    function Dev() {\n\n    };\n    Dev.value = new Dev();\n    return Dev;\n})();\nvar Off = /* #__PURE__ */ (function () {\n    function Off() {\n\n    };\n    Off.value = new Off();\n    return Off;\n})();\nvar FadeIn = /* #__PURE__ */ (function () {\n    function FadeIn() {\n\n    };\n    FadeIn.value = new FadeIn();\n    return FadeIn;\n})();\nvar FadeOut = /* #__PURE__ */ (function () {\n    function FadeOut() {\n\n    };\n    FadeOut.value = new FadeOut();\n    return FadeOut;\n})();\nvar eqConfetti = {\n    eq: function (x) {\n        return function (y) {\n            if (x instanceof Off && y instanceof Off) {\n                return true;\n            };\n            if (x instanceof FadeIn && y instanceof FadeIn) {\n                return true;\n            };\n            if (x instanceof FadeOut && y instanceof FadeOut) {\n                return true;\n            };\n            return false;\n        };\n    }\n};\nvar initialStore = /* #__PURE__ */ (function () {\n    return {\n        gemini: Data_Gemini.initialGemini,\n        hover: Data_Maybe.Nothing.value,\n        drag: Data_Maybe.Nothing.value,\n        options: {\n            showLabels: false,\n            recording: false,\n            mobile: false,\n            confetti: Off.value,\n            highlightPairs: false,\n            showKeyboardShortcuts: false\n        },\n        dom: {\n            ringCenters: Data_Map_Internal.empty,\n            ringRadius: 0.0\n        }\n    };\n})();\nexport {\n    initialStore,\n    Prod,\n    Dev,\n    Off,\n    FadeIn,\n    FadeOut,\n    eqConfetti\n};\nexport {\n    Ambiguous,\n    Obvious,\n    ChoseLeft,\n    ChoseRight,\n    Black,\n    Blue,\n    Green,\n    Red,\n    White,\n    Yellow,\n    Location,\n    Motion,\n    CenterRing,\n    LeftRing,\n    RightRing,\n    Rotation,\n    AntiClockwise,\n    Clockwise,\n    ambiguousLocations,\n    c,\n    canonical,\n    dragRing,\n    geminiLookup,\n    indexToLocation,\n    initialGemini,\n    l,\n    r,\n    sibling,\n    toPerm\n} from \"../Data.Gemini/index.js\";\n", "// Generated by purs version 0.15.10\nimport * as Deku_Attribute from \"../Deku.Attribute/index.js\";\nimport * as Deku_Attributes from \"../Deku.Attributes/index.js\";\nimport * as Deku_Control from \"../Deku.Control/index.js\";\nimport * as Deku_DOM_Attr_Class from \"../Deku.DOM.Attr.Class/index.js\";\nimport * as Deku_DOM_Attr_Href from \"../Deku.DOM.Attr.Href/index.js\";\nimport * as Deku_DOM_Attr_Src from \"../Deku.DOM.Attr.Src/index.js\";\nimport * as Deku_DOM_Elt_Button from \"../Deku.DOM.Elt.Button/index.js\";\nimport * as Deku_DOM_Elt_Div from \"../Deku.DOM.Elt.Div/index.js\";\nimport * as Deku_Do from \"../Deku.Do/index.js\";\nimport * as Deku_Hooks from \"../Deku.Hooks/index.js\";\nimport * as Deku_Pursx from \"../Deku.Pursx/index.js\";\nimport * as Gemini_Component_Puzzle from \"../Gemini.Component.Puzzle/index.js\";\nimport * as Gemini_Types from \"../Gemini.Types/index.js\";\nvar pursxToElementConsInsert = /* #__PURE__ */ Deku_Pursx.pursxToElementConsInsert();\nvar pursxToElementConsAttr = /* #__PURE__ */ Deku_Pursx.pursxToElementConsAttr();\nvar Reflectable$dollarDict = {\n    reflectType: function () {\n        return \"label\";\n    }\n};\nvar labelIsSymbol = {\n    reflectSymbol: function () {\n        return \"label\";\n    }\n};\nvar makePursx = /* #__PURE__ */ Deku_Pursx.makePursx({\n    reflectType: function () {\n        return \"\\x0a    <a class=\\\"link\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" ~linkHref~>\\x0a        <img ~src~ />\\x0a        ~label~\\x0a    </a>\\x0a  \";\n    }\n})()()(/* #__PURE__ */ pursxToElementConsInsert(/* #__PURE__ */ pursxToElementConsAttr(/* #__PURE__ */ pursxToElementConsAttr(Deku_Pursx.pursxToElementNil)({\n    reflectType: function () {\n        return \"src\";\n    }\n})({\n    reflectSymbol: function () {\n        return \"src\";\n    }\n}))({\n    reflectType: function () {\n        return \"linkHref\";\n    }\n})({\n    reflectSymbol: function () {\n        return \"linkHref\";\n    }\n}))(Reflectable$dollarDict)(labelIsSymbol));\nvar href_ = /* #__PURE__ */ Deku_Attributes.href_(Deku_DOM_Attr_Href.attrA_HrefString);\nvar pureAttr = /* #__PURE__ */ Deku_Attribute.pureAttr(Deku_DOM_Attr_Src.attrImg_SrcString);\nvar klass_ = /* #__PURE__ */ Deku_Attributes.klass_(Deku_DOM_Attr_Class.attrDiv_ClassString);\nvar klass_1 = /* #__PURE__ */ Deku_Attributes.klass_(Deku_DOM_Attr_Class.attrButton_ClassString);\nvar makePursx1 = /* #__PURE__ */ Deku_Pursx.makePursx({\n    reflectType: function () {\n        return \"\\x0a    <label class=\\\"checkbox\\\">\\x0a      <span class=\\\"checkbox-label\\\">~label~</span>\\x0a      <input type=\\\"checkbox\\\" />\\x0a    </label>\\x0a  \";\n    }\n})()()(/* #__PURE__ */ pursxToElementConsInsert(Deku_Pursx.pursxToElementNil)(Reflectable$dollarDict)(labelIsSymbol));\nvar hyperlink = function (iconSrc) {\n    return function (linkUrl) {\n        return function (display) {\n            return makePursx(Deku_Pursx.pursx)({\n                linkHref: href_(linkUrl),\n                src: pureAttr(Deku_DOM_Attr_Src.Src.value)(iconSrc),\n                label: Deku_Control.text_(display)\n            });\n        };\n    };\n};\nvar header = /* #__PURE__ */ Deku_DOM_Elt_Div.div([ /* #__PURE__ */ klass_(\"header\") ])([ /* #__PURE__ */ Deku_DOM_Elt_Div.div([ /* #__PURE__ */ klass_(\"control-panel\") ])([ /* #__PURE__ */ Deku_DOM_Elt_Button.button([ /* #__PURE__ */ klass_1(\"action-button\") ])([ /* #__PURE__ */ Deku_Control.text_(\"Scramble\") ]), /* #__PURE__ */ Deku_DOM_Elt_Button.button([ /* #__PURE__ */ klass_1(\"action-button\") ])([ /* #__PURE__ */ Deku_Control.text_(\"Undo\") ]) ]) ]);\nvar footer = /* #__PURE__ */ Deku_DOM_Elt_Div.div([ /* #__PURE__ */ klass_(\"footer\") ])([ /* #__PURE__ */ Deku_DOM_Elt_Div.div([ /* #__PURE__ */ klass_(\"links\") ])([ /* #__PURE__ */ hyperlink(\"./github.png\")(\"https://github.com/CharlesTaylor7/gemini\")(\"View Source\") ]), /* #__PURE__ */ Deku_DOM_Elt_Div.div([ /* #__PURE__ */ klass_(\"explain-controls\") ])([ /* #__PURE__ */ Deku_DOM_Elt_Div.div__(\"Q: Rotate left disk counter clockwise\"), /* #__PURE__ */ Deku_DOM_Elt_Div.div__(\"W: Rotate left disk clockwise\"), /* #__PURE__ */ Deku_DOM_Elt_Div.div__(\"T: Rotate center disk counter clockwise\"), /* #__PURE__ */ Deku_DOM_Elt_Div.div__(\"Y: Rotate center disk clockwise\"), /* #__PURE__ */ Deku_DOM_Elt_Div.div__(\"O: Rotate right disk counter clockwise\"), /* #__PURE__ */ Deku_DOM_Elt_Div.div__(\"P: Rotate right disk clockwise\") ]) ]);\nvar component = /* #__PURE__ */ Deku_Do.bind(/* #__PURE__ */ Deku_Hooks.useState(Gemini_Types.initialStore))(function (v) {\n    return Deku_DOM_Elt_Div.div([ klass_(\"gemini-app\") ])([ Deku_DOM_Elt_Div.div([ klass_(\"main-panel\") ])([ header, Gemini_Component_Puzzle.component(v.value1), footer ]), Deku_DOM_Elt_Div.div([ klass_(\"right-panel\") ])([  ]) ]);\n});\nvar checkBox = function (label) {\n    return makePursx1(Deku_Pursx.pursx)({\n        label: Deku_Control.text_(label)\n    });\n};\nexport {\n    component\n};\n", "// Generated by purs version 0.15.10\nimport * as Deku_Toplevel from \"../Deku.Toplevel/index.js\";\nimport * as Gemini_Component_App from \"../Gemini.Component.App/index.js\";\nvar mainDev = /* #__PURE__ */ Deku_Toplevel[\"runInBody$prime\"](Gemini_Component_App.component);\nvar main = /* #__PURE__ */ Deku_Toplevel.runInBody(Gemini_Component_App.component);\nexport {\n    mainDev,\n    main\n};\n", "import { main } from './output/Main/index.js'; main();\n"],
  "mappings": "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",
  "names": ["unsafeCompareImpl", "lt", "eq", "gt", "x", "y", "ordIntImpl", "unsafeCompareImpl", "refEq", "r1", "r2", "eqIntImpl", "refEq", "$$Proxy", "reflectSymbol", "dict", "unsafeGet", "label", "rec", "eqInt", "eqIntImpl", "eq", "dict", "LT", "GT", "EQ", "intSub", "x", "y", "intAdd", "x", "y", "intMul", "numAdd", "n1", "n2", "numMul", "semiringNumber", "numAdd", "numMul", "semiringInt", "intAdd", "intMul", "mul", "dict", "add", "dict", "ringInt", "intSub", "semiringInt", "ordInt", "ordIntImpl", "LT", "EQ", "GT", "eqInt", "compare", "dict", "greaterThanOrEq", "dictOrd", "compare3", "compare", "a1", "a2", "v", "LT", "lessThan", "lessThanOrEq", "dictOrd", "compare3", "compare", "a1", "a2", "v", "GT", "fastForeachThunk", "as", "i", "l", "fastForeachE", "f", "fastForeachOhE", "o", "a", "objHack", "insertObjHack", "k", "v", "deleteObjHack", "arrayMap", "f", "arr", "l", "result", "i", "semigroupoidFn", "f", "g", "x", "compose", "dict", "identity", "dict", "categoryFn", "x", "semigroupoidFn", "otherwise", "flip", "f", "b", "a", "$$const", "v", "applyFlipped", "x", "f", "map", "dict", "mapFlipped", "dictFunctor", "map1", "fa", "f", "$$void", "$$const", "voidLeft", "x", "functorFn", "compose", "semigroupoidFn", "functorArray", "arrayMap", "concatString", "s1", "s2", "concatArray", "xs", "ys", "semigroupUnit", "v", "v1", "semigroupString", "concatString", "semigroupArray", "concatArray", "append", "dict", "semigroupFn", "dictSemigroup", "append1", "f", "g", "x", "altArray", "append", "semigroupArray", "functorArray", "alt", "dict", "identity", "categoryFn", "apply", "dict", "applySecond", "dictApply", "apply1", "apply", "map", "a", "b", "$$const", "identity", "lift2", "f", "pure", "dict", "liftA1", "dictApplicative", "apply", "pure1", "pure", "f", "unsafeCoerce", "x", "toEffect", "unsafeCoerce", "map_", "f", "a", "pure_", "bind_", "newSTRef", "val", "read", "ref", "modifyImpl", "f", "t", "write", "a", "identity", "categoryFn", "bind", "dict", "bindFlipped", "dictBind", "flip", "join", "dictBind", "bind1", "bind", "m", "identity", "ap", "dictMonad", "bind", "pure", "f", "f$prime", "a$prime", "topChar", "bottomChar", "topNumber", "bottomNumber", "top", "dict", "boundedInt", "ordInt", "bottom", "dict", "showIntImpl", "n", "showNumberImpl", "str", "showNumber", "showNumberImpl", "showInt", "showIntImpl", "show", "dict", "Inl", "value0", "Inr", "NoArguments", "from", "dict", "identity", "categoryFn", "Nothing", "Just", "value0", "maybe", "v", "v1", "v2", "Nothing", "Just", "isNothing", "$$const", "functorMaybe", "v", "v1", "Just", "Nothing", "map", "fromMaybe", "a", "maybe", "identity", "fromJust", "v", "Just", "applyMaybe", "v", "v1", "Just", "map", "Nothing", "functorMaybe", "bindMaybe", "v", "v1", "Just", "Nothing", "applyMaybe", "applicativeMaybe", "Just", "applyMaybe", "altMaybe", "v", "v1", "Nothing", "functorMaybe", "plusMaybe", "alternativeMaybe", "applicativeMaybe", "Left", "value0", "Right", "either", "v", "v1", "v2", "Left", "Right", "hush", "$$const", "Nothing", "Just", "Identity", "x", "functorIdentity", "f", "m", "applyIdentity", "v", "v1", "functorIdentity", "bindIdentity", "f", "applicativeIdentity", "Identity", "monadIdentity", "intDegree", "x", "intDiv", "y", "intMod", "yy", "commutativeRingInt", "ringInt", "mod", "dict", "euclideanRingInt", "intDegree", "intDiv", "intMod", "commutativeRingInt", "monoidUnit", "semigroupUnit", "monoidString", "semigroupString", "mempty", "dict", "monoidFn", "dictMonoid", "mempty1", "semigroupFn", "v", "pureE", "a", "bindE", "f", "$runtime_lazy", "name", "moduleName", "init", "state", "val", "lineNumber", "monadEffect", "applicativeEffect", "bindEffect", "bindE", "$lazy_applyEffect", "pureE", "$lazy_functorEffect", "liftA1", "ap", "functorEffect", "applyEffect", "lift2", "semigroupEffect", "dictSemigroup", "append", "monoidEffect", "dictMonoid", "semigroupEffect1", "mempty", "_new", "val", "read", "ref", "modifyImpl", "f", "t", "write", "val", "$$void", "functorEffect", "$$new", "_new", "modify$prime", "modifyImpl", "modify", "f", "s", "s$prime", "modify_", "$runtime_lazy", "name", "moduleName", "init", "state", "val", "lineNumber", "modify$prime", "modifyImpl", "modify", "f", "s", "s$prime", "functorST", "map_", "monadST", "applicativeST", "bindST", "bind_", "$lazy_applyST", "pure_", "$runtime_lazy", "ap", "functorST", "applyST", "lift2", "pure", "applicativeST", "semigroupST", "dictSemigroup", "lift2", "append", "monoidST", "dictMonoid", "semigroupST1", "semigroupST", "pure", "mempty", "monadSTEffect", "toEffect", "monadEffect", "liftST", "dict", "replicateFill", "count", "value", "result", "replicatePolyfill", "n", "i", "replicateImpl", "fromFoldableImpl", "Cons", "head", "tail", "emptyList", "curryCons", "listToArray", "list", "xs", "foldr", "length", "indexImpl", "just", "nothing", "xs", "i", "findIndexImpl", "just", "nothing", "f", "xs", "i", "l", "_deleteAt", "just", "nothing", "i", "l", "l1", "concat", "xss", "result", "i", "l", "xs", "j", "m", "sortByImpl", "mergeFromTo", "compare", "fromOrdering", "xs1", "xs2", "from", "to", "mid", "j", "k", "x", "y", "c", "xs", "out", "unsafeIndexImpl", "xs", "n", "newSTArray", "pushAllImpl", "as", "xs", "spliceImpl", "i", "howMany", "bs", "xs", "copyImpl", "xs", "freezeImpl", "sortByImpl", "mergeFromTo", "compare", "fromOrdering", "xs1", "xs2", "from", "to", "mid", "j", "k", "x", "y", "c", "xs", "runSTFn1", "fn", "a", "runSTFn2", "b", "runSTFn4", "fn", "a", "b", "c", "d", "splice", "runSTFn4", "spliceImpl", "push", "a", "runSTFn2", "pushAllImpl", "freeze", "runSTFn1", "freezeImpl", "foldrArray", "f", "init", "xs", "acc", "len", "i", "foldlArray", "plusArray", "altArray", "empty", "dict", "Tuple", "value0", "value1", "snd", "v", "functorTuple", "f", "m", "Tuple", "fst", "v", "curry", "f", "a", "b", "Tuple", "coerce", "unsafeCoerce", "coerce", "unwrap", "coerce", "identity", "categoryFn", "foldr", "dict", "traverse_", "dictApplicative", "applySecond", "pure", "dictFoldable", "foldr2", "foldr", "f", "$454", "for_", "traverse_1", "flip", "foldl", "dict", "foldableMaybe", "v", "v1", "v2", "Nothing", "Just", "dictMonoid", "mempty", "foldMapDefaultR", "dictFoldable", "foldr2", "foldr", "dictMonoid", "append", "mempty", "f", "x", "acc", "foldableArray", "foldrArray", "foldlArray", "foldMap", "dict", "fold", "dictFoldable", "foldMap2", "foldMap", "dictMonoid", "identity", "runFn2", "fn", "a", "b", "runFn4", "fn", "a", "b", "c", "d", "mapWithIndexArray", "f", "xs", "l", "result", "i", "mapWithIndex", "dict", "functorWithIndexArray", "mapWithIndexArray", "functorArray", "traverseArrayImpl", "array1", "array2", "b", "array3", "c", "concat2", "xs", "ys", "apply", "map", "pure", "array", "go", "bot", "top", "pivot", "unfoldr1ArrayImpl", "isNothing", "fromJust", "fst", "snd", "f", "b", "result", "value", "tuple", "maybe", "fromJust", "unfoldr1", "dict", "unfoldable1Array", "unfoldr1ArrayImpl", "isNothing", "fromJust", "fst", "snd", "replicate1", "dictUnfoldable1", "unfoldr11", "unfoldr1", "v", "step", "i", "Tuple", "Nothing", "otherwise", "Just", "singleton", "dictUnfoldable1", "replicate1", "map", "functorMaybe", "fromJust", "unsafeIndex", "runFn2", "unsafeIndexImpl", "unsafeIndex1", "index", "runFn4", "indexImpl", "Just", "Nothing", "last", "xs", "length", "findIndex", "runFn4", "findIndexImpl", "Just", "Nothing", "find", "f", "xs", "map", "unsafeIndex1", "deleteAt", "runFn4", "_deleteAt", "Just", "Nothing", "deleteBy", "v", "v1", "v2", "maybe", "i", "fromJust", "findIndex", "foldrWithIndex", "dict", "Nil", "Cons", "value0", "value1", "foldableList", "f", "b", "rev", "go", "$copy_v", "$copy_v1", "$tco_var_v", "$tco_done", "$tco_result", "$tco_loop", "v", "v1", "Nil", "Cons", "$284", "foldl", "flip", "$285", "$copy_b", "$tco_var_b", "$tco_done1", "dictMonoid", "append2", "append", "mempty", "acc", "$286", "$287", "reverse", "go", "$copy_v", "$copy_v1", "$tco_var_v", "$tco_done", "$tco_result", "$tco_loop", "v", "v1", "Nil", "Cons", "$runtime_lazy", "name", "moduleName", "init", "state", "val", "lineNumber", "Leaf", "Node", "value0", "value1", "value2", "value3", "value4", "value5", "Split", "value0", "value1", "value2", "SplitLast", "unsafeNode", "k", "v", "l", "r", "Leaf", "Node", "$277", "singleton", "k", "v", "Node", "Leaf", "unsafeBalancedNode", "height", "rotateLeft", "l", "rk", "rv", "rl", "rr", "unsafeNode", "rotateRight", "lk", "lv", "ll", "lr", "r", "$lazy_unsafeSplit", "$runtime_lazy", "comp", "m", "Split", "Nothing", "LT", "v1", "GT", "EQ", "Just", "unsafeSplit", "$lazy_unsafeSplitLast", "SplitLast", "unsafeSplitLast", "unsafeJoinNodes", "v2", "$lazy_unsafeUnionWith", "$runtime_lazy", "comp", "app", "l", "r", "Leaf", "Node", "v", "unsafeSplit", "l$prime", "r$prime", "Just", "unsafeBalancedNode", "Nothing", "unsafeUnionWith", "unionWith", "dictOrd", "compare", "m1", "m2", "union", "$$const", "lookup", "dictOrd", "compare", "k", "go", "$copy_v", "$tco_done", "$tco_result", "$tco_loop", "v", "Leaf", "Nothing", "Node", "v1", "LT", "GT", "EQ", "Just", "insert", "dictOrd", "compare", "k", "v", "go", "v1", "Leaf", "singleton", "Node", "v2", "LT", "unsafeBalancedNode", "GT", "EQ", "foldableMap", "f", "z", "$lazy_go", "$runtime_lazy", "m$prime", "z$prime", "Leaf", "Node", "go", "m", "dictMonoid", "mempty", "append1", "append", "v", "foldableWithIndexMap", "keys", "foldrWithIndex", "k", "acc", "Cons", "Nil", "empty", "Leaf", "fromFoldable", "dictOrd", "insert1", "insert", "dictFoldable", "foldl", "m", "v", "$$delete", "dictOrd", "compare", "k", "go", "v", "Leaf", "Node", "v1", "LT", "unsafeBalancedNode", "GT", "EQ", "unsafeJoinNodes", "alter", "dictOrd", "compare", "f", "k", "m", "v", "unsafeSplit", "v2", "Nothing", "unsafeJoinNodes", "Just", "unsafeBalancedNode", "filterMap", "dict", "filter", "dict", "coerce", "foldMap", "foldableList", "foldl", "foldr", "union", "dictOrd", "coerce", "toList", "v", "keys", "singleton", "a", "semigroupSet", "dictOrd", "union", "foldableSet", "dictMonoid", "foldMap1", "foldMap", "f", "$98", "$99", "toList", "x", "$100", "foldl", "$101", "$102", "foldr", "$103", "empty", "monoidSet", "dictOrd", "semigroupSet1", "semigroupSet", "empty", "$$delete", "dictOrd", "coerce", "setTimeoutImpl", "ms", "fn", "clearTimeoutImpl", "id", "compare", "ordInt", "setTimeout", "setTimeoutImpl", "eqTimeoutId", "x", "y", "ordTimeoutId", "compare", "clearTimeout", "clearTimeoutImpl", "mkEffectFn1", "fn", "x", "runEffectFn1", "fn", "a", "semigroupEffectFn1", "dictSemigroup", "append", "semigroupEffect", "f1", "f2", "mkEffectFn1", "runEffectFn1", "monoidEffectFn1", "dictMonoid", "mempty", "monoidEffect", "semigroupEffectFn11", "semigroupEffectFn1", "mkEffectFn1", "v", "map", "functorTuple", "pure", "applicativeMaybe", "sampleOnRight", "dict", "keepLatest", "dict", "fix", "dict", "fold", "dictIsEvent", "fix1", "sampleOnRight1", "sampleOnRight", "Alternative0", "alt", "pure1", "pure", "map1", "map", "b", "e", "i", "flip", "mapAccum", "dictIsEvent", "filterMap", "fold1", "fold", "f", "acc", "xs", "snd", "v", "b", "map", "pure", "Tuple", "Nothing", "reallyUnsafeRefEq", "a", "b", "unsafeRefEq", "reallyUnsafeRefEq", "$runtime_lazy", "name", "moduleName", "init", "state", "val", "lineNumber", "for_", "applicativeEffect", "for_1", "foldableMaybe", "pure", "liftST", "monadSTEffect", "monoidEffect", "monoidUnit", "$$void", "functorEffect", "append", "semigroupArray", "mempty", "monoidEffectFn1", "mempty1", "monoidSet", "ordTimeoutId", "$$delete", "append1", "semigroupSet", "for_2", "foldableSet", "apply", "applyEffect", "map", "sampleOnRight", "v", "v1", "b", "k", "latest", "$$new", "Nothing", "c1", "a", "write", "Just", "c2", "o", "read", "for_1", "sampleOnLeft", "f", "merge", "dictFoldable", "foldMap", "monoidEffect", "tf", "liftST", "newSTArray", "u", "$$void", "push", "freeze", "fastForeachThunk", "mailbox$prime", "dictOrd", "alter", "lookup", "r", "empty", "k2", "modify", "append", "deleteBy", "unsafeRefEq", "fastForeachE", "keepLatest", "cancelInner", "pure", "cancelOuter", "ci", "c", "functorEvent", "map1", "map", "filter", "p", "filter$prime", "create$prime", "subscribers", "objHack", "idx", "rk", "ix", "insertObjHack", "modify_", "mempty", "deleteObjHack", "fastForeachOhE", "fix", "compactableEvent", "identity", "categoryFn", "xs", "Left", "Right", "filterableEvent", "$232", "filterMap", "$233", "either", "$$const", "$234", "$235", "hush", "biSampleOn", "latest1", "replay1", "latest2", "replay2", "capturing", "res", "samples1", "samples2", "last", "splice", "length", "subscribe", "i", "$lazy_backdoor", "$runtime_lazy", "create_", "makeEvent_", "e", "makeEventO_", "makePureEvent_", "makeLemmingEvent_", "kx", "mkEffectFn1", "makeLemmingEventO_", "subscribe_", "subscribeO_", "subscribePureO_", "subscribePure_", "bus_", "$lazy_create", "memoize_", "hot_", "unsubscribe", "mailbox_", "mailboxed_", "mailbox$prime1", "delay_", "tid", "mempty1", "canceler", "localId", "id", "setTimeout", "lid", "maybe", "$$delete", "append1", "singleton", "ids", "for_2", "clearTimeout", "backdoor", "bus", "i", "v", "backdoor", "makeEvent", "i", "v", "backdoor", "makeLemmingEventO", "i", "v", "backdoor", "memoize", "i", "v", "backdoor", "applyEvent", "a", "b", "biSampleOn", "map1", "applyFlipped", "functorEvent", "lift2", "semigroupEvent", "dictSemigroup", "append", "applicativeEvent", "v", "k", "pure", "pure2", "monoidEvent", "dictMonoid", "semigroupEvent1", "semigroupEvent", "pure2", "mempty", "altEvent", "v", "v1", "tf", "k", "apply", "map", "v2", "v3", "functorEvent", "plusEvent", "v", "v1", "pure", "altEvent", "alternativeEvent", "applicativeEvent", "eventIsEvent", "keepLatest", "sampleOnRight", "sampleOnLeft", "fix", "filterableEvent", "get", "dictIsSymbol", "reflectSymbol", "l", "r", "unsafeGet", "Local", "value0", "Global", "Insert", "value0", "Remove", "Logic", "DynamicChildren$prime", "FixedChildren$prime", "EventfulElement$prime", "Element$prime", "eqScope", "x", "y", "Local", "Global", "fixed", "a", "FixedChildren$prime", "envy", "EventfulElement$prime", "dyn", "DynamicChildren$prime", "traverse1Impl", "Cont", "fn", "emptyList", "ConsCell", "head", "tail", "finalCell", "consList", "x", "xs", "listToArray", "list", "arr", "apply", "map", "f", "buildFrom", "ys", "go", "acc", "currentLen", "last", "built", "array", "result", "reflectType", "dict", "_copyST", "m", "k", "empty", "runST", "f", "_foldM", "bind", "f", "mz", "m", "acc", "g", "k", "z", "toArrayWithKey", "f", "m", "r", "k", "keys", "poke", "k", "v", "m", "deleteImpl", "foldr", "foldableArray", "values", "toArrayWithKey", "v", "v1", "thawST", "_copyST", "mutate", "f", "m", "runST", "s", "thawST", "insert", "k", "v", "mutate", "poke", "fold", "_foldM", "applyFlipped", "foldMap", "dictMonoid", "append1", "append", "mempty", "f", "acc", "k", "v", "foldableObject", "z", "m", "foldr", "values", "foldMap1", "$$const", "$$delete", "k", "mutate", "deleteImpl", "keepLatest", "eventIsEvent", "map", "functorEvent", "merge", "foldableArray", "bind", "bindST", "pure1", "pure", "applicativeST", "map1", "map", "functorST", "for_", "applicativeST", "for_1", "foldableMaybe", "$$void", "functorST", "for_2", "for_", "foldableArray", "map3", "map", "functorArray", "append", "semigroupST", "semigroupString", "traverse_", "applicativeST", "foldableArray", "append1", "semigroupArray", "foldl", "foldableObject", "applySecond", "applyST", "Begin", "Middle", "End", "flatten", "v", "psr", "interpreter", "element", "v1", "FixedChildren$prime", "merge", "map3", "EventfulElement$prime", "keepLatest", "map", "Element$prime", "DynamicChildren$prime", "makeLemmingEventO", "v2", "v3", "cancelInner", "newSTRef", "empty", "cancelOuter", "inner", "myUnsubId", "myUnsub", "pure1", "eltsUnsubId", "eltsUnsub", "myIds", "myImmediateCancellation", "myScope", "map1", "Local", "Global", "append", "stageRef", "Begin", "c0", "kid$prime", "stage", "read", "Logic", "Middle", "curId", "traverse_", "i", "Remove", "$$void", "write", "End", "mic", "idRef", "for_2", "old", "for_1", "pnt", "myu", "eltu", "modify", "$$delete", "Insert", "c1", "$132", "$133", "id", "append1", "insert", "mican", "bind", "foldl", "applySecond", "CatQueue", "value0", "value1", "uncons", "$copy_v", "$tco_done", "$tco_result", "$tco_loop", "v", "Nil", "Nothing", "CatQueue", "reverse", "Cons", "Just", "Tuple", "snoc", "a", "$$null", "v", "Nil", "empty", "CatQueue", "Nil", "CatNil", "CatCons", "value0", "value1", "link", "v", "v1", "CatNil", "CatCons", "snoc", "foldr", "k", "b", "q", "foldl", "$copy_v", "$copy_v1", "$copy_v2", "$tco_var_v", "$tco_var_v1", "$tco_done", "$tco_result", "$tco_loop", "v2", "Nil", "Cons", "go", "$copy_xs", "$copy_ys", "$tco_var_xs", "$tco_done1", "xs", "ys", "uncons", "Nothing", "x", "i", "Just", "Tuple", "$66", "$$null", "empty", "CatNil", "append", "link", "semigroupCatList", "append", "snoc", "cat", "a", "append", "CatCons", "empty", "$runtime_lazy", "name", "moduleName", "init", "state", "val", "lineNumber", "append", "semigroupCatList", "Free", "value0", "value1", "Return", "Bind", "toView", "$copy_v", "$tco_done", "$tco_result", "$tco_loop", "v", "runExpF", "v2", "concatF", "r", "append", "uncons", "Nothing", "Just", "a", "resume$prime", "k", "j", "f", "v", "toView", "Return", "Bind", "resume", "dictFunctor", "map1", "map", "g", "i", "Left", "Right", "fromView", "Free", "empty", "wrap", "unsafeCoerce", "freeMonad", "freeApplicative", "freeBind", "freeFunctor", "k", "f", "bindFlipped", "$189", "pure", "$190", "v", "Free", "snoc", "$lazy_freeApply", "$191", "fromView", "Return", "$runtime_lazy", "ap", "pure", "freeApplicative", "liftF", "f", "fromView", "Bind", "$192", "pure", "identity", "categoryFn", "profunctorFn", "a2b", "c2d", "b2c", "$18", "dimap", "dict", "lcmap", "dictProfunctor", "dimap1", "identity", "pure", "applicativeEvent", "Prop$prime", "value0", "Cb$prime", "Unset$prime", "Attribute", "x", "unsafeUnAttribute", "coerce", "unsafeAttribute", "Attribute", "prop$prime", "Prop$prime", "attr", "dict", "pureAttr", "dictAttr", "attr1", "attr", "a", "b", "pure", "map", "functorEvent", "lcmap", "profunctorFn", "unwrap", "eq", "eqScope", "coerce", "pure", "applicativeST", "pure1", "applicativeEvent", "empty", "plusEvent", "merge", "foldableArray", "unsafeSetPos$prime", "i", "v", "g", "v1", "f", "ii", "Element$prime", "lcmap", "v2", "EventfulElement$prime", "map", "unsafeSetPos", "$104", "Just", "remove", "Remove", "portalFlatten", "pos", "v", "id", "$105", "unwrap", "v1", "eq", "portalFlatten1", "insert_", "x", "f", "Insert", "b", "unsafeSetPos$prime", "Nothing", "bus", "f", "bussed", "f", "z", "x", "EventfulElement$prime", "coerce", "g", "bus", "map", "v", "bussedUncurried", "$107", "curry", "__internalDekuFlatten", "a", "b", "c", "flatten", "portalFlatten1", "dynify", "es", "go", "fes", "v1", "makeLemmingEventO", "v2", "k", "me", "v3", "Nothing", "dummyParent", "Tuple", "pure1", "Just", "empty", "unsub", "merge", "v4", "pure", "go$prime", "Element$prime", "dyn", "myDyn$prime", "myDyn", "e", "map", "functorEvent", "merge", "foldableArray", "pure", "applicativeEvent", "empty", "plusEvent", "pure1", "applicativeST", "mapAccum", "eventIsEvent", "keepLatest", "filter", "filterableEvent", "eq", "eqInt", "coerce", "unwrap", "eq1", "eqScope", "alt", "altEvent", "append", "semigroupArray", "mapWithIndex", "functorWithIndexArray", "map1", "map", "functorFn", "unsafeSetText", "v", "id", "txt", "map", "$146", "v1", "unsafeSetAttribute", "atts", "$147", "Prop$prime", "Cb$prime", "Unset$prime", "unsafeUnAttribute", "text", "txt", "go", "v", "v1", "makeLemmingEventO", "v2", "k", "me", "unsub", "merge", "pure", "unsafeSetText", "maybe", "empty", "p", "go$prime", "Element$prime", "text_", "switcher", "f", "event", "counter", "fn", "b", "Tuple", "mapAccum", "dyn", "keepLatest", "memoize", "cenv", "map", "$$const", "remove", "filter", "$148", "eq", "$149", "snd", "insert_", "coerce", "switcherFlipped", "flip", "portalFlatten", "pos", "id", "$150", "unwrap", "eq1", "portalFlatten1", "__internalDekuFlatten", "a", "b", "v", "flatten", "portalFlatten1", "deku", "root", "go", "children", "v1", "makeLemmingEventO", "v2", "k", "alt", "pure", "Just", "Local", "v3", "pure1", "Nothing", "elementify", "tag", "atts", "me", "unsub", "merge", "append", "unsafeSetAttribute", "maybe", "p", "elementify2", "en", "attributes", "kids", "aa", "empty", "step1", "arr", "Element$prime", "fixed", "coerce", "mapWithIndex", "map1", "unsafeSetPos", "attributeParent_", "runOnJust", "a", "state", "dom", "pos", "dynFamily", "i", "j", "terminalDyn", "inserter", "k", "anchorNode", "tmpDekuId", "tmpDynFamily", "tmpPos", "df", "makeDynBeacon_", "runOnJust", "tryHydration", "a", "state", "startBeacon", "endBeacon", "ptr", "svgTags", "getDynFamily", "id", "state", "getParent", "getScope", "makeElement_", "runOnJust", "tryHydration", "a", "dom", "ptr", "main", "svgTags", "makeText_", "maybe", "parent", "i", "ptrSplit", "textWasBlank", "makeFFIDOMSnapshot", "setProp_", "avv", "setCb_", "el", "e", "unsetAttribute_", "setText_", "makePursx_", "tmp", "html", "verb", "cache", "scope", "pxScope", "iRan", "entries", "key", "namespacedKey", "makeRoot_", "giveNewParent_", "just", "b", "insertAt", "node", "x", "y", "runMe", "z", "aPos", "myPos", "nodes", "didInsert", "pos", "dkid", "df", "disconnectElement_", "dummy", "stateHasKey", "deleteFromCache_", "removeDynBeacon_", "includesImpl", "searchString", "str", "hasArrayFrom", "hasStringIterator", "hasFromCodePoint", "hasCodePointAt", "guard", "dictAlternative", "pure", "empty", "v", "top", "boundedInt", "bottom", "bind", "bindMaybe", "voidLeft", "functorMaybe", "guard", "alternativeMaybe", "succ", "dict", "pred", "dict", "enumInt", "n", "$153", "top", "Just", "Nothing", "$154", "bottom", "ordInt", "enumFromTo", "dictEnum", "Ord0", "eq1", "eq", "lessThan1", "lessThan", "succ1", "succ", "lessThanOrEq1", "lessThanOrEq", "pred1", "pred", "greaterThanOrEq1", "greaterThanOrEq", "dictUnfoldable1", "singleton", "unfoldr1", "go", "step", "op", "to", "a", "Tuple", "bind", "a$prime", "voidLeft", "guard", "v1", "otherwise", "fromNumberImpl", "just", "nothing", "toNumber", "n", "isFiniteImpl", "cos", "floor", "remainder", "n", "m", "sin", "pi", "top", "boundedInt", "bottom", "fromNumber", "fromNumberImpl", "Just", "Nothing", "unsafeClamp", "x", "isFiniteImpl", "toNumber", "top", "bottom", "otherwise", "fromMaybe", "floor", "$39", "unsafeClamp", "toLower", "s", "includes", "searchString", "s", "includesImpl", "mod", "euclideanRingInt", "fromJust", "unSeed", "v", "seedMin", "lcgM", "seedMax", "mkSeed", "x", "ensureBetween", "min", "max", "n", "rangeSize", "n$prime", "mod", "$25", "lcgC", "lcgA", "lcgPerturb", "d", "v", "fromJust", "fromNumber", "remainder", "toNumber", "lcgM", "lcgNext", "state", "dict", "functorStateT", "dictFunctor", "map", "f", "v", "s", "v1", "Tuple", "monadStateT", "dictMonad", "applicativeStateT", "bindStateT", "bind", "v", "f", "s", "v1", "v3", "applyStateT", "functorStateT1", "functorStateT", "ap", "pure", "a", "Tuple", "monadStateStateT", "dictMonad", "pure", "monadStateT1", "monadStateT", "f", "$200", "evalState", "v", "s", "v1", "monadStateStateT", "monadIdentity", "state", "functorStateT", "functorIdentity", "mul", "semiringNumber", "add", "semiringNumber", "unGen", "v", "lcgStep", "f", "s", "Tuple", "unSeed", "$94", "$95", "lcgNext", "state", "functorGen", "functorStateT", "map2", "map", "evalGen", "$104", "evalState", "unGen", "applyGen", "applyStateT", "monadIdentity", "apply", "chooseInt$prime", "a", "b", "numB", "toNumber", "numA", "clamp", "x", "remainder", "choose31BitPosNumber", "map2", "lcgStep", "choose32BitPosNumber", "add", "mul", "$109", "floor", "chooseInt", "$101", "arbitrary", "dict", "arbInt", "chooseInt", "map", "functorEvent", "map1", "functorFn", "map2", "functorEffect", "$$void", "functorST", "show", "showInt", "arbitrary", "arbInt", "add", "semiringInt", "pure1", "pure", "applicativeEffect", "mempty", "monoidFn", "monoidST", "monoidUnit", "empty", "plusEvent", "coerce", "unwrap", "eq", "eqScope", "join", "freeBind", "pure2", "applicativeEvent", "EFunctionOfFFIDOMSnapshot", "x", "functorEFunctionOfFFIDOMS", "f", "m", "map", "map1", "map2", "runOnJust", "v", "v1", "Just", "pure1", "sendToPos", "a", "state", "scope", "getScope", "parent", "getParent", "dynFamily", "getDynFamily", "newA", "mempty", "envy", "empty", "coerce", "giveNewParent_", "__internalDekuFlatten", "b", "c", "flatten", "pos", "id", "$82", "unwrap", "eq", "giveNewParentOrReconstruct", "di", "just", "roj", "gnp", "join", "liftF", "pure2", "ffi", "needsFreshNut", "map", "wrap", "hasIdAndInScope", "hasId", "stateHasKey", "Global", "Local", "$79", "includes", "fullDOMInterpret", "seed", "l", "s", "read", "o", "show", "evalGen", "arbitrary", "mkSeed", "$$void", "modify", "add", "$83", "makeElement_", "$84", "EFunctionOfFFIDOMSnapshot", "$85", "makeDynBeacon_", "$86", "$87", "attributeParent_", "$88", "$89", "makeRoot_", "$90", "makeText_", "maybe", "$91", "$92", "makePursx_", "$93", "$94", "setProp_", "$95", "$96", "setCb_", "$97", "$98", "unsetAttribute_", "$99", "$100", "setText_", "$101", "$102", "removeDynBeacon_", "$103", "deleteFromCache_", "$104", "disconnectElement_", "windowImpl", "nullable", "a", "f", "toMaybe", "n", "nullable", "Nothing", "Just", "_body", "doc", "map", "functorEffect", "body", "doc", "map", "toMaybe", "_body", "toElement", "unsafeCoerce", "document", "window", "keepLatest", "eventIsEvent", "map", "functorEvent", "resume", "functorEFunctionOfFFIDOMS", "monoidEffect", "monoidUnit", "mempty", "monoidEvent", "monoidFn", "pure", "applicativeEffect", "bind", "bindEffect", "mapFlipped", "functorEffect", "liftST", "monadSTEffect", "mempty1", "map1", "functorMaybe", "$$void", "flattenToSingleEvent", "ffi", "go$prime", "n", "$52", "map", "go", "$53", "keepLatest", "$54", "v", "Left", "f", "Right", "mempty", "resume", "i", "makeEvent", "k", "bind", "pure", "runInElement$prime", "elt", "eee", "makeFFIDOMSnapshot", "evt", "mapFlipped", "liftST", "newSTRef", "$55", "deku", "$56", "fullDOMInterpret", "subscribe", "runInBody$prime", "b$prime", "windowImpl", "document", "body", "maybe", "mempty1", "map1", "toElement", "runInBody", "a", "$$void", "Class", "attrSpan_ClassString", "v", "value", "unsafeAttribute", "prop$prime", "attrDiv_ClassString", "v", "value", "unsafeAttribute", "prop$prime", "attrButton_ClassString", "v", "value", "unsafeAttribute", "prop$prime", "Href", "attrA_HrefString", "v", "value", "unsafeAttribute", "prop$prime", "Style", "attrDiv_StyleString", "v", "value", "unsafeAttribute", "prop$prime", "mapFlipped", "functorEvent", "pure", "applicativeEvent", "klass", "dictAttr", "attr", "e", "mapFlipped", "v", "Class", "klass_", "$25", "$26", "pure", "href", "dictAttr", "attr", "e", "mapFlipped", "v", "Href", "href_", "$29", "$30", "pure", "Src", "attrImg_SrcString", "v", "value", "unsafeAttribute", "prop$prime", "button", "elementify2", "div", "elementify2", "div_", "empty", "plusArray", "div__", "text_", "bind", "f", "a", "Aff", "EMPTY", "PURE", "THROW", "CATCH", "SYNC", "ASYNC", "BIND", "BRACKET", "FORK", "SEQ", "MAP", "APPLY", "ALT", "CONS", "RESUME", "RELEASE", "FINALIZER", "FINALIZED", "FORKED", "FIBER", "THUNK", "tag", "_1", "_2", "_3", "AffCtr", "fn", "nonCanceler", "error", "runEff", "eff", "runSync", "left", "right", "runAsync", "k", "Scheduler", "limit", "size", "ix", "queue", "draining", "drain", "thunk", "cb", "i", "tmp", "Supervisor", "util", "fibers", "fiberId", "count", "fiber", "fid", "result", "killError", "killCount", "kills", "kill", "SUSPENDED", "CONTINUE", "STEP_BIND", "STEP_RESULT", "PENDING", "RETURN", "COMPLETED", "Fiber", "supervisor", "aff", "runTick", "status", "step", "fail", "interrupt", "bhead", "btail", "attempts", "bracketCount", "joinId", "joins", "rethrow", "run", "localRunTick", "attempt", "e", "sequential", "onComplete", "join", "jid", "canceler", "runPar", "par", "killId", "early", "root", "head", "tail", "kid", "loop", "lhs", "rhs", "resolve", "cancel", "innerKills", "newKills", "killCb", "_pure", "_throwError", "_liftEffect", "Aff", "makeAff", "Aff", "_delay", "setDelay", "k", "clearDelay", "t", "right", "ms", "Aff", "cb", "timer", "_sequential", "map", "functorEvent", "alt", "altEvent", "pure", "applicativeEvent", "useState$prime", "bussedUncurried", "useMemoized", "e", "f1", "ee", "memoize", "eee", "map", "v", "eeee", "envy", "useState", "a", "f", "bind", "useState$prime", "alt", "pure", "m", "Tuple", "empty", "plusEvent", "merge", "foldableArray", "pure", "applicativeEvent", "pure1", "applicativeST", "Reflectable$dollarDict", "alt", "altEvent", "map", "functorEvent", "lcmap", "profunctorFn", "unwrap", "eq", "eqScope", "coerce", "pursxToElementNil", "v", "v1", "v2", "empty", "Element$prime", "v3", "v4", "pursxToElement", "dict", "pursx", "$$Proxy", "domableToNode", "step1", "makePursx$prime", "dictReflectable", "reflectType", "dictReflectable1", "reflectType1", "dictPursxToElement", "pursxToElement1", "verb", "html", "r", "go", "makeLemmingEventO", "k1", "me", "pxScope", "unsub", "merge", "pure", "maybe", "p", "ee", "makePursx", "makePursx$prime1", "Reflectable$dollarDict", "pursxToElementConsAttr", "dictPursxToElement", "pursxToElement1", "pursxToElement", "dictReflectable", "reflectType", "dictIsSymbol", "get", "pxScope", "v", "r", "v1", "$$Proxy", "insert", "Element$prime", "parent", "v2", "alt", "map", "lcmap", "unsafeUnAttribute", "v3", "Prop$prime", "Cb$prime", "Unset$prime", "domableToNode", "__internalDekuFlatten", "a", "b", "c", "flatten", "pos", "v", "id", "$543", "unwrap", "v1", "eq", "coerce", "pursxToElementConsInsert", "dictPursxToElement", "pursxToElement1", "pursxToElement", "dictReflectable", "reflectType", "dictIsSymbol", "get", "pxScope", "r", "$$Proxy", "insert", "Element$prime", "info", "di", "alt", "Just", "v2", "pure1", "Nothing", "domableToNode", "Degrees", "Radians", "Turns", "semigroupAngle", "v", "v1", "turnsToRadians", "turns", "pi", "sine", "v", "sin", "degreesToRadians", "degrees", "pi", "cosine", "v", "cos", "construct", "x", "Radians", "Degrees", "Turns", "turnsToRadians", "$$undefined", "toInt", "dict", "toInt$prime", "dictNat", "toInt1", "v", "$$undefined", "natD1", "v", "posD1", "div10Dec", "dictNat", "v", "$$undefined", "subLastDec", "div10Dec1", "dictNat1", "$146", "toInt", "$147", "posNatD8", "dictPos", "Nat0", "subLastDec", "posPosD8", "posNatD81", "enumFromTo", "enumInt", "unfoldable1Array", "proxy", "$$Proxy", "knownInt", "dictNat", "toInt$prime", "natsUnder", "knownInt1", "proxy1", "n", "coerce", "mod", "euclideanRingInt", "finitaryCyclic", "dictPos", "coerce", "natsUnder", "proxy", "eqCyclic", "x", "y", "unCyclic", "v", "cyclic", "dictPos", "knownInt", "k", "mod", "proxy", "inhabitants", "dict", "intercalate", "separator", "xs", "append", "semigroupArray", "genericShowArgsNoArguments", "v", "genericShowArgs", "dict", "genericShowConstructor", "dictGenericShowArgs", "genericShowArgs1", "genericShowArgs", "dictIsSymbol", "reflectSymbol", "v", "ctor", "$$Proxy", "v1", "intercalate", "append", "genericShow$prime", "dict", "genericShowSum", "dictGenericShow", "genericShow$prime1", "genericShow$prime", "dictGenericShow1", "genericShow$prime2", "v", "Inl", "Inr", "genericShow", "dictGeneric", "from", "x", "genericShowConstructor", "genericShowArgsNoArguments", "eq", "eqCyclic", "fromJust", "posPosD8", "posD1", "cyclic", "mapFlipped", "functorMaybe", "lookup", "ordInt", "fromFoldable", "LeftRing", "CenterRing", "RightRing", "White", "Yellow", "Black", "Red", "Green", "Blue", "genericColor_", "x", "Inl", "White", "Inr", "Yellow", "Black", "Red", "Green", "Blue", "NoArguments", "showColor", "genericShow", "genericShowSum", "genericShowConstructor", "finitaryRing", "LeftRing", "CenterRing", "RightRing", "eqRing", "x", "y", "eq1", "eq", "eqLocation", "eq2", "unsafeFromJust", "m", "fromJust", "location", "ring", "position", "cyclic", "disk", "color", "label", "ambiguousLocations", "location", "LeftRing", "CenterRing", "RightRing", "canonical", "location1", "fromMaybe", "mapFlipped", "find", "v", "eq2", "locationToIndex", "ringIndex", "index", "unCyclic", "$141", "geminiLookup", "unsafeFromJust", "lookup", "unsafeGemini", "dictFunctor", "map1", "map", "dictFoldable", "fromFoldable1", "fromFoldable", "items", "Tuple", "initialGemini", "functorArray", "foldableArray", "disk", "Red", "Yellow", "Black", "Blue", "Green", "White", "span", "elementify2", "append", "semigroupAngle", "posPosD8", "posD1", "show", "showColor", "klass_", "attrSpan_ClassString", "klass_1", "attrDiv_ClassString", "pureAttr", "attrDiv_StyleString", "fold", "foldableArray", "monoidString", "show1", "showNumber", "map", "functorArray", "inhabitants", "finitaryCyclic", "inhabitants1", "finitaryRing", "mapFlipped", "functorEvent", "ringClass", "semigroupFn", "semigroupString", "$$const", "v", "LeftRing", "CenterRing", "RightRing", "angleOnCircle", "dictPos", "knownInt", "k", "turns", "construct", "toNumber", "unCyclic", "proxy", "Turns", "Degrees", "angleOnCircle1", "disk", "gemini", "diskAngle", "color", "toLower", "v1", "geminiLookup", "Tuple", "cosine", "sine", "toLabelSpan", "label", "span", "text_", "div", "Style", "view", "disks", "ring", "flip", "position", "location", "ringView", "concat", "component", "event", "switcherFlipped", "Off", "initialStore", "initialGemini", "Nothing", "Off", "empty", "pursxToElementConsInsert", "pursxToElementConsAttr", "Reflectable$dollarDict", "labelIsSymbol", "makePursx", "pursxToElementNil", "href_", "attrA_HrefString", "pureAttr", "attrImg_SrcString", "klass_", "attrDiv_ClassString", "klass_1", "attrButton_ClassString", "hyperlink", "iconSrc", "linkUrl", "display", "makePursx", "pursx", "href_", "pureAttr", "Src", "text_", "header", "div", "klass_", "button", "klass_1", "footer", "div__", "component", "bind", "useState", "initialStore", "v", "main", "runInBody", "component", "main"]
}
